version: '3.7'

networks:
  gate:
    driver: bridge

services:
  postgres:
    container_name: postgres
    deploy:
      resources:
        limits:
          cpus: '0.2'
          memory: '250m'
    image: postgres:15
    environment:
      - POSTGRES_PASSWORD=${POSTGRES_PASSWORD}
    volumes:
      - postgres_gate_data:/var/lib/postgresql/data
    networks:
      - gate
    ports:
      - "5432:5432"
    restart: always

  redis:
    container_name: redis
    deploy:
      resources:
        limits:
          cpus: '0.1'
          memory: '100m'
    image: bitnami/redis:latest
    command: redis-server --requirepass ${REDIS_PASSWORD}
    environment:
      - ALLOW_EMPTY_PASSWORD=no
    volumes:
      - redis_gate_data:/var/lib/redis
    networks:
      - gate
    ports:
      - "6379:6379"
    restart: always

  rabbitmq:
    container_name: rabbitmq
    deploy:
      resources:
        limits:
          cpus: '0.1'
          memory: '250m'
    image: rabbitmq:3.8-management
    environment:
      - RABBITMQ_ERLANG_COOKIE=SWQOKODSQALRPCLNMEQG
      - RABBITMQ_DEFAULT_USER=${RABBITMQ_USERNAME}
      - RABBITMQ_DEFAULT_PASS=${RABBITMQ_PASSWORD}
      - RABBITMQ_DEFAULT_VHOST=/
    volumes:
      - rabbitmq_gate_data:/var/lib/rabbitmq
    networks:
      - gate
    ports:
      - "15672:15672"
      - "5672:5672"
    restart: always

  chipmunk:
    container_name: chipmunk
    deploy:
      resources:
        limits:
          cpus: '0.2'
          memory: '250m'
    image: chipmunk:${CHIPMUNK_VERSION}
    build:
      context: ..
      dockerfile: services/chipmunk/deploy/Dockerfile
      args:
        VERSION: ${CHIPMUNK_VERSION}
    volumes:
      - /srv/configs/chipmunk/app.yaml:/app/configs/config.yaml
    networks:
      - gate
#    depends_on:
#      - postgres
    #      - rabbitmq
    restart: always

  core:
    container_name: core
    deploy:
      resources:
        limits:
          cpus: '0.1'
          memory: '250m'
    image: core:${CORE_VERSION}
    build:
      context: ..
      dockerfile: services/core/deploy/Dockerfile
      args:
        VERSION: ${CORE_VERSION}
    volumes:
      - /srv/configs/core/app.yaml:/app/configs/config.yaml
    networks:
      - gate
#    depends_on:
#      - postgres
    #      - rabbitmq
    restart: always

  eagle:
    container_name: eagle
    deploy:
      resources:
        limits:
          cpus: '0.06'
          memory: '50m'
    image: eagle:${EAGLE_VERSION}
    build:
      context: ..
      dockerfile: services/eagle/deploy/Dockerfile
      args:
        VERSION: ${EAGLE_VERSION}
    volumes:
      - /srv/configs/eagle/app.yaml:/app/configs/config.yaml
    networks:
      - gate
#    depends_on:
#      - postgres
    #      - redis
    restart: always

  raven:
    container_name: raven
    deploy:
      resources:
        limits:
          cpus: '0.02'
          memory: '50m'
    image: raven:${RAVEN_VERSION}
    build:
      context: ..
      dockerfile: services/raven/deploy/Dockerfile
      args:
        VERSION: ${RAVEN_VERSION}
    volumes:
      - /srv/configs/raven/app.yaml:/app/configs/config.yaml
    ports:
      - "8080:8080"
    networks:
      - gate
    depends_on:
      - postgres
    restart: always

  network:
    container_name: network
    deploy:
      resources:
        limits:
          cpus: '0.2'
          memory: '250m'
    image: network:${NETWORK_VERSION}
    build:
      context: ..
      dockerfile: services/network/deploy/Dockerfile
      args:
        VERSION: ${NETWORK_VERSION}
    volumes:
      - /srv/configs/network/app.yaml:/app/configs/config.yaml
    networks:
      - gate
#    depends_on:
#      - postgres
    restart: always

#  telegram_bot:
#    container_name: telegramBot
#    deploy:
#      resources:
#        limits:
#          cpus: '0.02'
#          memory: '50m'
#    image: telegram_bot:${TELEGRAM_BOT_VERSION}
#    build:
#      context: ..
#      dockerfile: services/telegramBot/deploy/Dockerfile
#      args:
#        VERSION: ${TELEGRAM_BOT_VERSION}
#    volumes:
#      - /srv/configs/telegramBot/app.yaml:/app/configs/config.yaml
#    networks:
#      - gate
##    depends_on:
##      - postgres
##      - redis
#    restart: always

volumes:
  postgres_gate_data:
  redis_gate_data:
  rabbitmq_gate_data:
