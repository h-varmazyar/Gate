version: '3.7'

networks:
  gate:
    external: true

services:
  postgres:
    container_name: postgreSQL
    image: postgres
    environment:
      - POSTGRES_USER=postgres
      - POSTGRES_PASSWORD=postgres
    volumes:
      - postgres_data:/var/lib/postgresql/data
    networks:
      - gate
    ports:
      - 5432:5432
    restart: always

  redis:
    container_name: redis
    image: bitnami/redis:latest
    command: redis-server --requirepass redis
    environment:
      - ALLOW_EMPTY_PASSWORD=no
    volumes:
      - redis_data:/var/lib/redis
    networks:
      - gate
    ports:
      - 6379:6379
    restart: always

  rabbitmq:
    container_name: rabbitmq
    image: rabbitmq:3.8-management
    environment:
      - RABBITMQ_ERLANG_COOKIE=SWQOKODSQALRPCLNMEQG
      - RABBITMQ_DEFAULT_USER=rabbitmq
      - RABBITMQ_DEFAULT_PASS=rabbitmq
      - RABBITMQ_DEFAULT_VHOST=/
    volumes:
      - rabbitmq_data:/var/lib/rabbitmq
    networks:
      - gate
    ports:
      - 15672:15672
      - 5672:5672
    restart: always

  chipmunk:
    container_name: chipmunk
    image: chipmunk:v2.1.3
    build:
      context: ..
      dockerfile: services/chipmunk/deploy/Dockerfile
      args:
        VERSION: v2.1.3
    volumes:
      - /srv/configs/chipmunk/app.yaml:/app/configs/config.yaml
    networks:
      - gate
    depends_on:
      - postgres
      - rabbitmq
    restart: always

  core:
    container_name: core
    image: core:v2.1.3
    build:
      context: ..
      dockerfile: services/core/deploy/Dockerfile
      args:
        VERSION: v2.1.3
    volumes:
      - /srv/configs/core/app.yaml:/app/configs/config.yaml
    networks:
      - gate
    depends_on:
      - postgres
      - rabbitmq
    restart: always

  eagle:
    container_name: eagle
    image: eagle:v1.1.3
    build:
      context: ..
      dockerfile: services/eagle/deploy/Dockerfile
      args:
        VERSION: v1.1.3
    volumes:
      - /srv/configs/eagle/app.yaml:/app/configs/config.yaml
    networks:
      - gate
    depends_on:
      - postgres
      - redis
    restart: always

  gateway:
    container_name: gateway
    image: gateway:v1.2.1
    build:
      context: ..
      dockerfile: services/gateway/deploy/Dockerfile
      args:
        VERSION: v1.2.1
    volumes:
      - /srv/configs/gateway/app.yaml:/app/configs/config.yaml
    ports:
      - 8080:8080
    networks:
      - gate
    depends_on:
      - postgres
      - redis
    restart: always

  network:
    container_name: network
    image: network:v1.2.5
    build:
      context: ..
      dockerfile: services/network/deploy/Dockerfile
      args:
        VERSION: v1.2.5
    volumes:
      - /srv/configs/network/app.yaml:/app/configs/config.yaml
    networks:
      - gate
    depends_on:
      - postgres
      - redis
    restart: always

  telegram_bot:
    container_name: telegramBot
    image: telegram_bot:v1.1.2
    build:
      context: ..
      dockerfile: services/telegramBot/deploy/Dockerfile
      args:
        VERSION: v1.1.2
    volumes:
      - /srv/configs/telegramBot/app.yaml:/app/configs/config.yaml
    networks:
      - gate
    depends_on:
      - postgres
      - redis
    restart: always

volumes:
  #  setup:
  #  elasticsearch:
  postgres_data:
  redis_data:
  rabbitmq_data:
