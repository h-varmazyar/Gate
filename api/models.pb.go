// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.26.0
// 	protoc        v3.6.1
// source: api/src/models.proto

package api

import (
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type Candle struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// @inject_tag: json:"updated_at"
	UpdatedAt int64 `protobuf:"varint,1,opt,name=UpdatedAt,proto3" json:"updated_at"`
	// @inject_tag: json:"created_at"
	CreatedAt int64 `protobuf:"varint,2,opt,name=CreatedAt,proto3" json:"created_at"`
	// @inject_tag: json:"volume"
	Volume float64 `protobuf:"fixed64,3,opt,name=Volume,proto3" json:"volume"`
	// @inject_tag: json:"amount"
	Amount float64 `protobuf:"fixed64,4,opt,name=Amount,proto3" json:"amount"`
	// @inject_tag: json:"close"
	Close float64 `protobuf:"fixed64,5,opt,name=Close,proto3" json:"close"`
	// @inject_tag: json:"open"
	Open float64 `protobuf:"fixed64,6,opt,name=Open,proto3" json:"open"`
	// @inject_tag: json:"time"
	Time int64 `protobuf:"varint,7,opt,name=Time,proto3" json:"time"`
	// @inject_tag: json:"high"
	High float64 `protobuf:"fixed64,8,opt,name=High,proto3" json:"high"`
	// @inject_tag: json:"low"
	Low float64 `protobuf:"fixed64,9,opt,name=Low,proto3" json:"low"`
	// @inject_tag: json:"id"
	ID uint64 `protobuf:"varint,10,opt,name=ID,proto3" json:"id"`
	// @inject_tag: json:"indicator_values"
	IndicatorValues *IndicatorValue `protobuf:"bytes,11,opt,name=indicatorValues,proto3" json:"indicator_values"`
}

func (x *Candle) Reset() {
	*x = Candle{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_src_models_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Candle) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Candle) ProtoMessage() {}

func (x *Candle) ProtoReflect() protoreflect.Message {
	mi := &file_api_src_models_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Candle.ProtoReflect.Descriptor instead.
func (*Candle) Descriptor() ([]byte, []int) {
	return file_api_src_models_proto_rawDescGZIP(), []int{0}
}

func (x *Candle) GetUpdatedAt() int64 {
	if x != nil {
		return x.UpdatedAt
	}
	return 0
}

func (x *Candle) GetCreatedAt() int64 {
	if x != nil {
		return x.CreatedAt
	}
	return 0
}

func (x *Candle) GetVolume() float64 {
	if x != nil {
		return x.Volume
	}
	return 0
}

func (x *Candle) GetAmount() float64 {
	if x != nil {
		return x.Amount
	}
	return 0
}

func (x *Candle) GetClose() float64 {
	if x != nil {
		return x.Close
	}
	return 0
}

func (x *Candle) GetOpen() float64 {
	if x != nil {
		return x.Open
	}
	return 0
}

func (x *Candle) GetTime() int64 {
	if x != nil {
		return x.Time
	}
	return 0
}

func (x *Candle) GetHigh() float64 {
	if x != nil {
		return x.High
	}
	return 0
}

func (x *Candle) GetLow() float64 {
	if x != nil {
		return x.Low
	}
	return 0
}

func (x *Candle) GetID() uint64 {
	if x != nil {
		return x.ID
	}
	return 0
}

func (x *Candle) GetIndicatorValues() *IndicatorValue {
	if x != nil {
		return x.IndicatorValues
	}
	return nil
}

type Candles struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// @inject_tag: json:"candles"
	Candles []*Candle `protobuf:"bytes,1,rep,name=Candles,proto3" json:"candles"`
}

func (x *Candles) Reset() {
	*x = Candles{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_src_models_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Candles) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Candles) ProtoMessage() {}

func (x *Candles) ProtoReflect() protoreflect.Message {
	mi := &file_api_src_models_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Candles.ProtoReflect.Descriptor instead.
func (*Candles) Descriptor() ([]byte, []int) {
	return file_api_src_models_proto_rawDescGZIP(), []int{1}
}

func (x *Candles) GetCandles() []*Candle {
	if x != nil {
		return x.Candles
	}
	return nil
}

type IndicatorValue struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// @inject_tag: json:"bollinger_bands"
	BollingerBands map[string]*BollingerBand `protobuf:"bytes,1,rep,name=BollingerBands,proto3" json:"bollinger_bands" protobuf_key:"bytes,1,opt,name=key,proto3" protobuf_val:"bytes,2,opt,name=value,proto3"`
	// @inject_tag: json:"moving_average"
	MovingAverages map[string]*MovingAverage `protobuf:"bytes,2,rep,name=MovingAverages,proto3" json:"moving_average" protobuf_key:"bytes,1,opt,name=key,proto3" protobuf_val:"bytes,2,opt,name=value,proto3"`
	// @inject_tag: json:"stochastics"
	Stochastics map[string]*Stochastic `protobuf:"bytes,3,rep,name=Stochastics,proto3" json:"stochastics" protobuf_key:"bytes,1,opt,name=key,proto3" protobuf_val:"bytes,2,opt,name=value,proto3"`
	// @inject_tag: json:"rsis"
	RSIs map[string]*RSI `protobuf:"bytes,4,rep,name=RSIs,proto3" json:"rsis" protobuf_key:"bytes,1,opt,name=key,proto3" protobuf_val:"bytes,2,opt,name=value,proto3"`
}

func (x *IndicatorValue) Reset() {
	*x = IndicatorValue{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_src_models_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *IndicatorValue) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*IndicatorValue) ProtoMessage() {}

func (x *IndicatorValue) ProtoReflect() protoreflect.Message {
	mi := &file_api_src_models_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use IndicatorValue.ProtoReflect.Descriptor instead.
func (*IndicatorValue) Descriptor() ([]byte, []int) {
	return file_api_src_models_proto_rawDescGZIP(), []int{2}
}

func (x *IndicatorValue) GetBollingerBands() map[string]*BollingerBand {
	if x != nil {
		return x.BollingerBands
	}
	return nil
}

func (x *IndicatorValue) GetMovingAverages() map[string]*MovingAverage {
	if x != nil {
		return x.MovingAverages
	}
	return nil
}

func (x *IndicatorValue) GetStochastics() map[string]*Stochastic {
	if x != nil {
		return x.Stochastics
	}
	return nil
}

func (x *IndicatorValue) GetRSIs() map[string]*RSI {
	if x != nil {
		return x.RSIs
	}
	return nil
}

type BollingerBand struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// @inject_tag: json:"upper_band"
	UpperBand float64 `protobuf:"fixed64,1,opt,name=UpperBand,proto3" json:"upper_band"`
	// @inject_tag: json:"lower_band"
	LowerBand float64 `protobuf:"fixed64,2,opt,name=LowerBand,proto3" json:"lower_band"`
	// @inject_tag: json:"ma"
	MA float64 `protobuf:"fixed64,3,opt,name=MA,proto3" json:"ma"`
}

func (x *BollingerBand) Reset() {
	*x = BollingerBand{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_src_models_proto_msgTypes[3]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *BollingerBand) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*BollingerBand) ProtoMessage() {}

func (x *BollingerBand) ProtoReflect() protoreflect.Message {
	mi := &file_api_src_models_proto_msgTypes[3]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use BollingerBand.ProtoReflect.Descriptor instead.
func (*BollingerBand) Descriptor() ([]byte, []int) {
	return file_api_src_models_proto_rawDescGZIP(), []int{3}
}

func (x *BollingerBand) GetUpperBand() float64 {
	if x != nil {
		return x.UpperBand
	}
	return 0
}

func (x *BollingerBand) GetLowerBand() float64 {
	if x != nil {
		return x.LowerBand
	}
	return 0
}

func (x *BollingerBand) GetMA() float64 {
	if x != nil {
		return x.MA
	}
	return 0
}

type MovingAverage struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// @inject_tag: json:"simple"
	Simple float64 `protobuf:"fixed64,1,opt,name=Simple,proto3" json:"simple"`
	// @inject_tag: json:"exponential"
	Exponential float64 `protobuf:"fixed64,2,opt,name=Exponential,proto3" json:"exponential"`
}

func (x *MovingAverage) Reset() {
	*x = MovingAverage{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_src_models_proto_msgTypes[4]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *MovingAverage) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*MovingAverage) ProtoMessage() {}

func (x *MovingAverage) ProtoReflect() protoreflect.Message {
	mi := &file_api_src_models_proto_msgTypes[4]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use MovingAverage.ProtoReflect.Descriptor instead.
func (*MovingAverage) Descriptor() ([]byte, []int) {
	return file_api_src_models_proto_rawDescGZIP(), []int{4}
}

func (x *MovingAverage) GetSimple() float64 {
	if x != nil {
		return x.Simple
	}
	return 0
}

func (x *MovingAverage) GetExponential() float64 {
	if x != nil {
		return x.Exponential
	}
	return 0
}

type Stochastic struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// @inject_tag: json:"index_k"
	IndexK float64 `protobuf:"fixed64,1,opt,name=IndexK,proto3" json:"index_k"`
	// @inject_tag: json:"index_d"
	IndexD float64 `protobuf:"fixed64,2,opt,name=IndexD,proto3" json:"index_d"`
}

func (x *Stochastic) Reset() {
	*x = Stochastic{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_src_models_proto_msgTypes[5]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Stochastic) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Stochastic) ProtoMessage() {}

func (x *Stochastic) ProtoReflect() protoreflect.Message {
	mi := &file_api_src_models_proto_msgTypes[5]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Stochastic.ProtoReflect.Descriptor instead.
func (*Stochastic) Descriptor() ([]byte, []int) {
	return file_api_src_models_proto_rawDescGZIP(), []int{5}
}

func (x *Stochastic) GetIndexK() float64 {
	if x != nil {
		return x.IndexK
	}
	return 0
}

func (x *Stochastic) GetIndexD() float64 {
	if x != nil {
		return x.IndexD
	}
	return 0
}

type RSI struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// @inject_tag: json:"rsi"
	RSI float64 `protobuf:"fixed64,1,opt,name=RSI,proto3" json:"rsi"`
}

func (x *RSI) Reset() {
	*x = RSI{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_src_models_proto_msgTypes[6]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *RSI) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RSI) ProtoMessage() {}

func (x *RSI) ProtoReflect() protoreflect.Message {
	mi := &file_api_src_models_proto_msgTypes[6]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RSI.ProtoReflect.Descriptor instead.
func (*RSI) Descriptor() ([]byte, []int) {
	return file_api_src_models_proto_rawDescGZIP(), []int{6}
}

func (x *RSI) GetRSI() float64 {
	if x != nil {
		return x.RSI
	}
	return 0
}

var File_api_src_models_proto protoreflect.FileDescriptor

var file_api_src_models_proto_rawDesc = []byte{
	0x0a, 0x14, 0x61, 0x70, 0x69, 0x2f, 0x73, 0x72, 0x63, 0x2f, 0x6d, 0x6f, 0x64, 0x65, 0x6c, 0x73,
	0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x12, 0x03, 0x61, 0x70, 0x69, 0x22, 0xa7, 0x02, 0x0a, 0x06,
	0x43, 0x61, 0x6e, 0x64, 0x6c, 0x65, 0x12, 0x1c, 0x0a, 0x09, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65,
	0x64, 0x41, 0x74, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x52, 0x09, 0x55, 0x70, 0x64, 0x61, 0x74,
	0x65, 0x64, 0x41, 0x74, 0x12, 0x1c, 0x0a, 0x09, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x64, 0x41,
	0x74, 0x18, 0x02, 0x20, 0x01, 0x28, 0x03, 0x52, 0x09, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x64,
	0x41, 0x74, 0x12, 0x16, 0x0a, 0x06, 0x56, 0x6f, 0x6c, 0x75, 0x6d, 0x65, 0x18, 0x03, 0x20, 0x01,
	0x28, 0x01, 0x52, 0x06, 0x56, 0x6f, 0x6c, 0x75, 0x6d, 0x65, 0x12, 0x16, 0x0a, 0x06, 0x41, 0x6d,
	0x6f, 0x75, 0x6e, 0x74, 0x18, 0x04, 0x20, 0x01, 0x28, 0x01, 0x52, 0x06, 0x41, 0x6d, 0x6f, 0x75,
	0x6e, 0x74, 0x12, 0x14, 0x0a, 0x05, 0x43, 0x6c, 0x6f, 0x73, 0x65, 0x18, 0x05, 0x20, 0x01, 0x28,
	0x01, 0x52, 0x05, 0x43, 0x6c, 0x6f, 0x73, 0x65, 0x12, 0x12, 0x0a, 0x04, 0x4f, 0x70, 0x65, 0x6e,
	0x18, 0x06, 0x20, 0x01, 0x28, 0x01, 0x52, 0x04, 0x4f, 0x70, 0x65, 0x6e, 0x12, 0x12, 0x0a, 0x04,
	0x54, 0x69, 0x6d, 0x65, 0x18, 0x07, 0x20, 0x01, 0x28, 0x03, 0x52, 0x04, 0x54, 0x69, 0x6d, 0x65,
	0x12, 0x12, 0x0a, 0x04, 0x48, 0x69, 0x67, 0x68, 0x18, 0x08, 0x20, 0x01, 0x28, 0x01, 0x52, 0x04,
	0x48, 0x69, 0x67, 0x68, 0x12, 0x10, 0x0a, 0x03, 0x4c, 0x6f, 0x77, 0x18, 0x09, 0x20, 0x01, 0x28,
	0x01, 0x52, 0x03, 0x4c, 0x6f, 0x77, 0x12, 0x0e, 0x0a, 0x02, 0x49, 0x44, 0x18, 0x0a, 0x20, 0x01,
	0x28, 0x04, 0x52, 0x02, 0x49, 0x44, 0x12, 0x3d, 0x0a, 0x0f, 0x69, 0x6e, 0x64, 0x69, 0x63, 0x61,
	0x74, 0x6f, 0x72, 0x56, 0x61, 0x6c, 0x75, 0x65, 0x73, 0x18, 0x0b, 0x20, 0x01, 0x28, 0x0b, 0x32,
	0x13, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x49, 0x6e, 0x64, 0x69, 0x63, 0x61, 0x74, 0x6f, 0x72, 0x56,
	0x61, 0x6c, 0x75, 0x65, 0x52, 0x0f, 0x69, 0x6e, 0x64, 0x69, 0x63, 0x61, 0x74, 0x6f, 0x72, 0x56,
	0x61, 0x6c, 0x75, 0x65, 0x73, 0x22, 0x30, 0x0a, 0x07, 0x43, 0x61, 0x6e, 0x64, 0x6c, 0x65, 0x73,
	0x12, 0x25, 0x0a, 0x07, 0x43, 0x61, 0x6e, 0x64, 0x6c, 0x65, 0x73, 0x18, 0x01, 0x20, 0x03, 0x28,
	0x0b, 0x32, 0x0b, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x43, 0x61, 0x6e, 0x64, 0x6c, 0x65, 0x52, 0x07,
	0x43, 0x61, 0x6e, 0x64, 0x6c, 0x65, 0x73, 0x22, 0xef, 0x04, 0x0a, 0x0e, 0x49, 0x6e, 0x64, 0x69,
	0x63, 0x61, 0x74, 0x6f, 0x72, 0x56, 0x61, 0x6c, 0x75, 0x65, 0x12, 0x4f, 0x0a, 0x0e, 0x42, 0x6f,
	0x6c, 0x6c, 0x69, 0x6e, 0x67, 0x65, 0x72, 0x42, 0x61, 0x6e, 0x64, 0x73, 0x18, 0x01, 0x20, 0x03,
	0x28, 0x0b, 0x32, 0x27, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x49, 0x6e, 0x64, 0x69, 0x63, 0x61, 0x74,
	0x6f, 0x72, 0x56, 0x61, 0x6c, 0x75, 0x65, 0x2e, 0x42, 0x6f, 0x6c, 0x6c, 0x69, 0x6e, 0x67, 0x65,
	0x72, 0x42, 0x61, 0x6e, 0x64, 0x73, 0x45, 0x6e, 0x74, 0x72, 0x79, 0x52, 0x0e, 0x42, 0x6f, 0x6c,
	0x6c, 0x69, 0x6e, 0x67, 0x65, 0x72, 0x42, 0x61, 0x6e, 0x64, 0x73, 0x12, 0x4f, 0x0a, 0x0e, 0x4d,
	0x6f, 0x76, 0x69, 0x6e, 0x67, 0x41, 0x76, 0x65, 0x72, 0x61, 0x67, 0x65, 0x73, 0x18, 0x02, 0x20,
	0x03, 0x28, 0x0b, 0x32, 0x27, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x49, 0x6e, 0x64, 0x69, 0x63, 0x61,
	0x74, 0x6f, 0x72, 0x56, 0x61, 0x6c, 0x75, 0x65, 0x2e, 0x4d, 0x6f, 0x76, 0x69, 0x6e, 0x67, 0x41,
	0x76, 0x65, 0x72, 0x61, 0x67, 0x65, 0x73, 0x45, 0x6e, 0x74, 0x72, 0x79, 0x52, 0x0e, 0x4d, 0x6f,
	0x76, 0x69, 0x6e, 0x67, 0x41, 0x76, 0x65, 0x72, 0x61, 0x67, 0x65, 0x73, 0x12, 0x46, 0x0a, 0x0b,
	0x53, 0x74, 0x6f, 0x63, 0x68, 0x61, 0x73, 0x74, 0x69, 0x63, 0x73, 0x18, 0x03, 0x20, 0x03, 0x28,
	0x0b, 0x32, 0x24, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x49, 0x6e, 0x64, 0x69, 0x63, 0x61, 0x74, 0x6f,
	0x72, 0x56, 0x61, 0x6c, 0x75, 0x65, 0x2e, 0x53, 0x74, 0x6f, 0x63, 0x68, 0x61, 0x73, 0x74, 0x69,
	0x63, 0x73, 0x45, 0x6e, 0x74, 0x72, 0x79, 0x52, 0x0b, 0x53, 0x74, 0x6f, 0x63, 0x68, 0x61, 0x73,
	0x74, 0x69, 0x63, 0x73, 0x12, 0x31, 0x0a, 0x04, 0x52, 0x53, 0x49, 0x73, 0x18, 0x04, 0x20, 0x03,
	0x28, 0x0b, 0x32, 0x1d, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x49, 0x6e, 0x64, 0x69, 0x63, 0x61, 0x74,
	0x6f, 0x72, 0x56, 0x61, 0x6c, 0x75, 0x65, 0x2e, 0x52, 0x53, 0x49, 0x73, 0x45, 0x6e, 0x74, 0x72,
	0x79, 0x52, 0x04, 0x52, 0x53, 0x49, 0x73, 0x1a, 0x55, 0x0a, 0x13, 0x42, 0x6f, 0x6c, 0x6c, 0x69,
	0x6e, 0x67, 0x65, 0x72, 0x42, 0x61, 0x6e, 0x64, 0x73, 0x45, 0x6e, 0x74, 0x72, 0x79, 0x12, 0x10,
	0x0a, 0x03, 0x6b, 0x65, 0x79, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x6b, 0x65, 0x79,
	0x12, 0x28, 0x0a, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32,
	0x12, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x42, 0x6f, 0x6c, 0x6c, 0x69, 0x6e, 0x67, 0x65, 0x72, 0x42,
	0x61, 0x6e, 0x64, 0x52, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x3a, 0x02, 0x38, 0x01, 0x1a, 0x55,
	0x0a, 0x13, 0x4d, 0x6f, 0x76, 0x69, 0x6e, 0x67, 0x41, 0x76, 0x65, 0x72, 0x61, 0x67, 0x65, 0x73,
	0x45, 0x6e, 0x74, 0x72, 0x79, 0x12, 0x10, 0x0a, 0x03, 0x6b, 0x65, 0x79, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x03, 0x6b, 0x65, 0x79, 0x12, 0x28, 0x0a, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65,
	0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x12, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x4d, 0x6f, 0x76,
	0x69, 0x6e, 0x67, 0x41, 0x76, 0x65, 0x72, 0x61, 0x67, 0x65, 0x52, 0x05, 0x76, 0x61, 0x6c, 0x75,
	0x65, 0x3a, 0x02, 0x38, 0x01, 0x1a, 0x4f, 0x0a, 0x10, 0x53, 0x74, 0x6f, 0x63, 0x68, 0x61, 0x73,
	0x74, 0x69, 0x63, 0x73, 0x45, 0x6e, 0x74, 0x72, 0x79, 0x12, 0x10, 0x0a, 0x03, 0x6b, 0x65, 0x79,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x6b, 0x65, 0x79, 0x12, 0x25, 0x0a, 0x05, 0x76,
	0x61, 0x6c, 0x75, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x0f, 0x2e, 0x61, 0x70, 0x69,
	0x2e, 0x53, 0x74, 0x6f, 0x63, 0x68, 0x61, 0x73, 0x74, 0x69, 0x63, 0x52, 0x05, 0x76, 0x61, 0x6c,
	0x75, 0x65, 0x3a, 0x02, 0x38, 0x01, 0x1a, 0x41, 0x0a, 0x09, 0x52, 0x53, 0x49, 0x73, 0x45, 0x6e,
	0x74, 0x72, 0x79, 0x12, 0x10, 0x0a, 0x03, 0x6b, 0x65, 0x79, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x03, 0x6b, 0x65, 0x79, 0x12, 0x1e, 0x0a, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x18, 0x02,
	0x20, 0x01, 0x28, 0x0b, 0x32, 0x08, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x52, 0x53, 0x49, 0x52, 0x05,
	0x76, 0x61, 0x6c, 0x75, 0x65, 0x3a, 0x02, 0x38, 0x01, 0x22, 0x5b, 0x0a, 0x0d, 0x42, 0x6f, 0x6c,
	0x6c, 0x69, 0x6e, 0x67, 0x65, 0x72, 0x42, 0x61, 0x6e, 0x64, 0x12, 0x1c, 0x0a, 0x09, 0x55, 0x70,
	0x70, 0x65, 0x72, 0x42, 0x61, 0x6e, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x01, 0x52, 0x09, 0x55,
	0x70, 0x70, 0x65, 0x72, 0x42, 0x61, 0x6e, 0x64, 0x12, 0x1c, 0x0a, 0x09, 0x4c, 0x6f, 0x77, 0x65,
	0x72, 0x42, 0x61, 0x6e, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x01, 0x52, 0x09, 0x4c, 0x6f, 0x77,
	0x65, 0x72, 0x42, 0x61, 0x6e, 0x64, 0x12, 0x0e, 0x0a, 0x02, 0x4d, 0x41, 0x18, 0x03, 0x20, 0x01,
	0x28, 0x01, 0x52, 0x02, 0x4d, 0x41, 0x22, 0x49, 0x0a, 0x0d, 0x4d, 0x6f, 0x76, 0x69, 0x6e, 0x67,
	0x41, 0x76, 0x65, 0x72, 0x61, 0x67, 0x65, 0x12, 0x16, 0x0a, 0x06, 0x53, 0x69, 0x6d, 0x70, 0x6c,
	0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x01, 0x52, 0x06, 0x53, 0x69, 0x6d, 0x70, 0x6c, 0x65, 0x12,
	0x20, 0x0a, 0x0b, 0x45, 0x78, 0x70, 0x6f, 0x6e, 0x65, 0x6e, 0x74, 0x69, 0x61, 0x6c, 0x18, 0x02,
	0x20, 0x01, 0x28, 0x01, 0x52, 0x0b, 0x45, 0x78, 0x70, 0x6f, 0x6e, 0x65, 0x6e, 0x74, 0x69, 0x61,
	0x6c, 0x22, 0x3c, 0x0a, 0x0a, 0x53, 0x74, 0x6f, 0x63, 0x68, 0x61, 0x73, 0x74, 0x69, 0x63, 0x12,
	0x16, 0x0a, 0x06, 0x49, 0x6e, 0x64, 0x65, 0x78, 0x4b, 0x18, 0x01, 0x20, 0x01, 0x28, 0x01, 0x52,
	0x06, 0x49, 0x6e, 0x64, 0x65, 0x78, 0x4b, 0x12, 0x16, 0x0a, 0x06, 0x49, 0x6e, 0x64, 0x65, 0x78,
	0x44, 0x18, 0x02, 0x20, 0x01, 0x28, 0x01, 0x52, 0x06, 0x49, 0x6e, 0x64, 0x65, 0x78, 0x44, 0x22,
	0x17, 0x0a, 0x03, 0x52, 0x53, 0x49, 0x12, 0x10, 0x0a, 0x03, 0x52, 0x53, 0x49, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x01, 0x52, 0x03, 0x52, 0x53, 0x49, 0x42, 0x21, 0x5a, 0x1f, 0x67, 0x69, 0x74, 0x68,
	0x75, 0x62, 0x2e, 0x63, 0x6f, 0x6d, 0x2f, 0x68, 0x2d, 0x76, 0x61, 0x72, 0x6d, 0x61, 0x7a, 0x79,
	0x61, 0x72, 0x2f, 0x47, 0x61, 0x74, 0x65, 0x2f, 0x61, 0x70, 0x69, 0x62, 0x06, 0x70, 0x72, 0x6f,
	0x74, 0x6f, 0x33,
}

var (
	file_api_src_models_proto_rawDescOnce sync.Once
	file_api_src_models_proto_rawDescData = file_api_src_models_proto_rawDesc
)

func file_api_src_models_proto_rawDescGZIP() []byte {
	file_api_src_models_proto_rawDescOnce.Do(func() {
		file_api_src_models_proto_rawDescData = protoimpl.X.CompressGZIP(file_api_src_models_proto_rawDescData)
	})
	return file_api_src_models_proto_rawDescData
}

var file_api_src_models_proto_msgTypes = make([]protoimpl.MessageInfo, 11)
var file_api_src_models_proto_goTypes = []interface{}{
	(*Candle)(nil),         // 0: api.Candle
	(*Candles)(nil),        // 1: api.Candles
	(*IndicatorValue)(nil), // 2: api.IndicatorValue
	(*BollingerBand)(nil),  // 3: api.BollingerBand
	(*MovingAverage)(nil),  // 4: api.MovingAverage
	(*Stochastic)(nil),     // 5: api.Stochastic
	(*RSI)(nil),            // 6: api.RSI
	nil,                    // 7: api.IndicatorValue.BollingerBandsEntry
	nil,                    // 8: api.IndicatorValue.MovingAveragesEntry
	nil,                    // 9: api.IndicatorValue.StochasticsEntry
	nil,                    // 10: api.IndicatorValue.RSIsEntry
}
var file_api_src_models_proto_depIdxs = []int32{
	2,  // 0: api.Candle.indicatorValues:type_name -> api.IndicatorValue
	0,  // 1: api.Candles.Candles:type_name -> api.Candle
	7,  // 2: api.IndicatorValue.BollingerBands:type_name -> api.IndicatorValue.BollingerBandsEntry
	8,  // 3: api.IndicatorValue.MovingAverages:type_name -> api.IndicatorValue.MovingAveragesEntry
	9,  // 4: api.IndicatorValue.Stochastics:type_name -> api.IndicatorValue.StochasticsEntry
	10, // 5: api.IndicatorValue.RSIs:type_name -> api.IndicatorValue.RSIsEntry
	3,  // 6: api.IndicatorValue.BollingerBandsEntry.value:type_name -> api.BollingerBand
	4,  // 7: api.IndicatorValue.MovingAveragesEntry.value:type_name -> api.MovingAverage
	5,  // 8: api.IndicatorValue.StochasticsEntry.value:type_name -> api.Stochastic
	6,  // 9: api.IndicatorValue.RSIsEntry.value:type_name -> api.RSI
	10, // [10:10] is the sub-list for method output_type
	10, // [10:10] is the sub-list for method input_type
	10, // [10:10] is the sub-list for extension type_name
	10, // [10:10] is the sub-list for extension extendee
	0,  // [0:10] is the sub-list for field type_name
}

func init() { file_api_src_models_proto_init() }
func file_api_src_models_proto_init() {
	if File_api_src_models_proto != nil {
		return
	}
	if !protoimpl.UnsafeEnabled {
		file_api_src_models_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Candle); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_src_models_proto_msgTypes[1].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Candles); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_src_models_proto_msgTypes[2].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*IndicatorValue); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_src_models_proto_msgTypes[3].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*BollingerBand); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_src_models_proto_msgTypes[4].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*MovingAverage); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_src_models_proto_msgTypes[5].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Stochastic); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_src_models_proto_msgTypes[6].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*RSI); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_api_src_models_proto_rawDesc,
			NumEnums:      0,
			NumMessages:   11,
			NumExtensions: 0,
			NumServices:   0,
		},
		GoTypes:           file_api_src_models_proto_goTypes,
		DependencyIndexes: file_api_src_models_proto_depIdxs,
		MessageInfos:      file_api_src_models_proto_msgTypes,
	}.Build()
	File_api_src_models_proto = out.File
	file_api_src_models_proto_rawDesc = nil
	file_api_src_models_proto_goTypes = nil
	file_api_src_models_proto_depIdxs = nil
}
