// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.26.0
// 	protoc        v3.6.1
// source: services/eagle/api/src/signal.proto

package api

import (
	api "github.com/h-varmazyar/Gate/api"
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type StartWorkerReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// @inject_tag: json:"brokerage_id"
	BrokerageID string `protobuf:"bytes,1,opt,name=BrokerageID,proto3" json:"brokerage_id"`
	// @inject_tag: json:"strategy_id"
	StrategyID string `protobuf:"bytes,2,opt,name=StrategyID,proto3" json:"strategy_id"`
}

func (x *StartWorkerReq) Reset() {
	*x = StartWorkerReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_services_eagle_api_src_signal_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *StartWorkerReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*StartWorkerReq) ProtoMessage() {}

func (x *StartWorkerReq) ProtoReflect() protoreflect.Message {
	mi := &file_services_eagle_api_src_signal_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use StartWorkerReq.ProtoReflect.Descriptor instead.
func (*StartWorkerReq) Descriptor() ([]byte, []int) {
	return file_services_eagle_api_src_signal_proto_rawDescGZIP(), []int{0}
}

func (x *StartWorkerReq) GetBrokerageID() string {
	if x != nil {
		return x.BrokerageID
	}
	return ""
}

func (x *StartWorkerReq) GetStrategyID() string {
	if x != nil {
		return x.StrategyID
	}
	return ""
}

type CandleData struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// @inject_tag: json:"candles"
	Candles []*api.Candle `protobuf:"bytes,1,rep,name=Candles,proto3" json:"candles"`
	// @inject_tag: json:"market_id"
	MarketID string `protobuf:"bytes,2,opt,name=MarketID,proto3" json:"market_id"`
	// @inject_tag: json:"market_name"
	MarketName string `protobuf:"bytes,3,opt,name=MarketName,proto3" json:"market_name"`
}

func (x *CandleData) Reset() {
	*x = CandleData{}
	if protoimpl.UnsafeEnabled {
		mi := &file_services_eagle_api_src_signal_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CandleData) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CandleData) ProtoMessage() {}

func (x *CandleData) ProtoReflect() protoreflect.Message {
	mi := &file_services_eagle_api_src_signal_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CandleData.ProtoReflect.Descriptor instead.
func (*CandleData) Descriptor() ([]byte, []int) {
	return file_services_eagle_api_src_signal_proto_rawDescGZIP(), []int{1}
}

func (x *CandleData) GetCandles() []*api.Candle {
	if x != nil {
		return x.Candles
	}
	return nil
}

func (x *CandleData) GetMarketID() string {
	if x != nil {
		return x.MarketID
	}
	return ""
}

func (x *CandleData) GetMarketName() string {
	if x != nil {
		return x.MarketName
	}
	return ""
}

var File_services_eagle_api_src_signal_proto protoreflect.FileDescriptor

var file_services_eagle_api_src_signal_proto_rawDesc = []byte{
	0x0a, 0x23, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x73, 0x2f, 0x65, 0x61, 0x67, 0x6c, 0x65,
	0x2f, 0x61, 0x70, 0x69, 0x2f, 0x73, 0x72, 0x63, 0x2f, 0x73, 0x69, 0x67, 0x6e, 0x61, 0x6c, 0x2e,
	0x70, 0x72, 0x6f, 0x74, 0x6f, 0x12, 0x08, 0x65, 0x61, 0x67, 0x6c, 0x65, 0x41, 0x70, 0x69, 0x1a,
	0x12, 0x61, 0x70, 0x69, 0x2f, 0x73, 0x72, 0x63, 0x2f, 0x6d, 0x69, 0x73, 0x63, 0x2e, 0x70, 0x72,
	0x6f, 0x74, 0x6f, 0x1a, 0x14, 0x61, 0x70, 0x69, 0x2f, 0x73, 0x72, 0x63, 0x2f, 0x6d, 0x6f, 0x64,
	0x65, 0x6c, 0x73, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x22, 0x52, 0x0a, 0x0e, 0x53, 0x74, 0x61,
	0x72, 0x74, 0x57, 0x6f, 0x72, 0x6b, 0x65, 0x72, 0x52, 0x65, 0x71, 0x12, 0x20, 0x0a, 0x0b, 0x42,
	0x72, 0x6f, 0x6b, 0x65, 0x72, 0x61, 0x67, 0x65, 0x49, 0x44, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x0b, 0x42, 0x72, 0x6f, 0x6b, 0x65, 0x72, 0x61, 0x67, 0x65, 0x49, 0x44, 0x12, 0x1e, 0x0a,
	0x0a, 0x53, 0x74, 0x72, 0x61, 0x74, 0x65, 0x67, 0x79, 0x49, 0x44, 0x18, 0x02, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x0a, 0x53, 0x74, 0x72, 0x61, 0x74, 0x65, 0x67, 0x79, 0x49, 0x44, 0x22, 0x6f, 0x0a,
	0x0a, 0x43, 0x61, 0x6e, 0x64, 0x6c, 0x65, 0x44, 0x61, 0x74, 0x61, 0x12, 0x25, 0x0a, 0x07, 0x43,
	0x61, 0x6e, 0x64, 0x6c, 0x65, 0x73, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x0b, 0x2e, 0x61,
	0x70, 0x69, 0x2e, 0x43, 0x61, 0x6e, 0x64, 0x6c, 0x65, 0x52, 0x07, 0x43, 0x61, 0x6e, 0x64, 0x6c,
	0x65, 0x73, 0x12, 0x1a, 0x0a, 0x08, 0x4d, 0x61, 0x72, 0x6b, 0x65, 0x74, 0x49, 0x44, 0x18, 0x02,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x4d, 0x61, 0x72, 0x6b, 0x65, 0x74, 0x49, 0x44, 0x12, 0x1e,
	0x0a, 0x0a, 0x4d, 0x61, 0x72, 0x6b, 0x65, 0x74, 0x4e, 0x61, 0x6d, 0x65, 0x18, 0x03, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x0a, 0x4d, 0x61, 0x72, 0x6b, 0x65, 0x74, 0x4e, 0x61, 0x6d, 0x65, 0x32, 0x99,
	0x01, 0x0a, 0x0d, 0x73, 0x69, 0x67, 0x6e, 0x61, 0x6c, 0x53, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65,
	0x12, 0x32, 0x0a, 0x0b, 0x53, 0x74, 0x61, 0x72, 0x74, 0x57, 0x6f, 0x72, 0x6b, 0x65, 0x72, 0x12,
	0x18, 0x2e, 0x65, 0x61, 0x67, 0x6c, 0x65, 0x41, 0x70, 0x69, 0x2e, 0x53, 0x74, 0x61, 0x72, 0x74,
	0x57, 0x6f, 0x72, 0x6b, 0x65, 0x72, 0x52, 0x65, 0x71, 0x1a, 0x09, 0x2e, 0x61, 0x70, 0x69, 0x2e,
	0x56, 0x6f, 0x69, 0x64, 0x12, 0x22, 0x0a, 0x0a, 0x53, 0x74, 0x6f, 0x70, 0x57, 0x6f, 0x72, 0x6b,
	0x65, 0x72, 0x12, 0x09, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x56, 0x6f, 0x69, 0x64, 0x1a, 0x09, 0x2e,
	0x61, 0x70, 0x69, 0x2e, 0x56, 0x6f, 0x69, 0x64, 0x12, 0x30, 0x0a, 0x0d, 0x41, 0x64, 0x64, 0x43,
	0x61, 0x6e, 0x64, 0x6c, 0x65, 0x44, 0x61, 0x74, 0x61, 0x12, 0x14, 0x2e, 0x65, 0x61, 0x67, 0x6c,
	0x65, 0x41, 0x70, 0x69, 0x2e, 0x43, 0x61, 0x6e, 0x64, 0x6c, 0x65, 0x44, 0x61, 0x74, 0x61, 0x1a,
	0x09, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x56, 0x6f, 0x69, 0x64, 0x42, 0x30, 0x5a, 0x2e, 0x67, 0x69,
	0x74, 0x68, 0x75, 0x62, 0x2e, 0x63, 0x6f, 0x6d, 0x2f, 0x68, 0x2d, 0x76, 0x61, 0x72, 0x6d, 0x61,
	0x7a, 0x79, 0x61, 0x72, 0x2f, 0x47, 0x61, 0x74, 0x65, 0x2f, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63,
	0x65, 0x73, 0x2f, 0x65, 0x61, 0x67, 0x6c, 0x65, 0x2f, 0x61, 0x70, 0x69, 0x62, 0x06, 0x70, 0x72,
	0x6f, 0x74, 0x6f, 0x33,
}

var (
	file_services_eagle_api_src_signal_proto_rawDescOnce sync.Once
	file_services_eagle_api_src_signal_proto_rawDescData = file_services_eagle_api_src_signal_proto_rawDesc
)

func file_services_eagle_api_src_signal_proto_rawDescGZIP() []byte {
	file_services_eagle_api_src_signal_proto_rawDescOnce.Do(func() {
		file_services_eagle_api_src_signal_proto_rawDescData = protoimpl.X.CompressGZIP(file_services_eagle_api_src_signal_proto_rawDescData)
	})
	return file_services_eagle_api_src_signal_proto_rawDescData
}

var file_services_eagle_api_src_signal_proto_msgTypes = make([]protoimpl.MessageInfo, 2)
var file_services_eagle_api_src_signal_proto_goTypes = []interface{}{
	(*StartWorkerReq)(nil), // 0: eagleApi.StartWorkerReq
	(*CandleData)(nil),     // 1: eagleApi.CandleData
	(*api.Candle)(nil),     // 2: api.Candle
	(*api.Void)(nil),       // 3: api.Void
}
var file_services_eagle_api_src_signal_proto_depIdxs = []int32{
	2, // 0: eagleApi.CandleData.Candles:type_name -> api.Candle
	0, // 1: eagleApi.signalService.StartWorker:input_type -> eagleApi.StartWorkerReq
	3, // 2: eagleApi.signalService.StopWorker:input_type -> api.Void
	1, // 3: eagleApi.signalService.AddCandleData:input_type -> eagleApi.CandleData
	3, // 4: eagleApi.signalService.StartWorker:output_type -> api.Void
	3, // 5: eagleApi.signalService.StopWorker:output_type -> api.Void
	3, // 6: eagleApi.signalService.AddCandleData:output_type -> api.Void
	4, // [4:7] is the sub-list for method output_type
	1, // [1:4] is the sub-list for method input_type
	1, // [1:1] is the sub-list for extension type_name
	1, // [1:1] is the sub-list for extension extendee
	0, // [0:1] is the sub-list for field type_name
}

func init() { file_services_eagle_api_src_signal_proto_init() }
func file_services_eagle_api_src_signal_proto_init() {
	if File_services_eagle_api_src_signal_proto != nil {
		return
	}
	if !protoimpl.UnsafeEnabled {
		file_services_eagle_api_src_signal_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*StartWorkerReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_services_eagle_api_src_signal_proto_msgTypes[1].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CandleData); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_services_eagle_api_src_signal_proto_rawDesc,
			NumEnums:      0,
			NumMessages:   2,
			NumExtensions: 0,
			NumServices:   1,
		},
		GoTypes:           file_services_eagle_api_src_signal_proto_goTypes,
		DependencyIndexes: file_services_eagle_api_src_signal_proto_depIdxs,
		MessageInfos:      file_services_eagle_api_src_signal_proto_msgTypes,
	}.Build()
	File_services_eagle_api_src_signal_proto = out.File
	file_services_eagle_api_src_signal_proto_rawDesc = nil
	file_services_eagle_api_src_signal_proto_goTypes = nil
	file_services_eagle_api_src_signal_proto_depIdxs = nil
}
