syntax = "proto3";
package eagleApi;
option go_package = "github.com/h-varmazyar/Gate/services/eagle/api";
import "api/src/misc.proto";
import "services/chipmunk/api/src/indicator.proto";

service StrategyService {
  rpc Create(CreateStrategyReq) returns(Strategy);
  rpc Return(ReturnStrategyReq) returns(Strategy);
  rpc List(api.Void) returns (Strategies);
}

message Strategy {
  // @inject_tag: json:"id"
  string ID = 1;
  // @inject_tag: json:"name"
  string Name = 2;
  // @inject_tag: json:"description"
  string Description = 3;
  // @inject_tag: json:"min_daily_profit"
  string MinDailyProfit = 4;
  // @inject_tag: json:"min_profit_per_trade"
  string MinProfitPerTrade = 5;
  // @inject_tag: json:"indicators"
  repeated StrategyIndicator Indicators = 6;
  // @inject_tag: json:"created_at,omitempty"
  int64 CreatedAt = 7;
  // @inject_tag: json:"updated_at,omitempty"
  int64 UpdatedAt = 8;
}

message Strategies {
  // @inject_tag: json:"elements"
  repeated Strategy Elements = 1;
}

message CreateStrategyReq {
  // @inject_tag: json:"name"
  string Name = 1;
  // @inject_tag: json:"description"
  string Description = 2;
  // @inject_tag: json:"min_daily_profit"
  string MinDailyProfit = 3;
  // @inject_tag: json:"min_profit_per_trade"
  string MinProfitPerTrade = 4;
  // @inject_tag: json:"max_fund_per_trade"
  string MaxFundPerTrade = 5;
  // @inject_tag: json:"indicators"
  repeated StrategyIndicator Indicators = 6;
}

message StrategyIndicator {
  // @inject_tag: json:"basket_id"
  string StrategyID = 1;
  // @inject_tag: json:"invoice_id"
  string IndicatorID = 2;
  // @inject_tag: json:"type"
  chipmunkApi.IndicatorType Type = 3;
}

message ReturnStrategyReq {
  // @inject_tag: json:"id"
  string ID = 1;
}
