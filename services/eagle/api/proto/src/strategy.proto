syntax = "proto3";
package eagleApi;
option go_package = "github.com/h-varmazyar/Gate/services/eagle/api/proto";
import "api/proto/src/misc.proto";
import "services/chipmunk/api/proto/src/resolution.proto";
import "services/chipmunk/api/proto/src/indicator.proto";
import "services/chipmunk/api/proto/src/market.proto";

service StrategyService {
  rpc Create(CreateStrategyReq) returns(Strategy);
  rpc Return(ReturnStrategyReq) returns(Strategy);
  rpc List(api.Void) returns (Strategies);
  rpc Indicators(StrategyIndicatorReq) returns (StrategyIndicators);
  rpc StartSignalChecker(StrategySignalCheckStartReq) returns (api.Void);
  rpc StopSignalChecker(StrategySignalCheckStopReq) returns (api.Void);
}

message Strategy {
  // @inject_tag: json:"id"
  string ID = 1;
  // @inject_tag: json:"created_at,omitempty"
  int64 CreatedAt = 2;
  // @inject_tag: json:"updated_at,omitempty"
  int64 UpdatedAt = 3;
  // @inject_tag: json:"name"
  string Name = 4;
  // @inject_tag: json:"description"
  string Description = 5;
  // @inject_tag: json:"min_daily_profit_rate"
  double MinDailyProfitRate = 6;
  // @inject_tag: json:"min_profit_per_trade_rate"
  double MinProfitPerTradeRate = 7;
  // @inject_tag: json:"max_fund_per_trade"
  double MaxFundPerTrade = 8;
  // @inject_tag: json:"max_fund_per_trade_rate"
  double MaxFundPerTradeRate = 9;
  // @inject_tag: json:"working_resolution"
  chipmunkApi.Resolution WorkingResolution = 10;
  // @inject_tag: json:"indicators"
  repeated StrategyIndicator Indicators = 11;
}

message Strategies {
  // @inject_tag: json:"elements"
  repeated Strategy Elements = 1;
}

message CreateStrategyReq {
  // @inject_tag: json:"name"
  string Name = 1;
  // @inject_tag: json:"description"
  string Description = 2;
  // @inject_tag: json:"min_daily_profit_rate"
  string MinDailyProfitRate = 3;
  // @inject_tag: json:"min_profit_per_trade_rate"
  string MinProfitPerTradeRate = 4;
  // @inject_tag: json:"max_fund_per_trade"
  string MaxFundPerTrade = 5;
  // @inject_tag: json:"indicators"
  repeated StrategyIndicator Indicators = 6;
}

message StrategyIndicatorReq {
  // @inject_tag: json:"strategy_id"
  string StrategyID = 1;
}

message StrategyIndicator {
  // @inject_tag: json:"strategy_id"
  string StrategyID = 1;
  // @inject_tag: json:"indicator_id"
  string IndicatorID = 2;
  // @inject_tag: json:"type"
  chipmunkApi.Indicator.type Type = 3;
}

message StrategyIndicators {
  // @inject_tag: json:"elements"
  repeated StrategyIndicator Elements = 1;
}

message ReturnStrategyReq {
  // @inject_tag: json:"id"
  string ID = 1;
}

message StrategySignalCheckStartReq{
  // @inject_tag: json:"platform"
  api.Platform Platform = 1;
  // @inject_tag: json:"strategy_id"
  string StrategyID = 2;
  // @inject_tag: json:"brokerage_id"
  string BrokerageID = 3;
  // @inject_tag: json:"with_trading"
  bool WithTrading = 4;
  // @inject_tag: json:"market"
  chipmunkApi.Markets Markets = 5;
}

message StrategySignalCheckStopReq{
  // @inject_tag: json:"brokerage_id"
  string BrokerageID = 1;
}
