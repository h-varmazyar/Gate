// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.28.1
// 	protoc        v3.12.4
// source: services/eagle/api/proto/src/indicator.proto

package proto

import (
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type Source int32

const (
	Source_Custom Source = 0
	Source_OHLC4  Source = 1
	Source_Close  Source = 2
	Source_Open   Source = 3
	Source_High   Source = 4
	Source_HLC3   Source = 5
	Source_Low    Source = 6
	Source_HL2    Source = 7
)

// Enum value maps for Source.
var (
	Source_name = map[int32]string{
		0: "Custom",
		1: "OHLC4",
		2: "Close",
		3: "Open",
		4: "High",
		5: "HLC3",
		6: "Low",
		7: "HL2",
	}
	Source_value = map[string]int32{
		"Custom": 0,
		"OHLC4":  1,
		"Close":  2,
		"Open":   3,
		"High":   4,
		"HLC3":   5,
		"Low":    6,
		"HL2":    7,
	}
)

func (x Source) Enum() *Source {
	p := new(Source)
	*p = x
	return p
}

func (x Source) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (Source) Descriptor() protoreflect.EnumDescriptor {
	return file_services_eagle_api_proto_src_indicator_proto_enumTypes[0].Descriptor()
}

func (Source) Type() protoreflect.EnumType {
	return &file_services_eagle_api_proto_src_indicator_proto_enumTypes[0]
}

func (x Source) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use Source.Descriptor instead.
func (Source) EnumDescriptor() ([]byte, []int) {
	return file_services_eagle_api_proto_src_indicator_proto_rawDescGZIP(), []int{0}
}

type IndicatorType int32

const (
	IndicatorType_Unknown        IndicatorType = 0
	IndicatorType_RSI            IndicatorType = 1
	IndicatorType_Stochastic     IndicatorType = 2
	IndicatorType_MovingAverage  IndicatorType = 3
	IndicatorType_BollingerBands IndicatorType = 4
)

// Enum value maps for IndicatorType.
var (
	IndicatorType_name = map[int32]string{
		0: "Unknown",
		1: "RSI",
		2: "Stochastic",
		3: "MovingAverage",
		4: "BollingerBands",
	}
	IndicatorType_value = map[string]int32{
		"Unknown":        0,
		"RSI":            1,
		"Stochastic":     2,
		"MovingAverage":  3,
		"BollingerBands": 4,
	}
)

func (x IndicatorType) Enum() *IndicatorType {
	p := new(IndicatorType)
	*p = x
	return p
}

func (x IndicatorType) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (IndicatorType) Descriptor() protoreflect.EnumDescriptor {
	return file_services_eagle_api_proto_src_indicator_proto_enumTypes[1].Descriptor()
}

func (IndicatorType) Type() protoreflect.EnumType {
	return &file_services_eagle_api_proto_src_indicator_proto_enumTypes[1]
}

func (x IndicatorType) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use IndicatorType.Descriptor instead.
func (IndicatorType) EnumDescriptor() ([]byte, []int) {
	return file_services_eagle_api_proto_src_indicator_proto_rawDescGZIP(), []int{1}
}

type Indicator struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	//	@inject_tag:	json:"id"
	Id string `protobuf:"bytes,1,opt,name=id,proto3" json:"id"`
	//	@inject_tag:	json:"type"
	Type IndicatorType `protobuf:"varint,2,opt,name=type,proto3,enum=eagleApi.IndicatorType" json:"type"`
	//	@inject_tag:	json:"configs"
	//
	// Types that are assignable to Configs:
	//	*Indicator_Rsi
	//	*Indicator_Stochastic
	//	*Indicator_MovingAverage
	//	*Indicator_BollingerBands
	Configs isIndicator_Configs `protobuf_oneof:"configs" json:"configs"`
}

func (x *Indicator) Reset() {
	*x = Indicator{}
	if protoimpl.UnsafeEnabled {
		mi := &file_services_eagle_api_proto_src_indicator_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Indicator) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Indicator) ProtoMessage() {}

func (x *Indicator) ProtoReflect() protoreflect.Message {
	mi := &file_services_eagle_api_proto_src_indicator_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Indicator.ProtoReflect.Descriptor instead.
func (*Indicator) Descriptor() ([]byte, []int) {
	return file_services_eagle_api_proto_src_indicator_proto_rawDescGZIP(), []int{0}
}

func (x *Indicator) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

func (x *Indicator) GetType() IndicatorType {
	if x != nil {
		return x.Type
	}
	return IndicatorType_Unknown
}

func (m *Indicator) GetConfigs() isIndicator_Configs {
	if m != nil {
		return m.Configs
	}
	return nil
}

func (x *Indicator) GetRsi() *RsiConfigs {
	if x, ok := x.GetConfigs().(*Indicator_Rsi); ok {
		return x.Rsi
	}
	return nil
}

func (x *Indicator) GetStochastic() *StochasticConfigs {
	if x, ok := x.GetConfigs().(*Indicator_Stochastic); ok {
		return x.Stochastic
	}
	return nil
}

func (x *Indicator) GetMovingAverage() *MovingAverageConfigs {
	if x, ok := x.GetConfigs().(*Indicator_MovingAverage); ok {
		return x.MovingAverage
	}
	return nil
}

func (x *Indicator) GetBollingerBands() *BollingerBandsConfigs {
	if x, ok := x.GetConfigs().(*Indicator_BollingerBands); ok {
		return x.BollingerBands
	}
	return nil
}

type isIndicator_Configs interface {
	isIndicator_Configs()
}

type Indicator_Rsi struct {
	//	@inject_tag:	json:"rsi"
	Rsi *RsiConfigs `protobuf:"bytes,3,opt,name=rsi,proto3,oneof" json:"rsi"`
}

type Indicator_Stochastic struct {
	//	@inject_tag:	json:"stochastic"
	Stochastic *StochasticConfigs `protobuf:"bytes,4,opt,name=stochastic,proto3,oneof" json:"stochastic"`
}

type Indicator_MovingAverage struct {
	//	@inject_tag:	json:"moving_average"
	MovingAverage *MovingAverageConfigs `protobuf:"bytes,5,opt,name=moving_average,json=movingAverage,proto3,oneof" json:"moving_average"`
}

type Indicator_BollingerBands struct {
	//	@inject_tag:	json:"bollinger_bands"
	BollingerBands *BollingerBandsConfigs `protobuf:"bytes,6,opt,name=bollinger_bands,json=bollingerBands,proto3,oneof" json:"bollinger_bands"`
}

func (*Indicator_Rsi) isIndicator_Configs() {}

func (*Indicator_Stochastic) isIndicator_Configs() {}

func (*Indicator_MovingAverage) isIndicator_Configs() {}

func (*Indicator_BollingerBands) isIndicator_Configs() {}

type RsiConfigs struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	//	@inject_tag:	json:"length"
	Length int32 `protobuf:"varint,1,opt,name=length,proto3" json:"length"`
}

func (x *RsiConfigs) Reset() {
	*x = RsiConfigs{}
	if protoimpl.UnsafeEnabled {
		mi := &file_services_eagle_api_proto_src_indicator_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *RsiConfigs) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RsiConfigs) ProtoMessage() {}

func (x *RsiConfigs) ProtoReflect() protoreflect.Message {
	mi := &file_services_eagle_api_proto_src_indicator_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RsiConfigs.ProtoReflect.Descriptor instead.
func (*RsiConfigs) Descriptor() ([]byte, []int) {
	return file_services_eagle_api_proto_src_indicator_proto_rawDescGZIP(), []int{1}
}

func (x *RsiConfigs) GetLength() int32 {
	if x != nil {
		return x.Length
	}
	return 0
}

type StochasticConfigs struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	//	@inject_tag:	json:"length"
	Length int32 `protobuf:"varint,1,opt,name=length,proto3" json:"length"`
	//	@inject_tag:	json:"smooth_k"
	SmoothK int32 `protobuf:"varint,2,opt,name=smooth_k,json=smoothK,proto3" json:"smooth_k"`
	//	@inject_tag:	json:"smooth_d"
	SmoothD int32 `protobuf:"varint,3,opt,name=smooth_d,json=smoothD,proto3" json:"smooth_d"`
}

func (x *StochasticConfigs) Reset() {
	*x = StochasticConfigs{}
	if protoimpl.UnsafeEnabled {
		mi := &file_services_eagle_api_proto_src_indicator_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *StochasticConfigs) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*StochasticConfigs) ProtoMessage() {}

func (x *StochasticConfigs) ProtoReflect() protoreflect.Message {
	mi := &file_services_eagle_api_proto_src_indicator_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use StochasticConfigs.ProtoReflect.Descriptor instead.
func (*StochasticConfigs) Descriptor() ([]byte, []int) {
	return file_services_eagle_api_proto_src_indicator_proto_rawDescGZIP(), []int{2}
}

func (x *StochasticConfigs) GetLength() int32 {
	if x != nil {
		return x.Length
	}
	return 0
}

func (x *StochasticConfigs) GetSmoothK() int32 {
	if x != nil {
		return x.SmoothK
	}
	return 0
}

func (x *StochasticConfigs) GetSmoothD() int32 {
	if x != nil {
		return x.SmoothD
	}
	return 0
}

type MovingAverageConfigs struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	//	@inject_tag:	json:"length"
	Length int32 `protobuf:"varint,1,opt,name=length,proto3" json:"length"`
	//	@inject_tag:	json:"source"
	Source Source `protobuf:"varint,2,opt,name=source,proto3,enum=eagleApi.Source" json:"source"`
}

func (x *MovingAverageConfigs) Reset() {
	*x = MovingAverageConfigs{}
	if protoimpl.UnsafeEnabled {
		mi := &file_services_eagle_api_proto_src_indicator_proto_msgTypes[3]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *MovingAverageConfigs) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*MovingAverageConfigs) ProtoMessage() {}

func (x *MovingAverageConfigs) ProtoReflect() protoreflect.Message {
	mi := &file_services_eagle_api_proto_src_indicator_proto_msgTypes[3]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use MovingAverageConfigs.ProtoReflect.Descriptor instead.
func (*MovingAverageConfigs) Descriptor() ([]byte, []int) {
	return file_services_eagle_api_proto_src_indicator_proto_rawDescGZIP(), []int{3}
}

func (x *MovingAverageConfigs) GetLength() int32 {
	if x != nil {
		return x.Length
	}
	return 0
}

func (x *MovingAverageConfigs) GetSource() Source {
	if x != nil {
		return x.Source
	}
	return Source_Custom
}

type BollingerBandsConfigs struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	//	@inject_tag:	json:"length"
	Length int32 `protobuf:"varint,1,opt,name=length,proto3" json:"length"`
	//	@inject_tag:	json:"deviation"
	Deviation int32 `protobuf:"varint,2,opt,name=deviation,proto3" json:"deviation"`
	//	@inject_tag:	json:"source"
	Source Source `protobuf:"varint,3,opt,name=source,proto3,enum=eagleApi.Source" json:"source"`
}

func (x *BollingerBandsConfigs) Reset() {
	*x = BollingerBandsConfigs{}
	if protoimpl.UnsafeEnabled {
		mi := &file_services_eagle_api_proto_src_indicator_proto_msgTypes[4]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *BollingerBandsConfigs) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*BollingerBandsConfigs) ProtoMessage() {}

func (x *BollingerBandsConfigs) ProtoReflect() protoreflect.Message {
	mi := &file_services_eagle_api_proto_src_indicator_proto_msgTypes[4]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use BollingerBandsConfigs.ProtoReflect.Descriptor instead.
func (*BollingerBandsConfigs) Descriptor() ([]byte, []int) {
	return file_services_eagle_api_proto_src_indicator_proto_rawDescGZIP(), []int{4}
}

func (x *BollingerBandsConfigs) GetLength() int32 {
	if x != nil {
		return x.Length
	}
	return 0
}

func (x *BollingerBandsConfigs) GetDeviation() int32 {
	if x != nil {
		return x.Deviation
	}
	return 0
}

func (x *BollingerBandsConfigs) GetSource() Source {
	if x != nil {
		return x.Source
	}
	return Source_Custom
}

type IndicatorValue struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	//	@inject_tag:	json:"type"
	Type IndicatorType `protobuf:"varint,1,opt,name=type,proto3,enum=eagleApi.IndicatorType" json:"type"`
	//	@inject_tag:	json:"value"
	//
	// Types that are assignable to Value:
	//	*IndicatorValue_BollingerBands
	//	*IndicatorValue_MovingAverage
	//	*IndicatorValue_Stochastic
	//	*IndicatorValue_Rsi
	Value isIndicatorValue_Value `protobuf_oneof:"value" json:"value"`
}

func (x *IndicatorValue) Reset() {
	*x = IndicatorValue{}
	if protoimpl.UnsafeEnabled {
		mi := &file_services_eagle_api_proto_src_indicator_proto_msgTypes[5]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *IndicatorValue) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*IndicatorValue) ProtoMessage() {}

func (x *IndicatorValue) ProtoReflect() protoreflect.Message {
	mi := &file_services_eagle_api_proto_src_indicator_proto_msgTypes[5]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use IndicatorValue.ProtoReflect.Descriptor instead.
func (*IndicatorValue) Descriptor() ([]byte, []int) {
	return file_services_eagle_api_proto_src_indicator_proto_rawDescGZIP(), []int{5}
}

func (x *IndicatorValue) GetType() IndicatorType {
	if x != nil {
		return x.Type
	}
	return IndicatorType_Unknown
}

func (m *IndicatorValue) GetValue() isIndicatorValue_Value {
	if m != nil {
		return m.Value
	}
	return nil
}

func (x *IndicatorValue) GetBollingerBands() *BollingerBandsValue {
	if x, ok := x.GetValue().(*IndicatorValue_BollingerBands); ok {
		return x.BollingerBands
	}
	return nil
}

func (x *IndicatorValue) GetMovingAverage() *MovingAverageValue {
	if x, ok := x.GetValue().(*IndicatorValue_MovingAverage); ok {
		return x.MovingAverage
	}
	return nil
}

func (x *IndicatorValue) GetStochastic() *StochasticValue {
	if x, ok := x.GetValue().(*IndicatorValue_Stochastic); ok {
		return x.Stochastic
	}
	return nil
}

func (x *IndicatorValue) GetRsi() *RSIValue {
	if x, ok := x.GetValue().(*IndicatorValue_Rsi); ok {
		return x.Rsi
	}
	return nil
}

type isIndicatorValue_Value interface {
	isIndicatorValue_Value()
}

type IndicatorValue_BollingerBands struct {
	//	@inject_tag:	json:"bollinger_band"
	BollingerBands *BollingerBandsValue `protobuf:"bytes,2,opt,name=bollinger_bands,json=bollingerBands,proto3,oneof" json:"bollinger_band"`
}

type IndicatorValue_MovingAverage struct {
	//	@inject_tag:	json:"moving_average"
	MovingAverage *MovingAverageValue `protobuf:"bytes,3,opt,name=moving_average,json=movingAverage,proto3,oneof" json:"moving_average"`
}

type IndicatorValue_Stochastic struct {
	//	@inject_tag:	json:"stochastic"
	Stochastic *StochasticValue `protobuf:"bytes,4,opt,name=stochastic,proto3,oneof" json:"stochastic"`
}

type IndicatorValue_Rsi struct {
	//	@inject_tag:	json:"rsi"
	Rsi *RSIValue `protobuf:"bytes,5,opt,name=rsi,proto3,oneof" json:"rsi"`
}

func (*IndicatorValue_BollingerBands) isIndicatorValue_Value() {}

func (*IndicatorValue_MovingAverage) isIndicatorValue_Value() {}

func (*IndicatorValue_Stochastic) isIndicatorValue_Value() {}

func (*IndicatorValue_Rsi) isIndicatorValue_Value() {}

type BollingerBandsValue struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	//	@inject_tag:	json:"upper_band"
	UpperBand float64 `protobuf:"fixed64,1,opt,name=upper_band,json=upperBand,proto3" json:"upper_band"`
	//	@inject_tag:	json:"lower_band"
	LowerBand float64 `protobuf:"fixed64,2,opt,name=lower_band,json=lowerBand,proto3" json:"lower_band"`
	//	@inject_tag:	json:"ma"
	Ma float64 `protobuf:"fixed64,3,opt,name=ma,proto3" json:"ma"`
}

func (x *BollingerBandsValue) Reset() {
	*x = BollingerBandsValue{}
	if protoimpl.UnsafeEnabled {
		mi := &file_services_eagle_api_proto_src_indicator_proto_msgTypes[6]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *BollingerBandsValue) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*BollingerBandsValue) ProtoMessage() {}

func (x *BollingerBandsValue) ProtoReflect() protoreflect.Message {
	mi := &file_services_eagle_api_proto_src_indicator_proto_msgTypes[6]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use BollingerBandsValue.ProtoReflect.Descriptor instead.
func (*BollingerBandsValue) Descriptor() ([]byte, []int) {
	return file_services_eagle_api_proto_src_indicator_proto_rawDescGZIP(), []int{6}
}

func (x *BollingerBandsValue) GetUpperBand() float64 {
	if x != nil {
		return x.UpperBand
	}
	return 0
}

func (x *BollingerBandsValue) GetLowerBand() float64 {
	if x != nil {
		return x.LowerBand
	}
	return 0
}

func (x *BollingerBandsValue) GetMa() float64 {
	if x != nil {
		return x.Ma
	}
	return 0
}

type MovingAverageValue struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	//	@inject_tag:	json:"simple"
	Simple float64 `protobuf:"fixed64,1,opt,name=simple,proto3" json:"simple"`
	//	@inject_tag:	json:"exponential"
	Exponential float64 `protobuf:"fixed64,2,opt,name=exponential,proto3" json:"exponential"`
}

func (x *MovingAverageValue) Reset() {
	*x = MovingAverageValue{}
	if protoimpl.UnsafeEnabled {
		mi := &file_services_eagle_api_proto_src_indicator_proto_msgTypes[7]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *MovingAverageValue) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*MovingAverageValue) ProtoMessage() {}

func (x *MovingAverageValue) ProtoReflect() protoreflect.Message {
	mi := &file_services_eagle_api_proto_src_indicator_proto_msgTypes[7]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use MovingAverageValue.ProtoReflect.Descriptor instead.
func (*MovingAverageValue) Descriptor() ([]byte, []int) {
	return file_services_eagle_api_proto_src_indicator_proto_rawDescGZIP(), []int{7}
}

func (x *MovingAverageValue) GetSimple() float64 {
	if x != nil {
		return x.Simple
	}
	return 0
}

func (x *MovingAverageValue) GetExponential() float64 {
	if x != nil {
		return x.Exponential
	}
	return 0
}

type StochasticValue struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	//	@inject_tag:	json:"index_k"
	IndexK float64 `protobuf:"fixed64,1,opt,name=index_k,json=indexK,proto3" json:"index_k"`
	//	@inject_tag:	json:"index_d"
	IndexD float64 `protobuf:"fixed64,2,opt,name=index_d,json=indexD,proto3" json:"index_d"`
}

func (x *StochasticValue) Reset() {
	*x = StochasticValue{}
	if protoimpl.UnsafeEnabled {
		mi := &file_services_eagle_api_proto_src_indicator_proto_msgTypes[8]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *StochasticValue) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*StochasticValue) ProtoMessage() {}

func (x *StochasticValue) ProtoReflect() protoreflect.Message {
	mi := &file_services_eagle_api_proto_src_indicator_proto_msgTypes[8]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use StochasticValue.ProtoReflect.Descriptor instead.
func (*StochasticValue) Descriptor() ([]byte, []int) {
	return file_services_eagle_api_proto_src_indicator_proto_rawDescGZIP(), []int{8}
}

func (x *StochasticValue) GetIndexK() float64 {
	if x != nil {
		return x.IndexK
	}
	return 0
}

func (x *StochasticValue) GetIndexD() float64 {
	if x != nil {
		return x.IndexD
	}
	return 0
}

type RSIValue struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	//	@inject_tag:	json:"rsi"
	Rsi float64 `protobuf:"fixed64,1,opt,name=rsi,proto3" json:"rsi"`
}

func (x *RSIValue) Reset() {
	*x = RSIValue{}
	if protoimpl.UnsafeEnabled {
		mi := &file_services_eagle_api_proto_src_indicator_proto_msgTypes[9]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *RSIValue) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RSIValue) ProtoMessage() {}

func (x *RSIValue) ProtoReflect() protoreflect.Message {
	mi := &file_services_eagle_api_proto_src_indicator_proto_msgTypes[9]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RSIValue.ProtoReflect.Descriptor instead.
func (*RSIValue) Descriptor() ([]byte, []int) {
	return file_services_eagle_api_proto_src_indicator_proto_rawDescGZIP(), []int{9}
}

func (x *RSIValue) GetRsi() float64 {
	if x != nil {
		return x.Rsi
	}
	return 0
}

type IndicatorReturnReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	//	@inject_tag:	json:"id"
	Id string `protobuf:"bytes,1,opt,name=id,proto3" json:"id"`
}

func (x *IndicatorReturnReq) Reset() {
	*x = IndicatorReturnReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_services_eagle_api_proto_src_indicator_proto_msgTypes[10]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *IndicatorReturnReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*IndicatorReturnReq) ProtoMessage() {}

func (x *IndicatorReturnReq) ProtoReflect() protoreflect.Message {
	mi := &file_services_eagle_api_proto_src_indicator_proto_msgTypes[10]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use IndicatorReturnReq.ProtoReflect.Descriptor instead.
func (*IndicatorReturnReq) Descriptor() ([]byte, []int) {
	return file_services_eagle_api_proto_src_indicator_proto_rawDescGZIP(), []int{10}
}

func (x *IndicatorReturnReq) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

type IndicatorListReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	//	@inject_tag:	json:"type"
	Type IndicatorType `protobuf:"varint,1,opt,name=Type,proto3,enum=eagleApi.IndicatorType" json:"type"`
}

func (x *IndicatorListReq) Reset() {
	*x = IndicatorListReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_services_eagle_api_proto_src_indicator_proto_msgTypes[11]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *IndicatorListReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*IndicatorListReq) ProtoMessage() {}

func (x *IndicatorListReq) ProtoReflect() protoreflect.Message {
	mi := &file_services_eagle_api_proto_src_indicator_proto_msgTypes[11]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use IndicatorListReq.ProtoReflect.Descriptor instead.
func (*IndicatorListReq) Descriptor() ([]byte, []int) {
	return file_services_eagle_api_proto_src_indicator_proto_rawDescGZIP(), []int{11}
}

func (x *IndicatorListReq) GetType() IndicatorType {
	if x != nil {
		return x.Type
	}
	return IndicatorType_Unknown
}

type Indicators struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	//	@inject_tag:	json:"elements"
	Elements []*Indicator `protobuf:"bytes,1,rep,name=Elements,proto3" json:"elements"`
}

func (x *Indicators) Reset() {
	*x = Indicators{}
	if protoimpl.UnsafeEnabled {
		mi := &file_services_eagle_api_proto_src_indicator_proto_msgTypes[12]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Indicators) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Indicators) ProtoMessage() {}

func (x *Indicators) ProtoReflect() protoreflect.Message {
	mi := &file_services_eagle_api_proto_src_indicator_proto_msgTypes[12]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Indicators.ProtoReflect.Descriptor instead.
func (*Indicators) Descriptor() ([]byte, []int) {
	return file_services_eagle_api_proto_src_indicator_proto_rawDescGZIP(), []int{12}
}

func (x *Indicators) GetElements() []*Indicator {
	if x != nil {
		return x.Elements
	}
	return nil
}

var File_services_eagle_api_proto_src_indicator_proto protoreflect.FileDescriptor

var file_services_eagle_api_proto_src_indicator_proto_rawDesc = []byte{
	0x0a, 0x2c, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x73, 0x2f, 0x65, 0x61, 0x67, 0x6c, 0x65,
	0x2f, 0x61, 0x70, 0x69, 0x2f, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2f, 0x73, 0x72, 0x63, 0x2f, 0x69,
	0x6e, 0x64, 0x69, 0x63, 0x61, 0x74, 0x6f, 0x72, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x12, 0x08,
	0x65, 0x61, 0x67, 0x6c, 0x65, 0x41, 0x70, 0x69, 0x22, 0xd1, 0x02, 0x0a, 0x09, 0x49, 0x6e, 0x64,
	0x69, 0x63, 0x61, 0x74, 0x6f, 0x72, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x02, 0x69, 0x64, 0x12, 0x2b, 0x0a, 0x04, 0x74, 0x79, 0x70, 0x65, 0x18, 0x02,
	0x20, 0x01, 0x28, 0x0e, 0x32, 0x17, 0x2e, 0x65, 0x61, 0x67, 0x6c, 0x65, 0x41, 0x70, 0x69, 0x2e,
	0x49, 0x6e, 0x64, 0x69, 0x63, 0x61, 0x74, 0x6f, 0x72, 0x54, 0x79, 0x70, 0x65, 0x52, 0x04, 0x74,
	0x79, 0x70, 0x65, 0x12, 0x28, 0x0a, 0x03, 0x72, 0x73, 0x69, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0b,
	0x32, 0x14, 0x2e, 0x65, 0x61, 0x67, 0x6c, 0x65, 0x41, 0x70, 0x69, 0x2e, 0x52, 0x73, 0x69, 0x43,
	0x6f, 0x6e, 0x66, 0x69, 0x67, 0x73, 0x48, 0x00, 0x52, 0x03, 0x72, 0x73, 0x69, 0x12, 0x3d, 0x0a,
	0x0a, 0x73, 0x74, 0x6f, 0x63, 0x68, 0x61, 0x73, 0x74, 0x69, 0x63, 0x18, 0x04, 0x20, 0x01, 0x28,
	0x0b, 0x32, 0x1b, 0x2e, 0x65, 0x61, 0x67, 0x6c, 0x65, 0x41, 0x70, 0x69, 0x2e, 0x53, 0x74, 0x6f,
	0x63, 0x68, 0x61, 0x73, 0x74, 0x69, 0x63, 0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x73, 0x48, 0x00,
	0x52, 0x0a, 0x73, 0x74, 0x6f, 0x63, 0x68, 0x61, 0x73, 0x74, 0x69, 0x63, 0x12, 0x47, 0x0a, 0x0e,
	0x6d, 0x6f, 0x76, 0x69, 0x6e, 0x67, 0x5f, 0x61, 0x76, 0x65, 0x72, 0x61, 0x67, 0x65, 0x18, 0x05,
	0x20, 0x01, 0x28, 0x0b, 0x32, 0x1e, 0x2e, 0x65, 0x61, 0x67, 0x6c, 0x65, 0x41, 0x70, 0x69, 0x2e,
	0x4d, 0x6f, 0x76, 0x69, 0x6e, 0x67, 0x41, 0x76, 0x65, 0x72, 0x61, 0x67, 0x65, 0x43, 0x6f, 0x6e,
	0x66, 0x69, 0x67, 0x73, 0x48, 0x00, 0x52, 0x0d, 0x6d, 0x6f, 0x76, 0x69, 0x6e, 0x67, 0x41, 0x76,
	0x65, 0x72, 0x61, 0x67, 0x65, 0x12, 0x4a, 0x0a, 0x0f, 0x62, 0x6f, 0x6c, 0x6c, 0x69, 0x6e, 0x67,
	0x65, 0x72, 0x5f, 0x62, 0x61, 0x6e, 0x64, 0x73, 0x18, 0x06, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1f,
	0x2e, 0x65, 0x61, 0x67, 0x6c, 0x65, 0x41, 0x70, 0x69, 0x2e, 0x42, 0x6f, 0x6c, 0x6c, 0x69, 0x6e,
	0x67, 0x65, 0x72, 0x42, 0x61, 0x6e, 0x64, 0x73, 0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x73, 0x48,
	0x00, 0x52, 0x0e, 0x62, 0x6f, 0x6c, 0x6c, 0x69, 0x6e, 0x67, 0x65, 0x72, 0x42, 0x61, 0x6e, 0x64,
	0x73, 0x42, 0x09, 0x0a, 0x07, 0x63, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x73, 0x22, 0x24, 0x0a, 0x0a,
	0x52, 0x73, 0x69, 0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x73, 0x12, 0x16, 0x0a, 0x06, 0x6c, 0x65,
	0x6e, 0x67, 0x74, 0x68, 0x18, 0x01, 0x20, 0x01, 0x28, 0x05, 0x52, 0x06, 0x6c, 0x65, 0x6e, 0x67,
	0x74, 0x68, 0x22, 0x61, 0x0a, 0x11, 0x53, 0x74, 0x6f, 0x63, 0x68, 0x61, 0x73, 0x74, 0x69, 0x63,
	0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x73, 0x12, 0x16, 0x0a, 0x06, 0x6c, 0x65, 0x6e, 0x67, 0x74,
	0x68, 0x18, 0x01, 0x20, 0x01, 0x28, 0x05, 0x52, 0x06, 0x6c, 0x65, 0x6e, 0x67, 0x74, 0x68, 0x12,
	0x19, 0x0a, 0x08, 0x73, 0x6d, 0x6f, 0x6f, 0x74, 0x68, 0x5f, 0x6b, 0x18, 0x02, 0x20, 0x01, 0x28,
	0x05, 0x52, 0x07, 0x73, 0x6d, 0x6f, 0x6f, 0x74, 0x68, 0x4b, 0x12, 0x19, 0x0a, 0x08, 0x73, 0x6d,
	0x6f, 0x6f, 0x74, 0x68, 0x5f, 0x64, 0x18, 0x03, 0x20, 0x01, 0x28, 0x05, 0x52, 0x07, 0x73, 0x6d,
	0x6f, 0x6f, 0x74, 0x68, 0x44, 0x22, 0x58, 0x0a, 0x14, 0x4d, 0x6f, 0x76, 0x69, 0x6e, 0x67, 0x41,
	0x76, 0x65, 0x72, 0x61, 0x67, 0x65, 0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x73, 0x12, 0x16, 0x0a,
	0x06, 0x6c, 0x65, 0x6e, 0x67, 0x74, 0x68, 0x18, 0x01, 0x20, 0x01, 0x28, 0x05, 0x52, 0x06, 0x6c,
	0x65, 0x6e, 0x67, 0x74, 0x68, 0x12, 0x28, 0x0a, 0x06, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x18,
	0x02, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x10, 0x2e, 0x65, 0x61, 0x67, 0x6c, 0x65, 0x41, 0x70, 0x69,
	0x2e, 0x53, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x52, 0x06, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x22,
	0x77, 0x0a, 0x15, 0x42, 0x6f, 0x6c, 0x6c, 0x69, 0x6e, 0x67, 0x65, 0x72, 0x42, 0x61, 0x6e, 0x64,
	0x73, 0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x73, 0x12, 0x16, 0x0a, 0x06, 0x6c, 0x65, 0x6e, 0x67,
	0x74, 0x68, 0x18, 0x01, 0x20, 0x01, 0x28, 0x05, 0x52, 0x06, 0x6c, 0x65, 0x6e, 0x67, 0x74, 0x68,
	0x12, 0x1c, 0x0a, 0x09, 0x64, 0x65, 0x76, 0x69, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x02, 0x20,
	0x01, 0x28, 0x05, 0x52, 0x09, 0x64, 0x65, 0x76, 0x69, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x28,
	0x0a, 0x06, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x10,
	0x2e, 0x65, 0x61, 0x67, 0x6c, 0x65, 0x41, 0x70, 0x69, 0x2e, 0x53, 0x6f, 0x75, 0x72, 0x63, 0x65,
	0x52, 0x06, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x22, 0xbc, 0x02, 0x0a, 0x0e, 0x69, 0x6e, 0x64,
	0x69, 0x63, 0x61, 0x74, 0x6f, 0x72, 0x56, 0x61, 0x6c, 0x75, 0x65, 0x12, 0x2b, 0x0a, 0x04, 0x74,
	0x79, 0x70, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x17, 0x2e, 0x65, 0x61, 0x67, 0x6c,
	0x65, 0x41, 0x70, 0x69, 0x2e, 0x49, 0x6e, 0x64, 0x69, 0x63, 0x61, 0x74, 0x6f, 0x72, 0x54, 0x79,
	0x70, 0x65, 0x52, 0x04, 0x74, 0x79, 0x70, 0x65, 0x12, 0x48, 0x0a, 0x0f, 0x62, 0x6f, 0x6c, 0x6c,
	0x69, 0x6e, 0x67, 0x65, 0x72, 0x5f, 0x62, 0x61, 0x6e, 0x64, 0x73, 0x18, 0x02, 0x20, 0x01, 0x28,
	0x0b, 0x32, 0x1d, 0x2e, 0x65, 0x61, 0x67, 0x6c, 0x65, 0x41, 0x70, 0x69, 0x2e, 0x42, 0x6f, 0x6c,
	0x6c, 0x69, 0x6e, 0x67, 0x65, 0x72, 0x42, 0x61, 0x6e, 0x64, 0x73, 0x56, 0x61, 0x6c, 0x75, 0x65,
	0x48, 0x00, 0x52, 0x0e, 0x62, 0x6f, 0x6c, 0x6c, 0x69, 0x6e, 0x67, 0x65, 0x72, 0x42, 0x61, 0x6e,
	0x64, 0x73, 0x12, 0x45, 0x0a, 0x0e, 0x6d, 0x6f, 0x76, 0x69, 0x6e, 0x67, 0x5f, 0x61, 0x76, 0x65,
	0x72, 0x61, 0x67, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1c, 0x2e, 0x65, 0x61, 0x67,
	0x6c, 0x65, 0x41, 0x70, 0x69, 0x2e, 0x4d, 0x6f, 0x76, 0x69, 0x6e, 0x67, 0x41, 0x76, 0x65, 0x72,
	0x61, 0x67, 0x65, 0x56, 0x61, 0x6c, 0x75, 0x65, 0x48, 0x00, 0x52, 0x0d, 0x6d, 0x6f, 0x76, 0x69,
	0x6e, 0x67, 0x41, 0x76, 0x65, 0x72, 0x61, 0x67, 0x65, 0x12, 0x3b, 0x0a, 0x0a, 0x73, 0x74, 0x6f,
	0x63, 0x68, 0x61, 0x73, 0x74, 0x69, 0x63, 0x18, 0x04, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x19, 0x2e,
	0x65, 0x61, 0x67, 0x6c, 0x65, 0x41, 0x70, 0x69, 0x2e, 0x53, 0x74, 0x6f, 0x63, 0x68, 0x61, 0x73,
	0x74, 0x69, 0x63, 0x56, 0x61, 0x6c, 0x75, 0x65, 0x48, 0x00, 0x52, 0x0a, 0x73, 0x74, 0x6f, 0x63,
	0x68, 0x61, 0x73, 0x74, 0x69, 0x63, 0x12, 0x26, 0x0a, 0x03, 0x72, 0x73, 0x69, 0x18, 0x05, 0x20,
	0x01, 0x28, 0x0b, 0x32, 0x12, 0x2e, 0x65, 0x61, 0x67, 0x6c, 0x65, 0x41, 0x70, 0x69, 0x2e, 0x52,
	0x53, 0x49, 0x56, 0x61, 0x6c, 0x75, 0x65, 0x48, 0x00, 0x52, 0x03, 0x72, 0x73, 0x69, 0x42, 0x07,
	0x0a, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x22, 0x63, 0x0a, 0x13, 0x42, 0x6f, 0x6c, 0x6c, 0x69,
	0x6e, 0x67, 0x65, 0x72, 0x42, 0x61, 0x6e, 0x64, 0x73, 0x56, 0x61, 0x6c, 0x75, 0x65, 0x12, 0x1d,
	0x0a, 0x0a, 0x75, 0x70, 0x70, 0x65, 0x72, 0x5f, 0x62, 0x61, 0x6e, 0x64, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x01, 0x52, 0x09, 0x75, 0x70, 0x70, 0x65, 0x72, 0x42, 0x61, 0x6e, 0x64, 0x12, 0x1d, 0x0a,
	0x0a, 0x6c, 0x6f, 0x77, 0x65, 0x72, 0x5f, 0x62, 0x61, 0x6e, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28,
	0x01, 0x52, 0x09, 0x6c, 0x6f, 0x77, 0x65, 0x72, 0x42, 0x61, 0x6e, 0x64, 0x12, 0x0e, 0x0a, 0x02,
	0x6d, 0x61, 0x18, 0x03, 0x20, 0x01, 0x28, 0x01, 0x52, 0x02, 0x6d, 0x61, 0x22, 0x4e, 0x0a, 0x12,
	0x4d, 0x6f, 0x76, 0x69, 0x6e, 0x67, 0x41, 0x76, 0x65, 0x72, 0x61, 0x67, 0x65, 0x56, 0x61, 0x6c,
	0x75, 0x65, 0x12, 0x16, 0x0a, 0x06, 0x73, 0x69, 0x6d, 0x70, 0x6c, 0x65, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x01, 0x52, 0x06, 0x73, 0x69, 0x6d, 0x70, 0x6c, 0x65, 0x12, 0x20, 0x0a, 0x0b, 0x65, 0x78,
	0x70, 0x6f, 0x6e, 0x65, 0x6e, 0x74, 0x69, 0x61, 0x6c, 0x18, 0x02, 0x20, 0x01, 0x28, 0x01, 0x52,
	0x0b, 0x65, 0x78, 0x70, 0x6f, 0x6e, 0x65, 0x6e, 0x74, 0x69, 0x61, 0x6c, 0x22, 0x43, 0x0a, 0x0f,
	0x53, 0x74, 0x6f, 0x63, 0x68, 0x61, 0x73, 0x74, 0x69, 0x63, 0x56, 0x61, 0x6c, 0x75, 0x65, 0x12,
	0x17, 0x0a, 0x07, 0x69, 0x6e, 0x64, 0x65, 0x78, 0x5f, 0x6b, 0x18, 0x01, 0x20, 0x01, 0x28, 0x01,
	0x52, 0x06, 0x69, 0x6e, 0x64, 0x65, 0x78, 0x4b, 0x12, 0x17, 0x0a, 0x07, 0x69, 0x6e, 0x64, 0x65,
	0x78, 0x5f, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x01, 0x52, 0x06, 0x69, 0x6e, 0x64, 0x65, 0x78,
	0x44, 0x22, 0x1c, 0x0a, 0x08, 0x52, 0x53, 0x49, 0x56, 0x61, 0x6c, 0x75, 0x65, 0x12, 0x10, 0x0a,
	0x03, 0x72, 0x73, 0x69, 0x18, 0x01, 0x20, 0x01, 0x28, 0x01, 0x52, 0x03, 0x72, 0x73, 0x69, 0x22,
	0x24, 0x0a, 0x12, 0x49, 0x6e, 0x64, 0x69, 0x63, 0x61, 0x74, 0x6f, 0x72, 0x52, 0x65, 0x74, 0x75,
	0x72, 0x6e, 0x52, 0x65, 0x71, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x02, 0x69, 0x64, 0x22, 0x3f, 0x0a, 0x10, 0x49, 0x6e, 0x64, 0x69, 0x63, 0x61, 0x74,
	0x6f, 0x72, 0x4c, 0x69, 0x73, 0x74, 0x52, 0x65, 0x71, 0x12, 0x2b, 0x0a, 0x04, 0x54, 0x79, 0x70,
	0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x17, 0x2e, 0x65, 0x61, 0x67, 0x6c, 0x65, 0x41,
	0x70, 0x69, 0x2e, 0x49, 0x6e, 0x64, 0x69, 0x63, 0x61, 0x74, 0x6f, 0x72, 0x54, 0x79, 0x70, 0x65,
	0x52, 0x04, 0x54, 0x79, 0x70, 0x65, 0x22, 0x3d, 0x0a, 0x0a, 0x49, 0x6e, 0x64, 0x69, 0x63, 0x61,
	0x74, 0x6f, 0x72, 0x73, 0x12, 0x2f, 0x0a, 0x08, 0x45, 0x6c, 0x65, 0x6d, 0x65, 0x6e, 0x74, 0x73,
	0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x13, 0x2e, 0x65, 0x61, 0x67, 0x6c, 0x65, 0x41, 0x70,
	0x69, 0x2e, 0x49, 0x6e, 0x64, 0x69, 0x63, 0x61, 0x74, 0x6f, 0x72, 0x52, 0x08, 0x45, 0x6c, 0x65,
	0x6d, 0x65, 0x6e, 0x74, 0x73, 0x2a, 0x5a, 0x0a, 0x06, 0x53, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x12,
	0x0a, 0x0a, 0x06, 0x43, 0x75, 0x73, 0x74, 0x6f, 0x6d, 0x10, 0x00, 0x12, 0x09, 0x0a, 0x05, 0x4f,
	0x48, 0x4c, 0x43, 0x34, 0x10, 0x01, 0x12, 0x09, 0x0a, 0x05, 0x43, 0x6c, 0x6f, 0x73, 0x65, 0x10,
	0x02, 0x12, 0x08, 0x0a, 0x04, 0x4f, 0x70, 0x65, 0x6e, 0x10, 0x03, 0x12, 0x08, 0x0a, 0x04, 0x48,
	0x69, 0x67, 0x68, 0x10, 0x04, 0x12, 0x08, 0x0a, 0x04, 0x48, 0x4c, 0x43, 0x33, 0x10, 0x05, 0x12,
	0x07, 0x0a, 0x03, 0x4c, 0x6f, 0x77, 0x10, 0x06, 0x12, 0x07, 0x0a, 0x03, 0x48, 0x4c, 0x32, 0x10,
	0x07, 0x2a, 0x5c, 0x0a, 0x0d, 0x49, 0x6e, 0x64, 0x69, 0x63, 0x61, 0x74, 0x6f, 0x72, 0x54, 0x79,
	0x70, 0x65, 0x12, 0x0b, 0x0a, 0x07, 0x55, 0x6e, 0x6b, 0x6e, 0x6f, 0x77, 0x6e, 0x10, 0x00, 0x12,
	0x07, 0x0a, 0x03, 0x52, 0x53, 0x49, 0x10, 0x01, 0x12, 0x0e, 0x0a, 0x0a, 0x53, 0x74, 0x6f, 0x63,
	0x68, 0x61, 0x73, 0x74, 0x69, 0x63, 0x10, 0x02, 0x12, 0x11, 0x0a, 0x0d, 0x4d, 0x6f, 0x76, 0x69,
	0x6e, 0x67, 0x41, 0x76, 0x65, 0x72, 0x61, 0x67, 0x65, 0x10, 0x03, 0x12, 0x12, 0x0a, 0x0e, 0x42,
	0x6f, 0x6c, 0x6c, 0x69, 0x6e, 0x67, 0x65, 0x72, 0x42, 0x61, 0x6e, 0x64, 0x73, 0x10, 0x04, 0x32,
	0x89, 0x01, 0x0a, 0x10, 0x69, 0x6e, 0x64, 0x69, 0x63, 0x61, 0x74, 0x6f, 0x72, 0x53, 0x65, 0x72,
	0x76, 0x69, 0x63, 0x65, 0x12, 0x3b, 0x0a, 0x06, 0x52, 0x65, 0x74, 0x75, 0x72, 0x6e, 0x12, 0x1c,
	0x2e, 0x65, 0x61, 0x67, 0x6c, 0x65, 0x41, 0x70, 0x69, 0x2e, 0x49, 0x6e, 0x64, 0x69, 0x63, 0x61,
	0x74, 0x6f, 0x72, 0x52, 0x65, 0x74, 0x75, 0x72, 0x6e, 0x52, 0x65, 0x71, 0x1a, 0x13, 0x2e, 0x65,
	0x61, 0x67, 0x6c, 0x65, 0x41, 0x70, 0x69, 0x2e, 0x49, 0x6e, 0x64, 0x69, 0x63, 0x61, 0x74, 0x6f,
	0x72, 0x12, 0x38, 0x0a, 0x04, 0x4c, 0x69, 0x73, 0x74, 0x12, 0x1a, 0x2e, 0x65, 0x61, 0x67, 0x6c,
	0x65, 0x41, 0x70, 0x69, 0x2e, 0x49, 0x6e, 0x64, 0x69, 0x63, 0x61, 0x74, 0x6f, 0x72, 0x4c, 0x69,
	0x73, 0x74, 0x52, 0x65, 0x71, 0x1a, 0x14, 0x2e, 0x65, 0x61, 0x67, 0x6c, 0x65, 0x41, 0x70, 0x69,
	0x2e, 0x49, 0x6e, 0x64, 0x69, 0x63, 0x61, 0x74, 0x6f, 0x72, 0x73, 0x42, 0x36, 0x5a, 0x34, 0x67,
	0x69, 0x74, 0x68, 0x75, 0x62, 0x2e, 0x63, 0x6f, 0x6d, 0x2f, 0x68, 0x2d, 0x76, 0x61, 0x72, 0x6d,
	0x61, 0x7a, 0x79, 0x61, 0x72, 0x2f, 0x47, 0x61, 0x74, 0x65, 0x2f, 0x73, 0x65, 0x72, 0x76, 0x69,
	0x63, 0x65, 0x73, 0x2f, 0x65, 0x61, 0x67, 0x6c, 0x65, 0x2f, 0x61, 0x70, 0x69, 0x2f, 0x70, 0x72,
	0x6f, 0x74, 0x6f, 0x62, 0x06, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x33,
}

var (
	file_services_eagle_api_proto_src_indicator_proto_rawDescOnce sync.Once
	file_services_eagle_api_proto_src_indicator_proto_rawDescData = file_services_eagle_api_proto_src_indicator_proto_rawDesc
)

func file_services_eagle_api_proto_src_indicator_proto_rawDescGZIP() []byte {
	file_services_eagle_api_proto_src_indicator_proto_rawDescOnce.Do(func() {
		file_services_eagle_api_proto_src_indicator_proto_rawDescData = protoimpl.X.CompressGZIP(file_services_eagle_api_proto_src_indicator_proto_rawDescData)
	})
	return file_services_eagle_api_proto_src_indicator_proto_rawDescData
}

var file_services_eagle_api_proto_src_indicator_proto_enumTypes = make([]protoimpl.EnumInfo, 2)
var file_services_eagle_api_proto_src_indicator_proto_msgTypes = make([]protoimpl.MessageInfo, 13)
var file_services_eagle_api_proto_src_indicator_proto_goTypes = []interface{}{
	(Source)(0),                   // 0: eagleApi.Source
	(IndicatorType)(0),            // 1: eagleApi.IndicatorType
	(*Indicator)(nil),             // 2: eagleApi.Indicator
	(*RsiConfigs)(nil),            // 3: eagleApi.RsiConfigs
	(*StochasticConfigs)(nil),     // 4: eagleApi.StochasticConfigs
	(*MovingAverageConfigs)(nil),  // 5: eagleApi.MovingAverageConfigs
	(*BollingerBandsConfigs)(nil), // 6: eagleApi.BollingerBandsConfigs
	(*IndicatorValue)(nil),        // 7: eagleApi.indicatorValue
	(*BollingerBandsValue)(nil),   // 8: eagleApi.BollingerBandsValue
	(*MovingAverageValue)(nil),    // 9: eagleApi.MovingAverageValue
	(*StochasticValue)(nil),       // 10: eagleApi.StochasticValue
	(*RSIValue)(nil),              // 11: eagleApi.RSIValue
	(*IndicatorReturnReq)(nil),    // 12: eagleApi.IndicatorReturnReq
	(*IndicatorListReq)(nil),      // 13: eagleApi.IndicatorListReq
	(*Indicators)(nil),            // 14: eagleApi.Indicators
}
var file_services_eagle_api_proto_src_indicator_proto_depIdxs = []int32{
	1,  // 0: eagleApi.Indicator.type:type_name -> eagleApi.IndicatorType
	3,  // 1: eagleApi.Indicator.rsi:type_name -> eagleApi.RsiConfigs
	4,  // 2: eagleApi.Indicator.stochastic:type_name -> eagleApi.StochasticConfigs
	5,  // 3: eagleApi.Indicator.moving_average:type_name -> eagleApi.MovingAverageConfigs
	6,  // 4: eagleApi.Indicator.bollinger_bands:type_name -> eagleApi.BollingerBandsConfigs
	0,  // 5: eagleApi.MovingAverageConfigs.source:type_name -> eagleApi.Source
	0,  // 6: eagleApi.BollingerBandsConfigs.source:type_name -> eagleApi.Source
	1,  // 7: eagleApi.indicatorValue.type:type_name -> eagleApi.IndicatorType
	8,  // 8: eagleApi.indicatorValue.bollinger_bands:type_name -> eagleApi.BollingerBandsValue
	9,  // 9: eagleApi.indicatorValue.moving_average:type_name -> eagleApi.MovingAverageValue
	10, // 10: eagleApi.indicatorValue.stochastic:type_name -> eagleApi.StochasticValue
	11, // 11: eagleApi.indicatorValue.rsi:type_name -> eagleApi.RSIValue
	1,  // 12: eagleApi.IndicatorListReq.Type:type_name -> eagleApi.IndicatorType
	2,  // 13: eagleApi.Indicators.Elements:type_name -> eagleApi.Indicator
	12, // 14: eagleApi.indicatorService.Return:input_type -> eagleApi.IndicatorReturnReq
	13, // 15: eagleApi.indicatorService.List:input_type -> eagleApi.IndicatorListReq
	2,  // 16: eagleApi.indicatorService.Return:output_type -> eagleApi.Indicator
	14, // 17: eagleApi.indicatorService.List:output_type -> eagleApi.Indicators
	16, // [16:18] is the sub-list for method output_type
	14, // [14:16] is the sub-list for method input_type
	14, // [14:14] is the sub-list for extension type_name
	14, // [14:14] is the sub-list for extension extendee
	0,  // [0:14] is the sub-list for field type_name
}

func init() { file_services_eagle_api_proto_src_indicator_proto_init() }
func file_services_eagle_api_proto_src_indicator_proto_init() {
	if File_services_eagle_api_proto_src_indicator_proto != nil {
		return
	}
	if !protoimpl.UnsafeEnabled {
		file_services_eagle_api_proto_src_indicator_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Indicator); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_services_eagle_api_proto_src_indicator_proto_msgTypes[1].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*RsiConfigs); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_services_eagle_api_proto_src_indicator_proto_msgTypes[2].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*StochasticConfigs); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_services_eagle_api_proto_src_indicator_proto_msgTypes[3].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*MovingAverageConfigs); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_services_eagle_api_proto_src_indicator_proto_msgTypes[4].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*BollingerBandsConfigs); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_services_eagle_api_proto_src_indicator_proto_msgTypes[5].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*IndicatorValue); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_services_eagle_api_proto_src_indicator_proto_msgTypes[6].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*BollingerBandsValue); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_services_eagle_api_proto_src_indicator_proto_msgTypes[7].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*MovingAverageValue); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_services_eagle_api_proto_src_indicator_proto_msgTypes[8].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*StochasticValue); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_services_eagle_api_proto_src_indicator_proto_msgTypes[9].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*RSIValue); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_services_eagle_api_proto_src_indicator_proto_msgTypes[10].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*IndicatorReturnReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_services_eagle_api_proto_src_indicator_proto_msgTypes[11].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*IndicatorListReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_services_eagle_api_proto_src_indicator_proto_msgTypes[12].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Indicators); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	file_services_eagle_api_proto_src_indicator_proto_msgTypes[0].OneofWrappers = []interface{}{
		(*Indicator_Rsi)(nil),
		(*Indicator_Stochastic)(nil),
		(*Indicator_MovingAverage)(nil),
		(*Indicator_BollingerBands)(nil),
	}
	file_services_eagle_api_proto_src_indicator_proto_msgTypes[5].OneofWrappers = []interface{}{
		(*IndicatorValue_BollingerBands)(nil),
		(*IndicatorValue_MovingAverage)(nil),
		(*IndicatorValue_Stochastic)(nil),
		(*IndicatorValue_Rsi)(nil),
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_services_eagle_api_proto_src_indicator_proto_rawDesc,
			NumEnums:      2,
			NumMessages:   13,
			NumExtensions: 0,
			NumServices:   1,
		},
		GoTypes:           file_services_eagle_api_proto_src_indicator_proto_goTypes,
		DependencyIndexes: file_services_eagle_api_proto_src_indicator_proto_depIdxs,
		EnumInfos:         file_services_eagle_api_proto_src_indicator_proto_enumTypes,
		MessageInfos:      file_services_eagle_api_proto_src_indicator_proto_msgTypes,
	}.Build()
	File_services_eagle_api_proto_src_indicator_proto = out.File
	file_services_eagle_api_proto_src_indicator_proto_rawDesc = nil
	file_services_eagle_api_proto_src_indicator_proto_goTypes = nil
	file_services_eagle_api_proto_src_indicator_proto_depIdxs = nil
}
