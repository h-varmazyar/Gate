syntax = "proto3";
package coreApi;
option go_package = "github.com/h-varmazyar/Gate/services/core/api/proto";
import "services/chipmunk/api/proto/src/wallet.proto";
import "services/chipmunk/api/proto/src/resolution.proto";
import "services/chipmunk/api/proto/src/market.proto";
import "services/chipmunk/api/proto/src/candle.proto";
import "services/eagle/api/proto/src/order.proto";
import "api/proto/src/misc.proto";

service FunctionsService {
  //without authentication
  rpc AsyncOHLC(AsyncOHLCReq) returns (AsyncOHLCResp);
  rpc OHLC(OHLCReq) returns (chipmunkApi.Candles);
  rpc AllMarketStatistics(AllMarketStatisticsReq) returns (AllMarketStatisticsResp);
  rpc SingleMarketStatistics(MarketStatisticsReq) returns (MarketStatistics);
  rpc MarketList(MarketListReq) returns (chipmunkApi.Markets);
  rpc GetMarketInfo(MarketInfoReq) returns (MarketInfo);
  //with authentication
  rpc WalletsBalance(WalletsBalanceReq) returns (chipmunkApi.Wallets);
  rpc NewOrder(NewOrderReq) returns (eagleApi.Order);
  rpc CancelOrder(CancelOrderReq) returns (eagleApi.Order);
  rpc OrderStatus(OrderStatusReq) returns (eagleApi.Order);
}

message OHLCItem {
  // @inject_tag: json:"resolution"
  chipmunkApi.Resolution Resolution = 1;
  // @inject_tag: json:"market"
  chipmunkApi.Market Market = 2;
  // @inject_tag: json:"from"
  int64 From = 3;
  // @inject_tag: json:"to"
  int64 To = 4;
  // @inject_tag: json:"timeout"
  int64 Timeout = 6;
  // @inject_tag: json:"issue_time"
  int64 IssueTime = 7;
}

message OHLCReq{
  // @inject_tag: json:"item"
  OHLCItem Item = 1;
  // @inject_tag: json:"platform"
  api.Platform Platform = 2;
}

message AsyncOHLCReq{
  // @inject_tag: json:"items"
  repeated OHLCItem Items = 1;
  // @inject_tag: json:"platform"
  api.Platform Platform = 2;
}

message OHLCResponse{
  // @inject_tag: json:"items"
  repeated OHLCResponseItem Items = 1;
  // @inject_tag: json:"platform"
  api.Platform Platform = 2;
}

message OHLCResponseItem{
  message Candle{
    // @inject_tag: json:"volume"
    double Volume = 3;
    // @inject_tag: json:"amount"
    double Amount = 4;
    // @inject_tag: json:"close"
    double Close = 5;
    // @inject_tag: json:"open"
    double Open = 6;
    // @inject_tag: json:"time"
    int64 Time = 7;
    // @inject_tag: json:"high"
    double High = 8;
    // @inject_tag: json:"low"
    double Low = 9;
  }
  // @inject_tag: json:"candles"
  repeated Candle Candles = 1;
  // @inject_tag: json:"market_id"
  string MarketID = 2;
  // @inject_tag: json:"resolution_id"
  string ResolutionID = 3;
  // @inject_tag: json:"error"
  string Error = 4;
}

message AsyncOHLCResp{
  // @inject_tag: json:"last_request_id"
  string LastRequestID = 1;
  // @inject_tag: json:"predicted_interval_time"
  int64 predicted_interval_time = 2;
}

message AllMarketStatisticsReq {
  // @inject_tag: json:"platform"
  api.Platform Platform = 1;
}

message AllMarketStatisticsResp {
  // @inject_tag: json:"all_statistics"
  map<string, MarketStatistics> AllStatistics = 1;
  // @inject_tag: json:"platform"
  api.Platform Platform = 2;
  // @inject_tag: json:"date"
  int64 date = 3;
}

message MarketStatisticsReq {
  // @inject_tag: json:"market_name"
  string MarketName = 1;
  // @inject_tag: json:"platform"
  api.Platform Platform = 2;
}

message MarketStatistics {
  // @inject_tag: json:"date"
  int64 date = 1;
  // @inject_tag: json:"last_price"
  double LastPrice = 2;
  // @inject_tag: json:"first_buy_price"
  double FirstBuyPrice = 3;
  // @inject_tag: json:"first_buy_amount"
  double FirstBuyAmount = 4;
  // @inject_tag: json:"first_sell_price"
  double FirstSellPrice = 5;
  // @inject_tag: json:"first_sell_amount"
  double FirstSellAmount = 6;
  // @inject_tag: json:"open"
  double Open = 7;
  // @inject_tag: json:"high"
  double High = 8;
  // @inject_tag: json:"low"
  double Low = 9;
  // @inject_tag: json:"close"
  double Close = 10;
  // @inject_tag: json:"volume"
  double Volume = 11;
}

message MarketListReq {
  // @inject_tag: json:"platform"
  api.Platform Platform = 1;
}

message MarketInfoReq {
  // @inject_tag: json:"market"
  chipmunkApi.Market Market = 1;
}

message MarketInfo {
  // @inject_tag: json:"issue_date"
  int64 IssueDate = 1;
  // @inject_tag: json:"short_name"
  string ShortName = 2;
  // @inject_tag: json:"full_name"
  string FullName = 3;
  // @inject_tag: json:"logo"
  string Logo = 4;
  // @inject_tag: json:"website_url"
  string WebsiteURL = 5;
  // @inject_tag: json:"introduction"
  string Introduction = 6;
  // @inject_tag: json:"status"
  string  Status = 7;
}

message WalletsBalanceReq{
  // @inject_tag: json:"brokerage_id"
  string BrokerageID = 1;
}

message NewOrderReq {
  // @inject_tag: json:"market"
  chipmunkApi.Market Market = 1;
  // @inject_tag: json:"type"
  eagleApi.Order.type Type = 2;
  // @inject_tag: json:"amount"
  double Amount = 3;
  // @inject_tag: json:"price"
  double Price = 4;
  // @inject_tag: json:"stop_price"
  double StopPrice = 5;
  // @inject_tag: json:"is_hidden"
  bool ISHidden = 6;
  // @inject_tag: json:"option"
  eagleApi.Order.option Option = 7;
  // @inject_tag: json:"models"
  eagleApi.OrderModel Model = 8;
  // @inject_tag: json:"brokerage_id"
  string BrokerageID = 9;
}

message CancelOrderReq {
  // @inject_tag: json:"server_order_id"
  int64 ServerOrderID = 1;
  // @inject_tag: json:"market"
  chipmunkApi.Market Market = 2;
  // @inject_tag: json:"brokerage_id"
  string BrokerageID = 3;
}

message OrderStatusReq {
  // @inject_tag: json:"server_order_id"
  int64 ServerOrderID = 1;
  // @inject_tag: json:"market"
  chipmunkApi.Market Market = 2;
  // @inject_tag: json:"brokerage_id"
  string BrokerageID = 3;
}