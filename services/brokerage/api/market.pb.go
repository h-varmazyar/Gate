// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.27.1-devel
// 	protoc        v3.6.1
// source: services/brokerage/api/src/market.proto

package api

import (
	api "github.com/mrNobody95/Gate/api"
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type MarketRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// @inject_tag: json:"brokerage_id"
	BrokerageID string `protobuf:"bytes,1,opt,name=BrokerageID,proto3" json:"brokerage_id"`
	// @inject_tag: json:"market_name"
	MarketName string `protobuf:"bytes,2,opt,name=MarketName,proto3" json:"market_name"`
}

func (x *MarketRequest) Reset() {
	*x = MarketRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_services_brokerage_api_src_market_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *MarketRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*MarketRequest) ProtoMessage() {}

func (x *MarketRequest) ProtoReflect() protoreflect.Message {
	mi := &file_services_brokerage_api_src_market_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use MarketRequest.ProtoReflect.Descriptor instead.
func (*MarketRequest) Descriptor() ([]byte, []int) {
	return file_services_brokerage_api_src_market_proto_rawDescGZIP(), []int{0}
}

func (x *MarketRequest) GetBrokerageID() string {
	if x != nil {
		return x.BrokerageID
	}
	return ""
}

func (x *MarketRequest) GetMarketName() string {
	if x != nil {
		return x.MarketName
	}
	return ""
}

type MarketListRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// @inject_tag: json:"brokerage_id"
	BrokerageID string `protobuf:"bytes,1,opt,name=BrokerageID,proto3" json:"brokerage_id"`
}

func (x *MarketListRequest) Reset() {
	*x = MarketListRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_services_brokerage_api_src_market_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *MarketListRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*MarketListRequest) ProtoMessage() {}

func (x *MarketListRequest) ProtoReflect() protoreflect.Message {
	mi := &file_services_brokerage_api_src_market_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use MarketListRequest.ProtoReflect.Descriptor instead.
func (*MarketListRequest) Descriptor() ([]byte, []int) {
	return file_services_brokerage_api_src_market_proto_rawDescGZIP(), []int{1}
}

func (x *MarketListRequest) GetBrokerageID() string {
	if x != nil {
		return x.BrokerageID
	}
	return ""
}

type Market struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// @inject_tag: json:"pricing_decimal"
	PricingDecimal float32 `protobuf:"fixed32,1,opt,name=PricingDecimal,proto3" json:"pricing_decimal"`
	// @inject_tag: json:"trading_decimal"
	TradingDecimal float32 `protobuf:"fixed32,2,opt,name=TradingDecimal,proto3" json:"trading_decimal"`
	// @inject_tag: json:"brokerage_id"
	BrokerageID string `protobuf:"bytes,3,opt,name=BrokerageID,proto3" json:"brokerage_id"`
	// @inject_tag: json:"taker_fee_rate"
	TakerFeeRate float32 `protobuf:"fixed32,4,opt,name=TakerFeeRate,proto3" json:"taker_fee_rate"`
	// @inject_tag: json:"maker_fee_rate"
	MakerFeeRate float32 `protobuf:"fixed32,5,opt,name=MakerFeeRate,proto3" json:"maker_fee_rate"`
	// @inject_tag: json:"destination"
	Destination *Asset `protobuf:"bytes,6,opt,name=Destination,proto3" json:"destination"`
	// @inject_tag: json:"destination_id"
	DestinationID string `protobuf:"bytes,16,opt,name=DestinationID,proto3" json:"destination_id"`
	// @inject_tag: json:"start_time"
	StartTime int64 `protobuf:"varint,7,opt,name=StartTime,proto3" json:"start_time"`
	// @inject_tag: json:"min_amount"
	MinAmount float32 `protobuf:"fixed32,8,opt,name=MinAmount,proto3" json:"min_amount"`
	// @inject_tag: json:"created_at"
	CreatedAt int64 `protobuf:"varint,9,opt,name=CreatedAt,proto3" json:"created_at"`
	// @inject_tag: json:"updated_at"
	UpdatedAt int64 `protobuf:"varint,10,opt,name=UpdatedAt,proto3" json:"updated_at"`
	// @inject_tag: json:"source"
	Source *Asset `protobuf:"bytes,11,opt,name=Source,proto3" json:"source"`
	// @inject_tag: json:"source_id"
	SourceID string `protobuf:"bytes,17,opt,name=SourceID,proto3" json:"source_id"`
	// @inject_tag: json:"is_amm"
	IsAMM bool `protobuf:"varint,12,opt,name=IsAMM,proto3" json:"is_amm"`
	// @inject_tag: json:"name"
	Name string `protobuf:"bytes,13,opt,name=Name,proto3" json:"name"`
	// @inject_tag: json:"id"
	ID string `protobuf:"bytes,14,opt,name=ID,proto3" json:"id"`
	// @inject_tag: json:"status"
	Status api.StatusType `protobuf:"varint,15,opt,name=Status,proto3,enum=api.StatusType" json:"status"`
}

func (x *Market) Reset() {
	*x = Market{}
	if protoimpl.UnsafeEnabled {
		mi := &file_services_brokerage_api_src_market_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Market) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Market) ProtoMessage() {}

func (x *Market) ProtoReflect() protoreflect.Message {
	mi := &file_services_brokerage_api_src_market_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Market.ProtoReflect.Descriptor instead.
func (*Market) Descriptor() ([]byte, []int) {
	return file_services_brokerage_api_src_market_proto_rawDescGZIP(), []int{2}
}

func (x *Market) GetPricingDecimal() float32 {
	if x != nil {
		return x.PricingDecimal
	}
	return 0
}

func (x *Market) GetTradingDecimal() float32 {
	if x != nil {
		return x.TradingDecimal
	}
	return 0
}

func (x *Market) GetBrokerageID() string {
	if x != nil {
		return x.BrokerageID
	}
	return ""
}

func (x *Market) GetTakerFeeRate() float32 {
	if x != nil {
		return x.TakerFeeRate
	}
	return 0
}

func (x *Market) GetMakerFeeRate() float32 {
	if x != nil {
		return x.MakerFeeRate
	}
	return 0
}

func (x *Market) GetDestination() *Asset {
	if x != nil {
		return x.Destination
	}
	return nil
}

func (x *Market) GetDestinationID() string {
	if x != nil {
		return x.DestinationID
	}
	return ""
}

func (x *Market) GetStartTime() int64 {
	if x != nil {
		return x.StartTime
	}
	return 0
}

func (x *Market) GetMinAmount() float32 {
	if x != nil {
		return x.MinAmount
	}
	return 0
}

func (x *Market) GetCreatedAt() int64 {
	if x != nil {
		return x.CreatedAt
	}
	return 0
}

func (x *Market) GetUpdatedAt() int64 {
	if x != nil {
		return x.UpdatedAt
	}
	return 0
}

func (x *Market) GetSource() *Asset {
	if x != nil {
		return x.Source
	}
	return nil
}

func (x *Market) GetSourceID() string {
	if x != nil {
		return x.SourceID
	}
	return ""
}

func (x *Market) GetIsAMM() bool {
	if x != nil {
		return x.IsAMM
	}
	return false
}

func (x *Market) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *Market) GetID() string {
	if x != nil {
		return x.ID
	}
	return ""
}

func (x *Market) GetStatus() api.StatusType {
	if x != nil {
		return x.Status
	}
	return api.StatusType(0)
}

type Markets struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// @inject_tag: json:"markets"
	Markets []*Market `protobuf:"bytes,1,rep,name=Markets,proto3" json:"markets"`
}

func (x *Markets) Reset() {
	*x = Markets{}
	if protoimpl.UnsafeEnabled {
		mi := &file_services_brokerage_api_src_market_proto_msgTypes[3]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Markets) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Markets) ProtoMessage() {}

func (x *Markets) ProtoReflect() protoreflect.Message {
	mi := &file_services_brokerage_api_src_market_proto_msgTypes[3]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Markets.ProtoReflect.Descriptor instead.
func (*Markets) Descriptor() ([]byte, []int) {
	return file_services_brokerage_api_src_market_proto_rawDescGZIP(), []int{3}
}

func (x *Markets) GetMarkets() []*Market {
	if x != nil {
		return x.Markets
	}
	return nil
}

var File_services_brokerage_api_src_market_proto protoreflect.FileDescriptor

var file_services_brokerage_api_src_market_proto_rawDesc = []byte{
	0x0a, 0x27, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x73, 0x2f, 0x62, 0x72, 0x6f, 0x6b, 0x65,
	0x72, 0x61, 0x67, 0x65, 0x2f, 0x61, 0x70, 0x69, 0x2f, 0x73, 0x72, 0x63, 0x2f, 0x6d, 0x61, 0x72,
	0x6b, 0x65, 0x74, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x12, 0x0c, 0x62, 0x72, 0x6f, 0x6b, 0x65,
	0x72, 0x61, 0x67, 0x65, 0x41, 0x70, 0x69, 0x1a, 0x12, 0x61, 0x70, 0x69, 0x2f, 0x73, 0x72, 0x63,
	0x2f, 0x6d, 0x69, 0x73, 0x63, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x26, 0x73, 0x65, 0x72,
	0x76, 0x69, 0x63, 0x65, 0x73, 0x2f, 0x62, 0x72, 0x6f, 0x6b, 0x65, 0x72, 0x61, 0x67, 0x65, 0x2f,
	0x61, 0x70, 0x69, 0x2f, 0x73, 0x72, 0x63, 0x2f, 0x61, 0x73, 0x73, 0x65, 0x74, 0x2e, 0x70, 0x72,
	0x6f, 0x74, 0x6f, 0x22, 0x51, 0x0a, 0x0d, 0x4d, 0x61, 0x72, 0x6b, 0x65, 0x74, 0x52, 0x65, 0x71,
	0x75, 0x65, 0x73, 0x74, 0x12, 0x20, 0x0a, 0x0b, 0x42, 0x72, 0x6f, 0x6b, 0x65, 0x72, 0x61, 0x67,
	0x65, 0x49, 0x44, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x42, 0x72, 0x6f, 0x6b, 0x65,
	0x72, 0x61, 0x67, 0x65, 0x49, 0x44, 0x12, 0x1e, 0x0a, 0x0a, 0x4d, 0x61, 0x72, 0x6b, 0x65, 0x74,
	0x4e, 0x61, 0x6d, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0a, 0x4d, 0x61, 0x72, 0x6b,
	0x65, 0x74, 0x4e, 0x61, 0x6d, 0x65, 0x22, 0x35, 0x0a, 0x11, 0x4d, 0x61, 0x72, 0x6b, 0x65, 0x74,
	0x4c, 0x69, 0x73, 0x74, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x20, 0x0a, 0x0b, 0x42,
	0x72, 0x6f, 0x6b, 0x65, 0x72, 0x61, 0x67, 0x65, 0x49, 0x44, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x0b, 0x42, 0x72, 0x6f, 0x6b, 0x65, 0x72, 0x61, 0x67, 0x65, 0x49, 0x44, 0x22, 0xc3, 0x04,
	0x0a, 0x06, 0x4d, 0x61, 0x72, 0x6b, 0x65, 0x74, 0x12, 0x26, 0x0a, 0x0e, 0x50, 0x72, 0x69, 0x63,
	0x69, 0x6e, 0x67, 0x44, 0x65, 0x63, 0x69, 0x6d, 0x61, 0x6c, 0x18, 0x01, 0x20, 0x01, 0x28, 0x02,
	0x52, 0x0e, 0x50, 0x72, 0x69, 0x63, 0x69, 0x6e, 0x67, 0x44, 0x65, 0x63, 0x69, 0x6d, 0x61, 0x6c,
	0x12, 0x26, 0x0a, 0x0e, 0x54, 0x72, 0x61, 0x64, 0x69, 0x6e, 0x67, 0x44, 0x65, 0x63, 0x69, 0x6d,
	0x61, 0x6c, 0x18, 0x02, 0x20, 0x01, 0x28, 0x02, 0x52, 0x0e, 0x54, 0x72, 0x61, 0x64, 0x69, 0x6e,
	0x67, 0x44, 0x65, 0x63, 0x69, 0x6d, 0x61, 0x6c, 0x12, 0x20, 0x0a, 0x0b, 0x42, 0x72, 0x6f, 0x6b,
	0x65, 0x72, 0x61, 0x67, 0x65, 0x49, 0x44, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x42,
	0x72, 0x6f, 0x6b, 0x65, 0x72, 0x61, 0x67, 0x65, 0x49, 0x44, 0x12, 0x22, 0x0a, 0x0c, 0x54, 0x61,
	0x6b, 0x65, 0x72, 0x46, 0x65, 0x65, 0x52, 0x61, 0x74, 0x65, 0x18, 0x04, 0x20, 0x01, 0x28, 0x02,
	0x52, 0x0c, 0x54, 0x61, 0x6b, 0x65, 0x72, 0x46, 0x65, 0x65, 0x52, 0x61, 0x74, 0x65, 0x12, 0x22,
	0x0a, 0x0c, 0x4d, 0x61, 0x6b, 0x65, 0x72, 0x46, 0x65, 0x65, 0x52, 0x61, 0x74, 0x65, 0x18, 0x05,
	0x20, 0x01, 0x28, 0x02, 0x52, 0x0c, 0x4d, 0x61, 0x6b, 0x65, 0x72, 0x46, 0x65, 0x65, 0x52, 0x61,
	0x74, 0x65, 0x12, 0x35, 0x0a, 0x0b, 0x44, 0x65, 0x73, 0x74, 0x69, 0x6e, 0x61, 0x74, 0x69, 0x6f,
	0x6e, 0x18, 0x06, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x13, 0x2e, 0x62, 0x72, 0x6f, 0x6b, 0x65, 0x72,
	0x61, 0x67, 0x65, 0x41, 0x70, 0x69, 0x2e, 0x41, 0x73, 0x73, 0x65, 0x74, 0x52, 0x0b, 0x44, 0x65,
	0x73, 0x74, 0x69, 0x6e, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x24, 0x0a, 0x0d, 0x44, 0x65, 0x73,
	0x74, 0x69, 0x6e, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x49, 0x44, 0x18, 0x10, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x0d, 0x44, 0x65, 0x73, 0x74, 0x69, 0x6e, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x49, 0x44, 0x12,
	0x1c, 0x0a, 0x09, 0x53, 0x74, 0x61, 0x72, 0x74, 0x54, 0x69, 0x6d, 0x65, 0x18, 0x07, 0x20, 0x01,
	0x28, 0x03, 0x52, 0x09, 0x53, 0x74, 0x61, 0x72, 0x74, 0x54, 0x69, 0x6d, 0x65, 0x12, 0x1c, 0x0a,
	0x09, 0x4d, 0x69, 0x6e, 0x41, 0x6d, 0x6f, 0x75, 0x6e, 0x74, 0x18, 0x08, 0x20, 0x01, 0x28, 0x02,
	0x52, 0x09, 0x4d, 0x69, 0x6e, 0x41, 0x6d, 0x6f, 0x75, 0x6e, 0x74, 0x12, 0x1c, 0x0a, 0x09, 0x43,
	0x72, 0x65, 0x61, 0x74, 0x65, 0x64, 0x41, 0x74, 0x18, 0x09, 0x20, 0x01, 0x28, 0x03, 0x52, 0x09,
	0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x64, 0x41, 0x74, 0x12, 0x1c, 0x0a, 0x09, 0x55, 0x70, 0x64,
	0x61, 0x74, 0x65, 0x64, 0x41, 0x74, 0x18, 0x0a, 0x20, 0x01, 0x28, 0x03, 0x52, 0x09, 0x55, 0x70,
	0x64, 0x61, 0x74, 0x65, 0x64, 0x41, 0x74, 0x12, 0x2b, 0x0a, 0x06, 0x53, 0x6f, 0x75, 0x72, 0x63,
	0x65, 0x18, 0x0b, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x13, 0x2e, 0x62, 0x72, 0x6f, 0x6b, 0x65, 0x72,
	0x61, 0x67, 0x65, 0x41, 0x70, 0x69, 0x2e, 0x41, 0x73, 0x73, 0x65, 0x74, 0x52, 0x06, 0x53, 0x6f,
	0x75, 0x72, 0x63, 0x65, 0x12, 0x1a, 0x0a, 0x08, 0x53, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x49, 0x44,
	0x18, 0x11, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x53, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x49, 0x44,
	0x12, 0x14, 0x0a, 0x05, 0x49, 0x73, 0x41, 0x4d, 0x4d, 0x18, 0x0c, 0x20, 0x01, 0x28, 0x08, 0x52,
	0x05, 0x49, 0x73, 0x41, 0x4d, 0x4d, 0x12, 0x12, 0x0a, 0x04, 0x4e, 0x61, 0x6d, 0x65, 0x18, 0x0d,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x4e, 0x61, 0x6d, 0x65, 0x12, 0x0e, 0x0a, 0x02, 0x49, 0x44,
	0x18, 0x0e, 0x20, 0x01, 0x28, 0x09, 0x52, 0x02, 0x49, 0x44, 0x12, 0x27, 0x0a, 0x06, 0x53, 0x74,
	0x61, 0x74, 0x75, 0x73, 0x18, 0x0f, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x0f, 0x2e, 0x61, 0x70, 0x69,
	0x2e, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x54, 0x79, 0x70, 0x65, 0x52, 0x06, 0x53, 0x74, 0x61,
	0x74, 0x75, 0x73, 0x22, 0x39, 0x0a, 0x07, 0x4d, 0x61, 0x72, 0x6b, 0x65, 0x74, 0x73, 0x12, 0x2e,
	0x0a, 0x07, 0x4d, 0x61, 0x72, 0x6b, 0x65, 0x74, 0x73, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32,
	0x14, 0x2e, 0x62, 0x72, 0x6f, 0x6b, 0x65, 0x72, 0x61, 0x67, 0x65, 0x41, 0x70, 0x69, 0x2e, 0x4d,
	0x61, 0x72, 0x6b, 0x65, 0x74, 0x52, 0x07, 0x4d, 0x61, 0x72, 0x6b, 0x65, 0x74, 0x73, 0x32, 0xf3,
	0x01, 0x0a, 0x0d, 0x4d, 0x61, 0x72, 0x6b, 0x65, 0x74, 0x53, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65,
	0x12, 0x31, 0x0a, 0x03, 0x53, 0x65, 0x74, 0x12, 0x14, 0x2e, 0x62, 0x72, 0x6f, 0x6b, 0x65, 0x72,
	0x61, 0x67, 0x65, 0x41, 0x70, 0x69, 0x2e, 0x4d, 0x61, 0x72, 0x6b, 0x65, 0x74, 0x1a, 0x14, 0x2e,
	0x62, 0x72, 0x6f, 0x6b, 0x65, 0x72, 0x61, 0x67, 0x65, 0x41, 0x70, 0x69, 0x2e, 0x4d, 0x61, 0x72,
	0x6b, 0x65, 0x74, 0x12, 0x38, 0x0a, 0x03, 0x47, 0x65, 0x74, 0x12, 0x1b, 0x2e, 0x62, 0x72, 0x6f,
	0x6b, 0x65, 0x72, 0x61, 0x67, 0x65, 0x41, 0x70, 0x69, 0x2e, 0x4d, 0x61, 0x72, 0x6b, 0x65, 0x74,
	0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x14, 0x2e, 0x62, 0x72, 0x6f, 0x6b, 0x65, 0x72,
	0x61, 0x67, 0x65, 0x41, 0x70, 0x69, 0x2e, 0x4d, 0x61, 0x72, 0x6b, 0x65, 0x74, 0x12, 0x3e, 0x0a,
	0x04, 0x4c, 0x69, 0x73, 0x74, 0x12, 0x1f, 0x2e, 0x62, 0x72, 0x6f, 0x6b, 0x65, 0x72, 0x61, 0x67,
	0x65, 0x41, 0x70, 0x69, 0x2e, 0x4d, 0x61, 0x72, 0x6b, 0x65, 0x74, 0x4c, 0x69, 0x73, 0x74, 0x52,
	0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x15, 0x2e, 0x62, 0x72, 0x6f, 0x6b, 0x65, 0x72, 0x61,
	0x67, 0x65, 0x41, 0x70, 0x69, 0x2e, 0x4d, 0x61, 0x72, 0x6b, 0x65, 0x74, 0x73, 0x12, 0x35, 0x0a,
	0x0c, 0x43, 0x68, 0x61, 0x6e, 0x67, 0x65, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x12, 0x18, 0x2e,
	0x61, 0x70, 0x69, 0x2e, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x43, 0x68, 0x61, 0x6e, 0x67, 0x65,
	0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x0b, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x53, 0x74,
	0x61, 0x74, 0x75, 0x73, 0x42, 0x33, 0x5a, 0x31, 0x67, 0x69, 0x74, 0x68, 0x75, 0x62, 0x2e, 0x63,
	0x6f, 0x6d, 0x2f, 0x6d, 0x72, 0x4e, 0x6f, 0x62, 0x6f, 0x64, 0x79, 0x39, 0x35, 0x2f, 0x47, 0x61,
	0x74, 0x65, 0x2f, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x73, 0x2f, 0x62, 0x72, 0x6f, 0x6b,
	0x65, 0x72, 0x61, 0x67, 0x65, 0x2f, 0x61, 0x70, 0x69, 0x62, 0x06, 0x70, 0x72, 0x6f, 0x74, 0x6f,
	0x33,
}

var (
	file_services_brokerage_api_src_market_proto_rawDescOnce sync.Once
	file_services_brokerage_api_src_market_proto_rawDescData = file_services_brokerage_api_src_market_proto_rawDesc
)

func file_services_brokerage_api_src_market_proto_rawDescGZIP() []byte {
	file_services_brokerage_api_src_market_proto_rawDescOnce.Do(func() {
		file_services_brokerage_api_src_market_proto_rawDescData = protoimpl.X.CompressGZIP(file_services_brokerage_api_src_market_proto_rawDescData)
	})
	return file_services_brokerage_api_src_market_proto_rawDescData
}

var file_services_brokerage_api_src_market_proto_msgTypes = make([]protoimpl.MessageInfo, 4)
var file_services_brokerage_api_src_market_proto_goTypes = []interface{}{
	(*MarketRequest)(nil),           // 0: brokerageApi.MarketRequest
	(*MarketListRequest)(nil),       // 1: brokerageApi.MarketListRequest
	(*Market)(nil),                  // 2: brokerageApi.Market
	(*Markets)(nil),                 // 3: brokerageApi.Markets
	(*Asset)(nil),                   // 4: brokerageApi.Asset
	(api.StatusType)(0),             // 5: api.StatusType
	(*api.StatusChangeRequest)(nil), // 6: api.StatusChangeRequest
	(*api.Status)(nil),              // 7: api.Status
}
var file_services_brokerage_api_src_market_proto_depIdxs = []int32{
	4, // 0: brokerageApi.Market.Destination:type_name -> brokerageApi.Asset
	4, // 1: brokerageApi.Market.Source:type_name -> brokerageApi.Asset
	5, // 2: brokerageApi.Market.Status:type_name -> api.StatusType
	2, // 3: brokerageApi.Markets.Markets:type_name -> brokerageApi.Market
	2, // 4: brokerageApi.MarketService.Set:input_type -> brokerageApi.Market
	0, // 5: brokerageApi.MarketService.Get:input_type -> brokerageApi.MarketRequest
	1, // 6: brokerageApi.MarketService.List:input_type -> brokerageApi.MarketListRequest
	6, // 7: brokerageApi.MarketService.ChangeStatus:input_type -> api.StatusChangeRequest
	2, // 8: brokerageApi.MarketService.Set:output_type -> brokerageApi.Market
	2, // 9: brokerageApi.MarketService.Get:output_type -> brokerageApi.Market
	3, // 10: brokerageApi.MarketService.List:output_type -> brokerageApi.Markets
	7, // 11: brokerageApi.MarketService.ChangeStatus:output_type -> api.Status
	8, // [8:12] is the sub-list for method output_type
	4, // [4:8] is the sub-list for method input_type
	4, // [4:4] is the sub-list for extension type_name
	4, // [4:4] is the sub-list for extension extendee
	0, // [0:4] is the sub-list for field type_name
}

func init() { file_services_brokerage_api_src_market_proto_init() }
func file_services_brokerage_api_src_market_proto_init() {
	if File_services_brokerage_api_src_market_proto != nil {
		return
	}
	file_services_brokerage_api_src_asset_proto_init()
	if !protoimpl.UnsafeEnabled {
		file_services_brokerage_api_src_market_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*MarketRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_services_brokerage_api_src_market_proto_msgTypes[1].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*MarketListRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_services_brokerage_api_src_market_proto_msgTypes[2].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Market); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_services_brokerage_api_src_market_proto_msgTypes[3].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Markets); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_services_brokerage_api_src_market_proto_rawDesc,
			NumEnums:      0,
			NumMessages:   4,
			NumExtensions: 0,
			NumServices:   1,
		},
		GoTypes:           file_services_brokerage_api_src_market_proto_goTypes,
		DependencyIndexes: file_services_brokerage_api_src_market_proto_depIdxs,
		MessageInfos:      file_services_brokerage_api_src_market_proto_msgTypes,
	}.Build()
	File_services_brokerage_api_src_market_proto = out.File
	file_services_brokerage_api_src_market_proto_rawDesc = nil
	file_services_brokerage_api_src_market_proto_goTypes = nil
	file_services_brokerage_api_src_market_proto_depIdxs = nil
}
