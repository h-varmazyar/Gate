syntax = "proto3";
package brokerageApi;
option go_package = "github.com/h-varmazyar/Gate/services/brokerage/api";
import "api/src/misc.proto";

service StrategyService {
  rpc Create(CreateStrategyReq) returns(Strategy);
  rpc Return(ReturnStrategyReq) returns(Strategy);
  rpc List(api.Void) returns (Strategies);
}

enum IndicatorNames{
  RSI = 0;
  Stochastic = 1;
  MovingAverage = 2;
  BollingerBands = 3;
}

message Strategy {
  // @inject_tag: json:"id"
  uint32 ID = 1;
  // @inject_tag: json:"name"
  string Name = 2;
  // @inject_tag: json:"description"
  string Description = 3;
  // @inject_tag: json:"min_daily_profit"
  string MinDailyProfit = 4;
  // @inject_tag: json:"min_profit_per_trade"
  string MinProfitPerTrade = 5;
  // @inject_tag: json:"indicators"
  repeated Indicator Indicators = 6;
  // @inject_tag: json:"created_at,omitempty"
  int64 CreatedAt = 7;
  // @inject_tag: json:"updated_at,omitempty"
  int64 UpdatedAt = 8;
}

message Strategies {
  // @inject_tag: json:"elements"
  repeated Strategy Elements = 1;
}

message Indicator {
  // @inject_tag: json:"name"
  IndicatorNames Name = 1;
  // @inject_tag: json:"configs"
  bytes Configs = 2;
}

message CreateStrategyReq {
  // @inject_tag: json:"name"
  string Name = 1;
  // @inject_tag: json:"description"
  string Description = 2;
  // @inject_tag: json:"min_daily_profit"
  string MinDailyProfit = 3;
  // @inject_tag: json:"min_profit_per_trade"
  string MinProfitPerTrade = 4;
  // @inject_tag: json:"max_fund_per_trade"
  string MaxFundPerTrade = 5;
  // @inject_tag: json:"indicators"
  repeated Indicator Indicators = 6;
}

message ReturnStrategyReq {
  // @inject_tag: json:"id"
  uint32 ID = 1;
}
