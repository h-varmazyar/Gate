syntax = "proto3";
package networkApi;
option go_package = "github.com/mrNobody95/Gate/services/network/api";

service RequestService {
  rpc Do(Request) returns (Response);
}

enum Type {
  Unknown = 0;
  Post = 1;
  Get = 2;
}

enum Status {
  Success = 0;
  Error = 1;
  ParameterError = 2;
  InternalError = 3;
  IpNotAllow = 23;
  AccessIdNotExist = 24;
  SignatureError = 25;
  ServiceUnavailable = 35;
  ServiceTimeout = 36;
  UnpairedAccount = 40;
  TransferToSubRejected = 49;
  InsufficientBalance = 107;
  ForbidTrading = 115;
  TonceCheckError = 227;
  OrderNumberNotExist = 600;
  OtherUserOrder = 601;
  BellowMinLimit = 602;
  PriceDeviationLarge = 606;
  MergeDepthError = 651;
}

enum AuthType {
  None = 0;
  StaticToken = 1;
  UsernamePassword = 2;
}

message KV {
  // @inject_tag: json:"key"
  string key = 1;
  // @inject_tag: json:"value"
  string Value = 2;
}

message Auth {
  // @inject_tag: json:"type"
  AuthType Type = 1;
  // @inject_tag: json:"username"
  string Username = 2;
  // @inject_tag: json:"password"
  string Password = 3;
  // @inject_tag: json:"static_token"
  string StaticToken = 4;
}

message Request {
  // @inject_tag: json:"type"
  Type Type = 1;
  // @inject_tag: json:"endpoint"
  string Endpoint = 2;
  // @inject_tag: json:"params"
  repeated KV Params = 3;
  // @inject_tag: json:"headers"
  repeated KV Headers = 4;
  // @inject_tag: json:"auth,omitempty"
  Auth Auth = 5;
}

message Response {
  // @inject_tag: json:"status"
  Status Status = 1;
  // @inject_tag: json:"message"
  string Message = 2;
  // @inject_tag: json:"response"
  string Response = 3;
}