// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.26.0
// 	protoc        v3.6.1
// source: services/chipmunk/api/src/indicator.proto

package api

import (
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type IndicatorType int32

const (
	IndicatorType_RSI            IndicatorType = 0
	IndicatorType_Stochastic     IndicatorType = 1
	IndicatorType_MovingAverage  IndicatorType = 2
	IndicatorType_BollingerBands IndicatorType = 3
)

// Enum value maps for IndicatorType.
var (
	IndicatorType_name = map[int32]string{
		0: "RSI",
		1: "Stochastic",
		2: "MovingAverage",
		3: "BollingerBands",
	}
	IndicatorType_value = map[string]int32{
		"RSI":            0,
		"Stochastic":     1,
		"MovingAverage":  2,
		"BollingerBands": 3,
	}
)

func (x IndicatorType) Enum() *IndicatorType {
	p := new(IndicatorType)
	*p = x
	return p
}

func (x IndicatorType) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (IndicatorType) Descriptor() protoreflect.EnumDescriptor {
	return file_services_chipmunk_api_src_indicator_proto_enumTypes[0].Descriptor()
}

func (IndicatorType) Type() protoreflect.EnumType {
	return &file_services_chipmunk_api_src_indicator_proto_enumTypes[0]
}

func (x IndicatorType) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use IndicatorType.Descriptor instead.
func (IndicatorType) EnumDescriptor() ([]byte, []int) {
	return file_services_chipmunk_api_src_indicator_proto_rawDescGZIP(), []int{0}
}

type Source int32

const (
	Source_Custom Source = 0
	Source_OHLC4  Source = 1
	Source_Close  Source = 2
	Source_Open   Source = 3
	Source_High   Source = 4
	Source_HLC3   Source = 5
	Source_Low    Source = 6
	Source_HL2    Source = 7
)

// Enum value maps for Source.
var (
	Source_name = map[int32]string{
		0: "Custom",
		1: "OHLC4",
		2: "Close",
		3: "Open",
		4: "High",
		5: "HLC3",
		6: "Low",
		7: "HL2",
	}
	Source_value = map[string]int32{
		"Custom": 0,
		"OHLC4":  1,
		"Close":  2,
		"Open":   3,
		"High":   4,
		"HLC3":   5,
		"Low":    6,
		"HL2":    7,
	}
)

func (x Source) Enum() *Source {
	p := new(Source)
	*p = x
	return p
}

func (x Source) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (Source) Descriptor() protoreflect.EnumDescriptor {
	return file_services_chipmunk_api_src_indicator_proto_enumTypes[1].Descriptor()
}

func (Source) Type() protoreflect.EnumType {
	return &file_services_chipmunk_api_src_indicator_proto_enumTypes[1]
}

func (x Source) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use Source.Descriptor instead.
func (Source) EnumDescriptor() ([]byte, []int) {
	return file_services_chipmunk_api_src_indicator_proto_rawDescGZIP(), []int{1}
}

type Indicator struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// @inject_tag: json:"id"
	ID string `protobuf:"bytes,1,opt,name=ID,proto3" json:"id"`
	// @inject_tag: json:"name"
	Type IndicatorType `protobuf:"varint,2,opt,name=Type,proto3,enum=chipmunkApi.IndicatorType" json:"name"`
	// @inject_tag: json:"configs"
	Configs *IndicatorConfigs `protobuf:"bytes,3,opt,name=Configs,proto3" json:"configs"`
}

func (x *Indicator) Reset() {
	*x = Indicator{}
	if protoimpl.UnsafeEnabled {
		mi := &file_services_chipmunk_api_src_indicator_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Indicator) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Indicator) ProtoMessage() {}

func (x *Indicator) ProtoReflect() protoreflect.Message {
	mi := &file_services_chipmunk_api_src_indicator_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Indicator.ProtoReflect.Descriptor instead.
func (*Indicator) Descriptor() ([]byte, []int) {
	return file_services_chipmunk_api_src_indicator_proto_rawDescGZIP(), []int{0}
}

func (x *Indicator) GetID() string {
	if x != nil {
		return x.ID
	}
	return ""
}

func (x *Indicator) GetType() IndicatorType {
	if x != nil {
		return x.Type
	}
	return IndicatorType_RSI
}

func (x *Indicator) GetConfigs() *IndicatorConfigs {
	if x != nil {
		return x.Configs
	}
	return nil
}

type IndicatorConfigs struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// @inject_tag: json:"rsi,omitempty"
	RSI *RsiConfigs `protobuf:"bytes,1,opt,name=RSI,proto3" json:"rsi,omitempty"`
	// @inject_tag: json:"stochastic,omitempty"
	Stochastic *StochasticConfigs `protobuf:"bytes,2,opt,name=Stochastic,proto3" json:"stochastic,omitempty"`
	// @inject_tag: json:"moving_average,omitempty"
	MovingAverage *MovingAverageConfigs `protobuf:"bytes,3,opt,name=MovingAverage,proto3" json:"moving_average,omitempty"`
	// @inject_tag: json:"bollinger_bands,omitempty"
	BollingerBands *BollingerBandsConfigs `protobuf:"bytes,4,opt,name=BollingerBands,proto3" json:"bollinger_bands,omitempty"`
}

func (x *IndicatorConfigs) Reset() {
	*x = IndicatorConfigs{}
	if protoimpl.UnsafeEnabled {
		mi := &file_services_chipmunk_api_src_indicator_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *IndicatorConfigs) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*IndicatorConfigs) ProtoMessage() {}

func (x *IndicatorConfigs) ProtoReflect() protoreflect.Message {
	mi := &file_services_chipmunk_api_src_indicator_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use IndicatorConfigs.ProtoReflect.Descriptor instead.
func (*IndicatorConfigs) Descriptor() ([]byte, []int) {
	return file_services_chipmunk_api_src_indicator_proto_rawDescGZIP(), []int{1}
}

func (x *IndicatorConfigs) GetRSI() *RsiConfigs {
	if x != nil {
		return x.RSI
	}
	return nil
}

func (x *IndicatorConfigs) GetStochastic() *StochasticConfigs {
	if x != nil {
		return x.Stochastic
	}
	return nil
}

func (x *IndicatorConfigs) GetMovingAverage() *MovingAverageConfigs {
	if x != nil {
		return x.MovingAverage
	}
	return nil
}

func (x *IndicatorConfigs) GetBollingerBands() *BollingerBandsConfigs {
	if x != nil {
		return x.BollingerBands
	}
	return nil
}

type IndicatorReturnReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// @inject_tag: json:"id"
	ID string `protobuf:"bytes,1,opt,name=ID,proto3" json:"id"`
}

func (x *IndicatorReturnReq) Reset() {
	*x = IndicatorReturnReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_services_chipmunk_api_src_indicator_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *IndicatorReturnReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*IndicatorReturnReq) ProtoMessage() {}

func (x *IndicatorReturnReq) ProtoReflect() protoreflect.Message {
	mi := &file_services_chipmunk_api_src_indicator_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use IndicatorReturnReq.ProtoReflect.Descriptor instead.
func (*IndicatorReturnReq) Descriptor() ([]byte, []int) {
	return file_services_chipmunk_api_src_indicator_proto_rawDescGZIP(), []int{2}
}

func (x *IndicatorReturnReq) GetID() string {
	if x != nil {
		return x.ID
	}
	return ""
}

type RsiConfigs struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// @inject_tag: json:"length"
	Length int32 `protobuf:"varint,1,opt,name=Length,proto3" json:"length"`
}

func (x *RsiConfigs) Reset() {
	*x = RsiConfigs{}
	if protoimpl.UnsafeEnabled {
		mi := &file_services_chipmunk_api_src_indicator_proto_msgTypes[3]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *RsiConfigs) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RsiConfigs) ProtoMessage() {}

func (x *RsiConfigs) ProtoReflect() protoreflect.Message {
	mi := &file_services_chipmunk_api_src_indicator_proto_msgTypes[3]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RsiConfigs.ProtoReflect.Descriptor instead.
func (*RsiConfigs) Descriptor() ([]byte, []int) {
	return file_services_chipmunk_api_src_indicator_proto_rawDescGZIP(), []int{3}
}

func (x *RsiConfigs) GetLength() int32 {
	if x != nil {
		return x.Length
	}
	return 0
}

type StochasticConfigs struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// @inject_tag: json:"length"
	Length int32 `protobuf:"varint,1,opt,name=Length,proto3" json:"length"`
	// @inject_tag: json:"smooth_k"
	SmoothK int32 `protobuf:"varint,2,opt,name=SmoothK,proto3" json:"smooth_k"`
	// @inject_tag: json:"smooth_d"
	SmoothD int32 `protobuf:"varint,3,opt,name=SmoothD,proto3" json:"smooth_d"`
}

func (x *StochasticConfigs) Reset() {
	*x = StochasticConfigs{}
	if protoimpl.UnsafeEnabled {
		mi := &file_services_chipmunk_api_src_indicator_proto_msgTypes[4]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *StochasticConfigs) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*StochasticConfigs) ProtoMessage() {}

func (x *StochasticConfigs) ProtoReflect() protoreflect.Message {
	mi := &file_services_chipmunk_api_src_indicator_proto_msgTypes[4]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use StochasticConfigs.ProtoReflect.Descriptor instead.
func (*StochasticConfigs) Descriptor() ([]byte, []int) {
	return file_services_chipmunk_api_src_indicator_proto_rawDescGZIP(), []int{4}
}

func (x *StochasticConfigs) GetLength() int32 {
	if x != nil {
		return x.Length
	}
	return 0
}

func (x *StochasticConfigs) GetSmoothK() int32 {
	if x != nil {
		return x.SmoothK
	}
	return 0
}

func (x *StochasticConfigs) GetSmoothD() int32 {
	if x != nil {
		return x.SmoothD
	}
	return 0
}

type MovingAverageConfigs struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// @inject_tag: json:"length"
	Length int32 `protobuf:"varint,1,opt,name=Length,proto3" json:"length"`
	// @inject_tag: json:"source"
	Source Source `protobuf:"varint,2,opt,name=Source,proto3,enum=chipmunkApi.Source" json:"source"`
}

func (x *MovingAverageConfigs) Reset() {
	*x = MovingAverageConfigs{}
	if protoimpl.UnsafeEnabled {
		mi := &file_services_chipmunk_api_src_indicator_proto_msgTypes[5]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *MovingAverageConfigs) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*MovingAverageConfigs) ProtoMessage() {}

func (x *MovingAverageConfigs) ProtoReflect() protoreflect.Message {
	mi := &file_services_chipmunk_api_src_indicator_proto_msgTypes[5]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use MovingAverageConfigs.ProtoReflect.Descriptor instead.
func (*MovingAverageConfigs) Descriptor() ([]byte, []int) {
	return file_services_chipmunk_api_src_indicator_proto_rawDescGZIP(), []int{5}
}

func (x *MovingAverageConfigs) GetLength() int32 {
	if x != nil {
		return x.Length
	}
	return 0
}

func (x *MovingAverageConfigs) GetSource() Source {
	if x != nil {
		return x.Source
	}
	return Source_Custom
}

type BollingerBandsConfigs struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// @inject_tag: json:"length"
	Length int32 `protobuf:"varint,1,opt,name=Length,proto3" json:"length"`
	// @inject_tag: json:"deviation"
	Deviation int32 `protobuf:"varint,2,opt,name=Deviation,proto3" json:"deviation"`
	// @inject_tag: json:"source"
	Source Source `protobuf:"varint,3,opt,name=Source,proto3,enum=chipmunkApi.Source" json:"source"`
}

func (x *BollingerBandsConfigs) Reset() {
	*x = BollingerBandsConfigs{}
	if protoimpl.UnsafeEnabled {
		mi := &file_services_chipmunk_api_src_indicator_proto_msgTypes[6]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *BollingerBandsConfigs) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*BollingerBandsConfigs) ProtoMessage() {}

func (x *BollingerBandsConfigs) ProtoReflect() protoreflect.Message {
	mi := &file_services_chipmunk_api_src_indicator_proto_msgTypes[6]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use BollingerBandsConfigs.ProtoReflect.Descriptor instead.
func (*BollingerBandsConfigs) Descriptor() ([]byte, []int) {
	return file_services_chipmunk_api_src_indicator_proto_rawDescGZIP(), []int{6}
}

func (x *BollingerBandsConfigs) GetLength() int32 {
	if x != nil {
		return x.Length
	}
	return 0
}

func (x *BollingerBandsConfigs) GetDeviation() int32 {
	if x != nil {
		return x.Deviation
	}
	return 0
}

func (x *BollingerBandsConfigs) GetSource() Source {
	if x != nil {
		return x.Source
	}
	return Source_Custom
}

var File_services_chipmunk_api_src_indicator_proto protoreflect.FileDescriptor

var file_services_chipmunk_api_src_indicator_proto_rawDesc = []byte{
	0x0a, 0x29, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x73, 0x2f, 0x63, 0x68, 0x69, 0x70, 0x6d,
	0x75, 0x6e, 0x6b, 0x2f, 0x61, 0x70, 0x69, 0x2f, 0x73, 0x72, 0x63, 0x2f, 0x69, 0x6e, 0x64, 0x69,
	0x63, 0x61, 0x74, 0x6f, 0x72, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x12, 0x0b, 0x63, 0x68, 0x69,
	0x70, 0x6d, 0x75, 0x6e, 0x6b, 0x41, 0x70, 0x69, 0x22, 0x84, 0x01, 0x0a, 0x09, 0x49, 0x6e, 0x64,
	0x69, 0x63, 0x61, 0x74, 0x6f, 0x72, 0x12, 0x0e, 0x0a, 0x02, 0x49, 0x44, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x02, 0x49, 0x44, 0x12, 0x2e, 0x0a, 0x04, 0x54, 0x79, 0x70, 0x65, 0x18, 0x02,
	0x20, 0x01, 0x28, 0x0e, 0x32, 0x1a, 0x2e, 0x63, 0x68, 0x69, 0x70, 0x6d, 0x75, 0x6e, 0x6b, 0x41,
	0x70, 0x69, 0x2e, 0x49, 0x6e, 0x64, 0x69, 0x63, 0x61, 0x74, 0x6f, 0x72, 0x54, 0x79, 0x70, 0x65,
	0x52, 0x04, 0x54, 0x79, 0x70, 0x65, 0x12, 0x37, 0x0a, 0x07, 0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67,
	0x73, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1d, 0x2e, 0x63, 0x68, 0x69, 0x70, 0x6d, 0x75,
	0x6e, 0x6b, 0x41, 0x70, 0x69, 0x2e, 0x49, 0x6e, 0x64, 0x69, 0x63, 0x61, 0x74, 0x6f, 0x72, 0x43,
	0x6f, 0x6e, 0x66, 0x69, 0x67, 0x73, 0x52, 0x07, 0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x73, 0x22,
	0x92, 0x02, 0x0a, 0x10, 0x49, 0x6e, 0x64, 0x69, 0x63, 0x61, 0x74, 0x6f, 0x72, 0x43, 0x6f, 0x6e,
	0x66, 0x69, 0x67, 0x73, 0x12, 0x29, 0x0a, 0x03, 0x52, 0x53, 0x49, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x0b, 0x32, 0x17, 0x2e, 0x63, 0x68, 0x69, 0x70, 0x6d, 0x75, 0x6e, 0x6b, 0x41, 0x70, 0x69, 0x2e,
	0x52, 0x73, 0x69, 0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x73, 0x52, 0x03, 0x52, 0x53, 0x49, 0x12,
	0x3e, 0x0a, 0x0a, 0x53, 0x74, 0x6f, 0x63, 0x68, 0x61, 0x73, 0x74, 0x69, 0x63, 0x18, 0x02, 0x20,
	0x01, 0x28, 0x0b, 0x32, 0x1e, 0x2e, 0x63, 0x68, 0x69, 0x70, 0x6d, 0x75, 0x6e, 0x6b, 0x41, 0x70,
	0x69, 0x2e, 0x53, 0x74, 0x6f, 0x63, 0x68, 0x61, 0x73, 0x74, 0x69, 0x63, 0x43, 0x6f, 0x6e, 0x66,
	0x69, 0x67, 0x73, 0x52, 0x0a, 0x53, 0x74, 0x6f, 0x63, 0x68, 0x61, 0x73, 0x74, 0x69, 0x63, 0x12,
	0x47, 0x0a, 0x0d, 0x4d, 0x6f, 0x76, 0x69, 0x6e, 0x67, 0x41, 0x76, 0x65, 0x72, 0x61, 0x67, 0x65,
	0x18, 0x03, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x21, 0x2e, 0x63, 0x68, 0x69, 0x70, 0x6d, 0x75, 0x6e,
	0x6b, 0x41, 0x70, 0x69, 0x2e, 0x4d, 0x6f, 0x76, 0x69, 0x6e, 0x67, 0x41, 0x76, 0x65, 0x72, 0x61,
	0x67, 0x65, 0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x73, 0x52, 0x0d, 0x4d, 0x6f, 0x76, 0x69, 0x6e,
	0x67, 0x41, 0x76, 0x65, 0x72, 0x61, 0x67, 0x65, 0x12, 0x4a, 0x0a, 0x0e, 0x42, 0x6f, 0x6c, 0x6c,
	0x69, 0x6e, 0x67, 0x65, 0x72, 0x42, 0x61, 0x6e, 0x64, 0x73, 0x18, 0x04, 0x20, 0x01, 0x28, 0x0b,
	0x32, 0x22, 0x2e, 0x63, 0x68, 0x69, 0x70, 0x6d, 0x75, 0x6e, 0x6b, 0x41, 0x70, 0x69, 0x2e, 0x42,
	0x6f, 0x6c, 0x6c, 0x69, 0x6e, 0x67, 0x65, 0x72, 0x42, 0x61, 0x6e, 0x64, 0x73, 0x43, 0x6f, 0x6e,
	0x66, 0x69, 0x67, 0x73, 0x52, 0x0e, 0x42, 0x6f, 0x6c, 0x6c, 0x69, 0x6e, 0x67, 0x65, 0x72, 0x42,
	0x61, 0x6e, 0x64, 0x73, 0x22, 0x24, 0x0a, 0x12, 0x49, 0x6e, 0x64, 0x69, 0x63, 0x61, 0x74, 0x6f,
	0x72, 0x52, 0x65, 0x74, 0x75, 0x72, 0x6e, 0x52, 0x65, 0x71, 0x12, 0x0e, 0x0a, 0x02, 0x49, 0x44,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x02, 0x49, 0x44, 0x22, 0x24, 0x0a, 0x0a, 0x52, 0x73,
	0x69, 0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x73, 0x12, 0x16, 0x0a, 0x06, 0x4c, 0x65, 0x6e, 0x67,
	0x74, 0x68, 0x18, 0x01, 0x20, 0x01, 0x28, 0x05, 0x52, 0x06, 0x4c, 0x65, 0x6e, 0x67, 0x74, 0x68,
	0x22, 0x5f, 0x0a, 0x11, 0x53, 0x74, 0x6f, 0x63, 0x68, 0x61, 0x73, 0x74, 0x69, 0x63, 0x43, 0x6f,
	0x6e, 0x66, 0x69, 0x67, 0x73, 0x12, 0x16, 0x0a, 0x06, 0x4c, 0x65, 0x6e, 0x67, 0x74, 0x68, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x05, 0x52, 0x06, 0x4c, 0x65, 0x6e, 0x67, 0x74, 0x68, 0x12, 0x18, 0x0a,
	0x07, 0x53, 0x6d, 0x6f, 0x6f, 0x74, 0x68, 0x4b, 0x18, 0x02, 0x20, 0x01, 0x28, 0x05, 0x52, 0x07,
	0x53, 0x6d, 0x6f, 0x6f, 0x74, 0x68, 0x4b, 0x12, 0x18, 0x0a, 0x07, 0x53, 0x6d, 0x6f, 0x6f, 0x74,
	0x68, 0x44, 0x18, 0x03, 0x20, 0x01, 0x28, 0x05, 0x52, 0x07, 0x53, 0x6d, 0x6f, 0x6f, 0x74, 0x68,
	0x44, 0x22, 0x5b, 0x0a, 0x14, 0x4d, 0x6f, 0x76, 0x69, 0x6e, 0x67, 0x41, 0x76, 0x65, 0x72, 0x61,
	0x67, 0x65, 0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x73, 0x12, 0x16, 0x0a, 0x06, 0x4c, 0x65, 0x6e,
	0x67, 0x74, 0x68, 0x18, 0x01, 0x20, 0x01, 0x28, 0x05, 0x52, 0x06, 0x4c, 0x65, 0x6e, 0x67, 0x74,
	0x68, 0x12, 0x2b, 0x0a, 0x06, 0x53, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28,
	0x0e, 0x32, 0x13, 0x2e, 0x63, 0x68, 0x69, 0x70, 0x6d, 0x75, 0x6e, 0x6b, 0x41, 0x70, 0x69, 0x2e,
	0x53, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x52, 0x06, 0x53, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x22, 0x7a,
	0x0a, 0x15, 0x42, 0x6f, 0x6c, 0x6c, 0x69, 0x6e, 0x67, 0x65, 0x72, 0x42, 0x61, 0x6e, 0x64, 0x73,
	0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x73, 0x12, 0x16, 0x0a, 0x06, 0x4c, 0x65, 0x6e, 0x67, 0x74,
	0x68, 0x18, 0x01, 0x20, 0x01, 0x28, 0x05, 0x52, 0x06, 0x4c, 0x65, 0x6e, 0x67, 0x74, 0x68, 0x12,
	0x1c, 0x0a, 0x09, 0x44, 0x65, 0x76, 0x69, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x02, 0x20, 0x01,
	0x28, 0x05, 0x52, 0x09, 0x44, 0x65, 0x76, 0x69, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x2b, 0x0a,
	0x06, 0x53, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x13, 0x2e,
	0x63, 0x68, 0x69, 0x70, 0x6d, 0x75, 0x6e, 0x6b, 0x41, 0x70, 0x69, 0x2e, 0x53, 0x6f, 0x75, 0x72,
	0x63, 0x65, 0x52, 0x06, 0x53, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x2a, 0x4f, 0x0a, 0x0d, 0x49, 0x6e,
	0x64, 0x69, 0x63, 0x61, 0x74, 0x6f, 0x72, 0x54, 0x79, 0x70, 0x65, 0x12, 0x07, 0x0a, 0x03, 0x52,
	0x53, 0x49, 0x10, 0x00, 0x12, 0x0e, 0x0a, 0x0a, 0x53, 0x74, 0x6f, 0x63, 0x68, 0x61, 0x73, 0x74,
	0x69, 0x63, 0x10, 0x01, 0x12, 0x11, 0x0a, 0x0d, 0x4d, 0x6f, 0x76, 0x69, 0x6e, 0x67, 0x41, 0x76,
	0x65, 0x72, 0x61, 0x67, 0x65, 0x10, 0x02, 0x12, 0x12, 0x0a, 0x0e, 0x42, 0x6f, 0x6c, 0x6c, 0x69,
	0x6e, 0x67, 0x65, 0x72, 0x42, 0x61, 0x6e, 0x64, 0x73, 0x10, 0x03, 0x2a, 0x5a, 0x0a, 0x06, 0x53,
	0x6f, 0x75, 0x72, 0x63, 0x65, 0x12, 0x0a, 0x0a, 0x06, 0x43, 0x75, 0x73, 0x74, 0x6f, 0x6d, 0x10,
	0x00, 0x12, 0x09, 0x0a, 0x05, 0x4f, 0x48, 0x4c, 0x43, 0x34, 0x10, 0x01, 0x12, 0x09, 0x0a, 0x05,
	0x43, 0x6c, 0x6f, 0x73, 0x65, 0x10, 0x02, 0x12, 0x08, 0x0a, 0x04, 0x4f, 0x70, 0x65, 0x6e, 0x10,
	0x03, 0x12, 0x08, 0x0a, 0x04, 0x48, 0x69, 0x67, 0x68, 0x10, 0x04, 0x12, 0x08, 0x0a, 0x04, 0x48,
	0x4c, 0x43, 0x33, 0x10, 0x05, 0x12, 0x07, 0x0a, 0x03, 0x4c, 0x6f, 0x77, 0x10, 0x06, 0x12, 0x07,
	0x0a, 0x03, 0x48, 0x4c, 0x32, 0x10, 0x07, 0x32, 0x55, 0x0a, 0x10, 0x69, 0x6e, 0x64, 0x69, 0x63,
	0x61, 0x74, 0x6f, 0x72, 0x53, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x12, 0x41, 0x0a, 0x06, 0x52,
	0x65, 0x74, 0x75, 0x72, 0x6e, 0x12, 0x1f, 0x2e, 0x63, 0x68, 0x69, 0x70, 0x6d, 0x75, 0x6e, 0x6b,
	0x41, 0x70, 0x69, 0x2e, 0x49, 0x6e, 0x64, 0x69, 0x63, 0x61, 0x74, 0x6f, 0x72, 0x52, 0x65, 0x74,
	0x75, 0x72, 0x6e, 0x52, 0x65, 0x71, 0x1a, 0x16, 0x2e, 0x63, 0x68, 0x69, 0x70, 0x6d, 0x75, 0x6e,
	0x6b, 0x41, 0x70, 0x69, 0x2e, 0x49, 0x6e, 0x64, 0x69, 0x63, 0x61, 0x74, 0x6f, 0x72, 0x42, 0x33,
	0x5a, 0x31, 0x67, 0x69, 0x74, 0x68, 0x75, 0x62, 0x2e, 0x63, 0x6f, 0x6d, 0x2f, 0x68, 0x2d, 0x76,
	0x61, 0x72, 0x6d, 0x61, 0x7a, 0x79, 0x61, 0x72, 0x2f, 0x47, 0x61, 0x74, 0x65, 0x2f, 0x73, 0x65,
	0x72, 0x76, 0x69, 0x63, 0x65, 0x73, 0x2f, 0x63, 0x68, 0x69, 0x70, 0x6d, 0x75, 0x6e, 0x6b, 0x2f,
	0x61, 0x70, 0x69, 0x62, 0x06, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x33,
}

var (
	file_services_chipmunk_api_src_indicator_proto_rawDescOnce sync.Once
	file_services_chipmunk_api_src_indicator_proto_rawDescData = file_services_chipmunk_api_src_indicator_proto_rawDesc
)

func file_services_chipmunk_api_src_indicator_proto_rawDescGZIP() []byte {
	file_services_chipmunk_api_src_indicator_proto_rawDescOnce.Do(func() {
		file_services_chipmunk_api_src_indicator_proto_rawDescData = protoimpl.X.CompressGZIP(file_services_chipmunk_api_src_indicator_proto_rawDescData)
	})
	return file_services_chipmunk_api_src_indicator_proto_rawDescData
}

var file_services_chipmunk_api_src_indicator_proto_enumTypes = make([]protoimpl.EnumInfo, 2)
var file_services_chipmunk_api_src_indicator_proto_msgTypes = make([]protoimpl.MessageInfo, 7)
var file_services_chipmunk_api_src_indicator_proto_goTypes = []interface{}{
	(IndicatorType)(0),            // 0: chipmunkApi.IndicatorType
	(Source)(0),                   // 1: chipmunkApi.Source
	(*Indicator)(nil),             // 2: chipmunkApi.Indicator
	(*IndicatorConfigs)(nil),      // 3: chipmunkApi.IndicatorConfigs
	(*IndicatorReturnReq)(nil),    // 4: chipmunkApi.IndicatorReturnReq
	(*RsiConfigs)(nil),            // 5: chipmunkApi.RsiConfigs
	(*StochasticConfigs)(nil),     // 6: chipmunkApi.StochasticConfigs
	(*MovingAverageConfigs)(nil),  // 7: chipmunkApi.MovingAverageConfigs
	(*BollingerBandsConfigs)(nil), // 8: chipmunkApi.BollingerBandsConfigs
}
var file_services_chipmunk_api_src_indicator_proto_depIdxs = []int32{
	0, // 0: chipmunkApi.Indicator.Type:type_name -> chipmunkApi.IndicatorType
	3, // 1: chipmunkApi.Indicator.Configs:type_name -> chipmunkApi.IndicatorConfigs
	5, // 2: chipmunkApi.IndicatorConfigs.RSI:type_name -> chipmunkApi.RsiConfigs
	6, // 3: chipmunkApi.IndicatorConfigs.Stochastic:type_name -> chipmunkApi.StochasticConfigs
	7, // 4: chipmunkApi.IndicatorConfigs.MovingAverage:type_name -> chipmunkApi.MovingAverageConfigs
	8, // 5: chipmunkApi.IndicatorConfigs.BollingerBands:type_name -> chipmunkApi.BollingerBandsConfigs
	1, // 6: chipmunkApi.MovingAverageConfigs.Source:type_name -> chipmunkApi.Source
	1, // 7: chipmunkApi.BollingerBandsConfigs.Source:type_name -> chipmunkApi.Source
	4, // 8: chipmunkApi.indicatorService.Return:input_type -> chipmunkApi.IndicatorReturnReq
	2, // 9: chipmunkApi.indicatorService.Return:output_type -> chipmunkApi.Indicator
	9, // [9:10] is the sub-list for method output_type
	8, // [8:9] is the sub-list for method input_type
	8, // [8:8] is the sub-list for extension type_name
	8, // [8:8] is the sub-list for extension extendee
	0, // [0:8] is the sub-list for field type_name
}

func init() { file_services_chipmunk_api_src_indicator_proto_init() }
func file_services_chipmunk_api_src_indicator_proto_init() {
	if File_services_chipmunk_api_src_indicator_proto != nil {
		return
	}
	if !protoimpl.UnsafeEnabled {
		file_services_chipmunk_api_src_indicator_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Indicator); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_services_chipmunk_api_src_indicator_proto_msgTypes[1].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*IndicatorConfigs); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_services_chipmunk_api_src_indicator_proto_msgTypes[2].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*IndicatorReturnReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_services_chipmunk_api_src_indicator_proto_msgTypes[3].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*RsiConfigs); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_services_chipmunk_api_src_indicator_proto_msgTypes[4].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*StochasticConfigs); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_services_chipmunk_api_src_indicator_proto_msgTypes[5].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*MovingAverageConfigs); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_services_chipmunk_api_src_indicator_proto_msgTypes[6].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*BollingerBandsConfigs); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_services_chipmunk_api_src_indicator_proto_rawDesc,
			NumEnums:      2,
			NumMessages:   7,
			NumExtensions: 0,
			NumServices:   1,
		},
		GoTypes:           file_services_chipmunk_api_src_indicator_proto_goTypes,
		DependencyIndexes: file_services_chipmunk_api_src_indicator_proto_depIdxs,
		EnumInfos:         file_services_chipmunk_api_src_indicator_proto_enumTypes,
		MessageInfos:      file_services_chipmunk_api_src_indicator_proto_msgTypes,
	}.Build()
	File_services_chipmunk_api_src_indicator_proto = out.File
	file_services_chipmunk_api_src_indicator_proto_rawDesc = nil
	file_services_chipmunk_api_src_indicator_proto_goTypes = nil
	file_services_chipmunk_api_src_indicator_proto_depIdxs = nil
}
