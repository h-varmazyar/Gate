// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.28.0
// 	protoc        v3.12.4
// source: services/chipmunk/api/proto/src/wallet.proto

package proto

import (
	proto "github.com/h-varmazyar/Gate/api/proto"
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type Wallet struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// @inject_tag: json:"blocked_balance"
	BlockedBalance float64 `protobuf:"fixed64,1,opt,name=BlockedBalance,proto3" json:"blocked_balance"`
	// @inject_tag: json:"active_balance"
	ActiveBalance float64 `protobuf:"fixed64,2,opt,name=ActiveBalance,proto3" json:"active_balance"`
	// @inject_tag: json:"total_balance"
	TotalBalance float64 `protobuf:"fixed64,3,opt,name=TotalBalance,proto3" json:"total_balance"`
	// @inject_tag: json:"asset_name"
	AssetName string `protobuf:"bytes,4,opt,name=AssetName,proto3" json:"asset_name"`
}

func (x *Wallet) Reset() {
	*x = Wallet{}
	if protoimpl.UnsafeEnabled {
		mi := &file_services_chipmunk_api_proto_src_wallet_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Wallet) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Wallet) ProtoMessage() {}

func (x *Wallet) ProtoReflect() protoreflect.Message {
	mi := &file_services_chipmunk_api_proto_src_wallet_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Wallet.ProtoReflect.Descriptor instead.
func (*Wallet) Descriptor() ([]byte, []int) {
	return file_services_chipmunk_api_proto_src_wallet_proto_rawDescGZIP(), []int{0}
}

func (x *Wallet) GetBlockedBalance() float64 {
	if x != nil {
		return x.BlockedBalance
	}
	return 0
}

func (x *Wallet) GetActiveBalance() float64 {
	if x != nil {
		return x.ActiveBalance
	}
	return 0
}

func (x *Wallet) GetTotalBalance() float64 {
	if x != nil {
		return x.TotalBalance
	}
	return 0
}

func (x *Wallet) GetAssetName() string {
	if x != nil {
		return x.AssetName
	}
	return ""
}

type Reference struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// @inject_tag: json:"blocked_balance"
	BlockedBalance float64 `protobuf:"fixed64,1,opt,name=BlockedBalance,proto3" json:"blocked_balance"`
	// @inject_tag: json:"active_balance"
	ActiveBalance float64 `protobuf:"fixed64,2,opt,name=ActiveBalance,proto3" json:"active_balance"`
	// @inject_tag: json:"total_balance"
	TotalBalance float64 `protobuf:"fixed64,3,opt,name=TotalBalance,proto3" json:"total_balance"`
	// @inject_tag: json:"asset_name"
	AssetName string `protobuf:"bytes,4,opt,name=AssetName,proto3" json:"asset_name"`
}

func (x *Reference) Reset() {
	*x = Reference{}
	if protoimpl.UnsafeEnabled {
		mi := &file_services_chipmunk_api_proto_src_wallet_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Reference) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Reference) ProtoMessage() {}

func (x *Reference) ProtoReflect() protoreflect.Message {
	mi := &file_services_chipmunk_api_proto_src_wallet_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Reference.ProtoReflect.Descriptor instead.
func (*Reference) Descriptor() ([]byte, []int) {
	return file_services_chipmunk_api_proto_src_wallet_proto_rawDescGZIP(), []int{1}
}

func (x *Reference) GetBlockedBalance() float64 {
	if x != nil {
		return x.BlockedBalance
	}
	return 0
}

func (x *Reference) GetActiveBalance() float64 {
	if x != nil {
		return x.ActiveBalance
	}
	return 0
}

func (x *Reference) GetTotalBalance() float64 {
	if x != nil {
		return x.TotalBalance
	}
	return 0
}

func (x *Reference) GetAssetName() string {
	if x != nil {
		return x.AssetName
	}
	return ""
}

type Wallets struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// @inject_tag: json:"elements"
	Elements []*Wallet `protobuf:"bytes,1,rep,name=Elements,proto3" json:"elements"`
	// @inject_tag: json:"count"
	Count int64 `protobuf:"varint,2,opt,name=Count,proto3" json:"count"`
}

func (x *Wallets) Reset() {
	*x = Wallets{}
	if protoimpl.UnsafeEnabled {
		mi := &file_services_chipmunk_api_proto_src_wallet_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Wallets) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Wallets) ProtoMessage() {}

func (x *Wallets) ProtoReflect() protoreflect.Message {
	mi := &file_services_chipmunk_api_proto_src_wallet_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Wallets.ProtoReflect.Descriptor instead.
func (*Wallets) Descriptor() ([]byte, []int) {
	return file_services_chipmunk_api_proto_src_wallet_proto_rawDescGZIP(), []int{2}
}

func (x *Wallets) GetElements() []*Wallet {
	if x != nil {
		return x.Elements
	}
	return nil
}

func (x *Wallets) GetCount() int64 {
	if x != nil {
		return x.Count
	}
	return 0
}

type ReturnWalletReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// @inject_tag: json:"asset_name"
	AssetName string `protobuf:"bytes,1,opt,name=AssetName,proto3" json:"asset_name"`
}

func (x *ReturnWalletReq) Reset() {
	*x = ReturnWalletReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_services_chipmunk_api_proto_src_wallet_proto_msgTypes[3]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ReturnWalletReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ReturnWalletReq) ProtoMessage() {}

func (x *ReturnWalletReq) ProtoReflect() protoreflect.Message {
	mi := &file_services_chipmunk_api_proto_src_wallet_proto_msgTypes[3]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ReturnWalletReq.ProtoReflect.Descriptor instead.
func (*ReturnWalletReq) Descriptor() ([]byte, []int) {
	return file_services_chipmunk_api_proto_src_wallet_proto_rawDescGZIP(), []int{3}
}

func (x *ReturnWalletReq) GetAssetName() string {
	if x != nil {
		return x.AssetName
	}
	return ""
}

type ReturnReferenceReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// @inject_tag: json:"reference_name"
	ReferenceName string `protobuf:"bytes,1,opt,name=ReferenceName,proto3" json:"reference_name"`
}

func (x *ReturnReferenceReq) Reset() {
	*x = ReturnReferenceReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_services_chipmunk_api_proto_src_wallet_proto_msgTypes[4]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ReturnReferenceReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ReturnReferenceReq) ProtoMessage() {}

func (x *ReturnReferenceReq) ProtoReflect() protoreflect.Message {
	mi := &file_services_chipmunk_api_proto_src_wallet_proto_msgTypes[4]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ReturnReferenceReq.ProtoReflect.Descriptor instead.
func (*ReturnReferenceReq) Descriptor() ([]byte, []int) {
	return file_services_chipmunk_api_proto_src_wallet_proto_rawDescGZIP(), []int{4}
}

func (x *ReturnReferenceReq) GetReferenceName() string {
	if x != nil {
		return x.ReferenceName
	}
	return ""
}

type StartWorkerRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// @inject_tag: json:"brokerage_id"
	BrokerageID string `protobuf:"bytes,1,opt,name=BrokerageID,proto3" json:"brokerage_id"`
}

func (x *StartWorkerRequest) Reset() {
	*x = StartWorkerRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_services_chipmunk_api_proto_src_wallet_proto_msgTypes[5]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *StartWorkerRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*StartWorkerRequest) ProtoMessage() {}

func (x *StartWorkerRequest) ProtoReflect() protoreflect.Message {
	mi := &file_services_chipmunk_api_proto_src_wallet_proto_msgTypes[5]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use StartWorkerRequest.ProtoReflect.Descriptor instead.
func (*StartWorkerRequest) Descriptor() ([]byte, []int) {
	return file_services_chipmunk_api_proto_src_wallet_proto_rawDescGZIP(), []int{5}
}

func (x *StartWorkerRequest) GetBrokerageID() string {
	if x != nil {
		return x.BrokerageID
	}
	return ""
}

var File_services_chipmunk_api_proto_src_wallet_proto protoreflect.FileDescriptor

var file_services_chipmunk_api_proto_src_wallet_proto_rawDesc = []byte{
	0x0a, 0x2c, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x73, 0x2f, 0x63, 0x68, 0x69, 0x70, 0x6d,
	0x75, 0x6e, 0x6b, 0x2f, 0x61, 0x70, 0x69, 0x2f, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2f, 0x73, 0x72,
	0x63, 0x2f, 0x77, 0x61, 0x6c, 0x6c, 0x65, 0x74, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x12, 0x0b,
	0x63, 0x68, 0x69, 0x70, 0x6d, 0x75, 0x6e, 0x6b, 0x41, 0x70, 0x69, 0x1a, 0x18, 0x61, 0x70, 0x69,
	0x2f, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2f, 0x73, 0x72, 0x63, 0x2f, 0x6d, 0x69, 0x73, 0x63, 0x2e,
	0x70, 0x72, 0x6f, 0x74, 0x6f, 0x22, 0x98, 0x01, 0x0a, 0x06, 0x57, 0x61, 0x6c, 0x6c, 0x65, 0x74,
	0x12, 0x26, 0x0a, 0x0e, 0x42, 0x6c, 0x6f, 0x63, 0x6b, 0x65, 0x64, 0x42, 0x61, 0x6c, 0x61, 0x6e,
	0x63, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x01, 0x52, 0x0e, 0x42, 0x6c, 0x6f, 0x63, 0x6b, 0x65,
	0x64, 0x42, 0x61, 0x6c, 0x61, 0x6e, 0x63, 0x65, 0x12, 0x24, 0x0a, 0x0d, 0x41, 0x63, 0x74, 0x69,
	0x76, 0x65, 0x42, 0x61, 0x6c, 0x61, 0x6e, 0x63, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x01, 0x52,
	0x0d, 0x41, 0x63, 0x74, 0x69, 0x76, 0x65, 0x42, 0x61, 0x6c, 0x61, 0x6e, 0x63, 0x65, 0x12, 0x22,
	0x0a, 0x0c, 0x54, 0x6f, 0x74, 0x61, 0x6c, 0x42, 0x61, 0x6c, 0x61, 0x6e, 0x63, 0x65, 0x18, 0x03,
	0x20, 0x01, 0x28, 0x01, 0x52, 0x0c, 0x54, 0x6f, 0x74, 0x61, 0x6c, 0x42, 0x61, 0x6c, 0x61, 0x6e,
	0x63, 0x65, 0x12, 0x1c, 0x0a, 0x09, 0x41, 0x73, 0x73, 0x65, 0x74, 0x4e, 0x61, 0x6d, 0x65, 0x18,
	0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x41, 0x73, 0x73, 0x65, 0x74, 0x4e, 0x61, 0x6d, 0x65,
	0x22, 0x9b, 0x01, 0x0a, 0x09, 0x52, 0x65, 0x66, 0x65, 0x72, 0x65, 0x6e, 0x63, 0x65, 0x12, 0x26,
	0x0a, 0x0e, 0x42, 0x6c, 0x6f, 0x63, 0x6b, 0x65, 0x64, 0x42, 0x61, 0x6c, 0x61, 0x6e, 0x63, 0x65,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x01, 0x52, 0x0e, 0x42, 0x6c, 0x6f, 0x63, 0x6b, 0x65, 0x64, 0x42,
	0x61, 0x6c, 0x61, 0x6e, 0x63, 0x65, 0x12, 0x24, 0x0a, 0x0d, 0x41, 0x63, 0x74, 0x69, 0x76, 0x65,
	0x42, 0x61, 0x6c, 0x61, 0x6e, 0x63, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x01, 0x52, 0x0d, 0x41,
	0x63, 0x74, 0x69, 0x76, 0x65, 0x42, 0x61, 0x6c, 0x61, 0x6e, 0x63, 0x65, 0x12, 0x22, 0x0a, 0x0c,
	0x54, 0x6f, 0x74, 0x61, 0x6c, 0x42, 0x61, 0x6c, 0x61, 0x6e, 0x63, 0x65, 0x18, 0x03, 0x20, 0x01,
	0x28, 0x01, 0x52, 0x0c, 0x54, 0x6f, 0x74, 0x61, 0x6c, 0x42, 0x61, 0x6c, 0x61, 0x6e, 0x63, 0x65,
	0x12, 0x1c, 0x0a, 0x09, 0x41, 0x73, 0x73, 0x65, 0x74, 0x4e, 0x61, 0x6d, 0x65, 0x18, 0x04, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x09, 0x41, 0x73, 0x73, 0x65, 0x74, 0x4e, 0x61, 0x6d, 0x65, 0x22, 0x50,
	0x0a, 0x07, 0x57, 0x61, 0x6c, 0x6c, 0x65, 0x74, 0x73, 0x12, 0x2f, 0x0a, 0x08, 0x45, 0x6c, 0x65,
	0x6d, 0x65, 0x6e, 0x74, 0x73, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x13, 0x2e, 0x63, 0x68,
	0x69, 0x70, 0x6d, 0x75, 0x6e, 0x6b, 0x41, 0x70, 0x69, 0x2e, 0x57, 0x61, 0x6c, 0x6c, 0x65, 0x74,
	0x52, 0x08, 0x45, 0x6c, 0x65, 0x6d, 0x65, 0x6e, 0x74, 0x73, 0x12, 0x14, 0x0a, 0x05, 0x43, 0x6f,
	0x75, 0x6e, 0x74, 0x18, 0x02, 0x20, 0x01, 0x28, 0x03, 0x52, 0x05, 0x43, 0x6f, 0x75, 0x6e, 0x74,
	0x22, 0x2f, 0x0a, 0x0f, 0x52, 0x65, 0x74, 0x75, 0x72, 0x6e, 0x57, 0x61, 0x6c, 0x6c, 0x65, 0x74,
	0x52, 0x65, 0x71, 0x12, 0x1c, 0x0a, 0x09, 0x41, 0x73, 0x73, 0x65, 0x74, 0x4e, 0x61, 0x6d, 0x65,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x41, 0x73, 0x73, 0x65, 0x74, 0x4e, 0x61, 0x6d,
	0x65, 0x22, 0x3a, 0x0a, 0x12, 0x52, 0x65, 0x74, 0x75, 0x72, 0x6e, 0x52, 0x65, 0x66, 0x65, 0x72,
	0x65, 0x6e, 0x63, 0x65, 0x52, 0x65, 0x71, 0x12, 0x24, 0x0a, 0x0d, 0x52, 0x65, 0x66, 0x65, 0x72,
	0x65, 0x6e, 0x63, 0x65, 0x4e, 0x61, 0x6d, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0d,
	0x52, 0x65, 0x66, 0x65, 0x72, 0x65, 0x6e, 0x63, 0x65, 0x4e, 0x61, 0x6d, 0x65, 0x22, 0x36, 0x0a,
	0x12, 0x53, 0x74, 0x61, 0x72, 0x74, 0x57, 0x6f, 0x72, 0x6b, 0x65, 0x72, 0x52, 0x65, 0x71, 0x75,
	0x65, 0x73, 0x74, 0x12, 0x20, 0x0a, 0x0b, 0x42, 0x72, 0x6f, 0x6b, 0x65, 0x72, 0x61, 0x67, 0x65,
	0x49, 0x44, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x42, 0x72, 0x6f, 0x6b, 0x65, 0x72,
	0x61, 0x67, 0x65, 0x49, 0x44, 0x32, 0xa7, 0x02, 0x0a, 0x0e, 0x57, 0x61, 0x6c, 0x6c, 0x65, 0x74,
	0x73, 0x53, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x12, 0x27, 0x0a, 0x04, 0x4c, 0x69, 0x73, 0x74,
	0x12, 0x09, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x56, 0x6f, 0x69, 0x64, 0x1a, 0x14, 0x2e, 0x63, 0x68,
	0x69, 0x70, 0x6d, 0x75, 0x6e, 0x6b, 0x41, 0x70, 0x69, 0x2e, 0x57, 0x61, 0x6c, 0x6c, 0x65, 0x74,
	0x73, 0x12, 0x39, 0x0a, 0x0b, 0x53, 0x74, 0x61, 0x72, 0x74, 0x57, 0x6f, 0x72, 0x6b, 0x65, 0x72,
	0x12, 0x1f, 0x2e, 0x63, 0x68, 0x69, 0x70, 0x6d, 0x75, 0x6e, 0x6b, 0x41, 0x70, 0x69, 0x2e, 0x53,
	0x74, 0x61, 0x72, 0x74, 0x57, 0x6f, 0x72, 0x6b, 0x65, 0x72, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73,
	0x74, 0x1a, 0x09, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x56, 0x6f, 0x69, 0x64, 0x12, 0x22, 0x0a, 0x0a,
	0x53, 0x74, 0x6f, 0x70, 0x57, 0x6f, 0x72, 0x6b, 0x65, 0x72, 0x12, 0x09, 0x2e, 0x61, 0x70, 0x69,
	0x2e, 0x56, 0x6f, 0x69, 0x64, 0x1a, 0x09, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x56, 0x6f, 0x69, 0x64,
	0x12, 0x41, 0x0a, 0x0c, 0x52, 0x65, 0x74, 0x75, 0x72, 0x6e, 0x57, 0x61, 0x6c, 0x6c, 0x65, 0x74,
	0x12, 0x1c, 0x2e, 0x63, 0x68, 0x69, 0x70, 0x6d, 0x75, 0x6e, 0x6b, 0x41, 0x70, 0x69, 0x2e, 0x52,
	0x65, 0x74, 0x75, 0x72, 0x6e, 0x57, 0x61, 0x6c, 0x6c, 0x65, 0x74, 0x52, 0x65, 0x71, 0x1a, 0x13,
	0x2e, 0x63, 0x68, 0x69, 0x70, 0x6d, 0x75, 0x6e, 0x6b, 0x41, 0x70, 0x69, 0x2e, 0x57, 0x61, 0x6c,
	0x6c, 0x65, 0x74, 0x12, 0x4a, 0x0a, 0x0f, 0x52, 0x65, 0x74, 0x75, 0x72, 0x6e, 0x52, 0x65, 0x66,
	0x65, 0x72, 0x65, 0x6e, 0x63, 0x65, 0x12, 0x1f, 0x2e, 0x63, 0x68, 0x69, 0x70, 0x6d, 0x75, 0x6e,
	0x6b, 0x41, 0x70, 0x69, 0x2e, 0x52, 0x65, 0x74, 0x75, 0x72, 0x6e, 0x52, 0x65, 0x66, 0x65, 0x72,
	0x65, 0x6e, 0x63, 0x65, 0x52, 0x65, 0x71, 0x1a, 0x16, 0x2e, 0x63, 0x68, 0x69, 0x70, 0x6d, 0x75,
	0x6e, 0x6b, 0x41, 0x70, 0x69, 0x2e, 0x52, 0x65, 0x66, 0x65, 0x72, 0x65, 0x6e, 0x63, 0x65, 0x42,
	0x39, 0x5a, 0x37, 0x67, 0x69, 0x74, 0x68, 0x75, 0x62, 0x2e, 0x63, 0x6f, 0x6d, 0x2f, 0x68, 0x2d,
	0x76, 0x61, 0x72, 0x6d, 0x61, 0x7a, 0x79, 0x61, 0x72, 0x2f, 0x47, 0x61, 0x74, 0x65, 0x2f, 0x73,
	0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x73, 0x2f, 0x63, 0x68, 0x69, 0x70, 0x6d, 0x75, 0x6e, 0x6b,
	0x2f, 0x61, 0x70, 0x69, 0x2f, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x06, 0x70, 0x72, 0x6f, 0x74,
	0x6f, 0x33,
}

var (
	file_services_chipmunk_api_proto_src_wallet_proto_rawDescOnce sync.Once
	file_services_chipmunk_api_proto_src_wallet_proto_rawDescData = file_services_chipmunk_api_proto_src_wallet_proto_rawDesc
)

func file_services_chipmunk_api_proto_src_wallet_proto_rawDescGZIP() []byte {
	file_services_chipmunk_api_proto_src_wallet_proto_rawDescOnce.Do(func() {
		file_services_chipmunk_api_proto_src_wallet_proto_rawDescData = protoimpl.X.CompressGZIP(file_services_chipmunk_api_proto_src_wallet_proto_rawDescData)
	})
	return file_services_chipmunk_api_proto_src_wallet_proto_rawDescData
}

var file_services_chipmunk_api_proto_src_wallet_proto_msgTypes = make([]protoimpl.MessageInfo, 6)
var file_services_chipmunk_api_proto_src_wallet_proto_goTypes = []interface{}{
	(*Wallet)(nil),             // 0: chipmunkApi.Wallet
	(*Reference)(nil),          // 1: chipmunkApi.Reference
	(*Wallets)(nil),            // 2: chipmunkApi.Wallets
	(*ReturnWalletReq)(nil),    // 3: chipmunkApi.ReturnWalletReq
	(*ReturnReferenceReq)(nil), // 4: chipmunkApi.ReturnReferenceReq
	(*StartWorkerRequest)(nil), // 5: chipmunkApi.StartWorkerRequest
	(*proto.Void)(nil),         // 6: api.Void
}
var file_services_chipmunk_api_proto_src_wallet_proto_depIdxs = []int32{
	0, // 0: chipmunkApi.Wallets.Elements:type_name -> chipmunkApi.Wallet
	6, // 1: chipmunkApi.WalletsService.List:input_type -> api.Void
	5, // 2: chipmunkApi.WalletsService.StartWorker:input_type -> chipmunkApi.StartWorkerRequest
	6, // 3: chipmunkApi.WalletsService.StopWorker:input_type -> api.Void
	3, // 4: chipmunkApi.WalletsService.ReturnWallet:input_type -> chipmunkApi.ReturnWalletReq
	4, // 5: chipmunkApi.WalletsService.ReturnReference:input_type -> chipmunkApi.ReturnReferenceReq
	2, // 6: chipmunkApi.WalletsService.List:output_type -> chipmunkApi.Wallets
	6, // 7: chipmunkApi.WalletsService.StartWorker:output_type -> api.Void
	6, // 8: chipmunkApi.WalletsService.StopWorker:output_type -> api.Void
	0, // 9: chipmunkApi.WalletsService.ReturnWallet:output_type -> chipmunkApi.Wallet
	1, // 10: chipmunkApi.WalletsService.ReturnReference:output_type -> chipmunkApi.Reference
	6, // [6:11] is the sub-list for method output_type
	1, // [1:6] is the sub-list for method input_type
	1, // [1:1] is the sub-list for extension type_name
	1, // [1:1] is the sub-list for extension extendee
	0, // [0:1] is the sub-list for field type_name
}

func init() { file_services_chipmunk_api_proto_src_wallet_proto_init() }
func file_services_chipmunk_api_proto_src_wallet_proto_init() {
	if File_services_chipmunk_api_proto_src_wallet_proto != nil {
		return
	}
	if !protoimpl.UnsafeEnabled {
		file_services_chipmunk_api_proto_src_wallet_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Wallet); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_services_chipmunk_api_proto_src_wallet_proto_msgTypes[1].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Reference); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_services_chipmunk_api_proto_src_wallet_proto_msgTypes[2].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Wallets); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_services_chipmunk_api_proto_src_wallet_proto_msgTypes[3].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ReturnWalletReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_services_chipmunk_api_proto_src_wallet_proto_msgTypes[4].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ReturnReferenceReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_services_chipmunk_api_proto_src_wallet_proto_msgTypes[5].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*StartWorkerRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_services_chipmunk_api_proto_src_wallet_proto_rawDesc,
			NumEnums:      0,
			NumMessages:   6,
			NumExtensions: 0,
			NumServices:   1,
		},
		GoTypes:           file_services_chipmunk_api_proto_src_wallet_proto_goTypes,
		DependencyIndexes: file_services_chipmunk_api_proto_src_wallet_proto_depIdxs,
		MessageInfos:      file_services_chipmunk_api_proto_src_wallet_proto_msgTypes,
	}.Build()
	File_services_chipmunk_api_proto_src_wallet_proto = out.File
	file_services_chipmunk_api_proto_src_wallet_proto_rawDesc = nil
	file_services_chipmunk_api_proto_src_wallet_proto_goTypes = nil
	file_services_chipmunk_api_proto_src_wallet_proto_depIdxs = nil
}
