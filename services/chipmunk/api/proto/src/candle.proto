syntax = "proto3";
package chipmunkApi;
option go_package = "github.com/h-varmazyar/Gate/services/chipmunk/api/proto";
import "services/chipmunk/api/proto/src/indicator.proto";
import "services/chipmunk/api/proto/src/market.proto";
import "services/chipmunk/api/proto/src/resolution.proto";
import "api/proto/src/misc.proto";

service CandleService {
  rpc List(CandleListReq) returns (Candles);
  rpc Update(CandleUpdateReq) returns (Candle);
  rpc BulkUpdate(CandleBulkUpdateReq) returns (api.Void);
  rpc DownloadPrimaryCandles(DownloadPrimaryCandlesReq) returns (api.Void);
}

message Candle {
  // @inject_tag: json:"updated_at"
  int64 UpdatedAt = 1;
  // @inject_tag: json:"created_at"
  int64 CreatedAt = 2;
  // @inject_tag: json:"volume"
  double Volume = 3;
  // @inject_tag: json:"amount"
  double Amount = 4;
  // @inject_tag: json:"close"
  double Close = 5;
  // @inject_tag: json:"open"
  double Open = 6;
  // @inject_tag: json:"time"
  int64 Time = 7;
  // @inject_tag: json:"high"
  double High = 8;
  // @inject_tag: json:"low"
  double Low = 9;
  // @inject_tag: json:"id"
  uint64 ID = 10;
  // @inject_tag: json:"indicator_values"
  map<string, indicatorValue> IndicatorValues = 11; // key is indicator id
  // @inject_tag: json:"market_id"
  string MarketID = 12;
  // @inject_tag: json:"resolution_id"
  string ResolutionID = 13;
}

message Candles {
  // @inject_tag: json:"elements"
  repeated Candle Elements = 1;
  // @inject_tag: json:"count"
  int64 Count = 2;
}

message AddMarketReq {
  // @inject_tag: json:"brokerage_id"
  string BrokerageID = 1;
  // @inject_tag: json:"market"
  string MarketID = 2;
}

message CandleListReq {
  // @inject_tag: json:"resolution_id"
  string ResolutionID = 1;
  // @inject_tag: json:"market_id"
  string MarketID = 2;
  // @inject_tag: json:"count"
  int32 Count = 3;
}

message CandleUpdateReq {
  // @inject_tag: json:"volume"
  double Volume = 1;
  // @inject_tag: json:"close"
  double Close = 2;
  // @inject_tag: json:"open"
  double Open = 3;
  // @inject_tag: json:"date"
  int64 Date = 4;
  // @inject_tag: json:"high"
  double High = 5;
  // @inject_tag: json:"low"
  double Low = 6;
  // @inject_tag: json:"market"
  string Market = 7;
  // @inject_tag: json:"platform"
  api.Platform Platform = 8;
}

message CandleBulkUpdateReq {
  message ticker{
    // @inject_tag: json:"volume"
    double Volume = 1;
    // @inject_tag: json:"close"
    double Close = 2;
    // @inject_tag: json:"open"
    double Open = 3;
    // @inject_tag: json:"high"
    double High = 4;
    // @inject_tag: json:"low"
    double Low = 5;
  }
  // @inject_tag: json:"date"
  int64 Date = 1;
  // @inject_tag: json:"tickers"
  map<string, ticker> tickers = 2;//key is market id
  // @inject_tag: json:"platform"
  api.Platform Platform = 3;
}

message DownloadPrimaryCandlesReq {
  // @inject_tag: json:"platform"
  api.Platform Platform = 1;
  // @inject_tag: json:"markets"
  Markets Markets = 2;
  // @inject_tag: json:"resolutions"
  Resolutions Resolutions = 3;
}