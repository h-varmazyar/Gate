syntax = "proto3";
package chipmunkApi;
option go_package = "github.com/h-varmazyar/Gate/services/chipmunk/api/proto";

service indicatorService{
  rpc Return(IndicatorReturnReq) returns (Indicator);
  rpc List(IndicatorListReq) returns (Indicators);
}

enum Source {
  Custom = 0;
  OHLC4 = 1;
  Close = 2;
  Open = 3;
  High = 4;
  HLC3 = 5;
  Low = 6;
  HL2 = 7;
}

message Indicator {
  enum type{
    All = 0;
    RSI = 1;
    Stochastic = 2;
    MovingAverage = 3;
    BollingerBands = 4;
  }
  // @inject_tag: json:"id"
  string ID = 1;
  // @inject_tag: json:"name"
  type Type = 2;
  // @inject_tag: json:"configs"
  IndicatorConfigs Configs = 3;
}

message IndicatorConfigs {
  // @inject_tag: json:"rsi,omitempty"
  RsiConfigs RSI = 1;
  // @inject_tag: json:"stochastic,omitempty"
  StochasticConfigs Stochastic = 2;
  // @inject_tag: json:"moving_average,omitempty"
  MovingAverageConfigs MovingAverage = 3;
  // @inject_tag: json:"bollinger_bands,omitempty"
  BollingerBandsConfigs BollingerBands = 4;
}

message indicatorValue{
  // @inject_tag: json:"type"
  Indicator.type Type = 1;
  // @inject_tag: json:"value"
  oneof Value{
    // @inject_tag: json:"bollinger_band,omitempty"
    BollingerBands BollingerBands = 2;
    // @inject_tag: json:"moving_average,omitempty"
    MovingAverage MovingAverage = 3;
    // @inject_tag: json:"stochastic,omitempty"
    Stochastic Stochastic = 4;
    // @inject_tag: json:"rsi,omitempty"
    RSI RSI = 5;
  }
}

message BollingerBands {
  // @inject_tag: json:"upper_band"
  double UpperBand = 1;
  // @inject_tag: json:"lower_band"
  double LowerBand = 2;
  // @inject_tag: json:"ma"
  double MA = 3;
}

message MovingAverage {
  // @inject_tag: json:"simple"
  double Simple = 1;
  // @inject_tag: json:"exponential"
  double Exponential = 2;
}

message Stochastic {
  // @inject_tag: json:"index_k"
  double IndexK = 1;
  // @inject_tag: json:"index_d"
  double IndexD = 2;
}

message RSI {
  // @inject_tag: json:"rsi"
  double RSI = 1;
}

message IndicatorReturnReq{
  // @inject_tag: json:"id"
  string ID = 1;
}

message RsiConfigs{
  // @inject_tag: json:"length"
  int32 Length = 1;
}

message StochasticConfigs{
  // @inject_tag: json:"length"
  int32 Length = 1;
  // @inject_tag: json:"smooth_k"
  int32 SmoothK = 2;
  // @inject_tag: json:"smooth_d"
  int32 SmoothD = 3;
}

message MovingAverageConfigs{
  // @inject_tag: json:"length"
  int32 Length = 1;
  // @inject_tag: json:"source"
  Source Source = 2;
}

message BollingerBandsConfigs{
  // @inject_tag: json:"length"
  int32 Length = 1;
  // @inject_tag: json:"deviation"
  int32 Deviation = 2;
  // @inject_tag: json:"source"
  Source Source = 3;
}

message IndicatorListReq{
  // @inject_tag: json:"type"
  Indicator.type Type = 1;
}

message Indicators{
  // @inject_tag: json:"elements"
  repeated Indicator Elements = 1;
}
